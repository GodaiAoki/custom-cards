<<<<<<< HEAD
<<<<<<< HEAD
{"version":3,"names":[],"mappings":"","sources":["SampleCards.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SampleCards = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"/Users/frank/Documents/Projects/CustomCards/modules/HelloWorld/HelloWorld.jsx\":[function(require,module,exports){\n'use strict';\n\nvar HelloWorld = {};\nHelloWorld.HelloWorld = require('./cards/HelloWorld.jsx');\nHelloWorld.HelloWorldProperties = require('./customization/HelloWorldProperties.jsx');\nHelloWorld.HelloWorldStore = require('./stores/HelloWorldStore.js');\n\nmodule.exports = HelloWorld;\n\n},{\"./cards/HelloWorld.jsx\":\"/Users/frank/Documents/Projects/CustomCards/modules/HelloWorld/cards/HelloWorld.jsx\",\"./customization/HelloWorldProperties.jsx\":\"/Users/frank/Documents/Projects/CustomCards/modules/HelloWorld/customization/HelloWorldProperties.jsx\",\"./stores/HelloWorldStore.js\":\"/Users/frank/Documents/Projects/CustomCards/modules/HelloWorld/stores/HelloWorldStore.js\"}],\"/Users/frank/Documents/Projects/CustomCards/modules/HelloWorld/cards/HelloWorld.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar HelloWorldStore = require('../stores/HelloWorldStore.js');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\",\n    backgroundSize: \"100%\",\n    backgroundRepeat: \"no-repeat\"\n  },\n  counter: {\n    fontSize: \"60px\",\n    textAlign: \"center\",\n    width: \"100%\",\n    paddingTop: \"20px\"\n  }\n};\n\nvar HelloWorld = React.createClass({\n  displayName: 'HelloWorld',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string,\n    helloColor: RPT.number\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      helloColor: 0\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      message: \"n/a\",\n      count: -1\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    HelloWorldStore.listen(this.onUpdate);\n    HelloWorldStore.Actions.sayHello(\"Hi there!\");\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.isMounted()) {\n      if (payload.helloMessage || payload.helloCount !== undefined) {\n        var model = {};\n        if (payload.helloMessage) {\n          model.message = payload.helloMessage;\n        }\n        if (payload.helloCount) {\n          model.count = payload.helloCount;\n        }\n        this.setState(model);\n      }\n    }\n  },\n\n  render: function render() {\n    var self = this;\n    if (this.state.message && this.state.count > -1) {\n\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n      style = Object.assign(style, { color: this.props.theme.schemes[this.props.helloColor].normal });\n\n      if (this.props.wrapper.width > 2) {\n        // we could link to the kitty image in the resource folder but the url depends on the location of the package.\n        // Therefore we point to the original on the Web.\n        style = Object.assign(style, { backgroundImage: \"url('http://wallpaper.pickywallpapers.com/1366x768/little-kitty.jpg')\" });\n      }\n\n      return React.createElement(\n        'div',\n        { style: style },\n        'The store says:',\n        React.createElement(\n          'div',\n          { className: 'helloWorld' },\n          this.state.message\n        ),\n        React.createElement(\n          'div',\n          { style: styles.counter },\n          this.state.count\n        )\n      );\n    } else {\n      return React.createElement(\n        'div',\n        { style: styles.style },\n        React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: false })\n      );\n    }\n  }\n});\n\nmodule.exports = HelloWorld;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../stores/HelloWorldStore.js\":\"/Users/frank/Documents/Projects/CustomCards/modules/HelloWorld/stores/HelloWorldStore.js\"}],\"/Users/frank/Documents/Projects/CustomCards/modules/HelloWorld/customization/HelloWorldProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar RPT = React.PropTypes;\nvar InputField = IoTFCommon.InputField;\nvar Label = IoTFCommon.Label;\nvar ColorSelection = IoTFCommon.ColorSelection;\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n};\n\nvar HelloWorldProperties = React.createClass({\n  displayName: 'HelloWorldProperties',\n\n  propTypes: {\n    helloColor: RPT.string,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      helloColor: 0\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      helloColor: this.props.helloColor\n    };\n  },\n\n  onColorChanged: function onColorChanged(value) {\n    this.setState({\n      helloColor: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: this.props.nls.resolve('ColorScheme'), theme: this.props.theme },\n                  React.createElement(ColorSelection, { theme: this.props.theme, onChange: this.onColorChanged, initialSelection: this.state.helloColor })\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = HelloWorldProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/CustomCards/modules/HelloWorld/stores/HelloWorldStore.js\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\n\nvar Actions = Reflux.createActions(['sayHello']);\n\nvar HelloWorldStore = Reflux.createStore({\n\n  Actions: Actions,\n  helloCount: 0,\n\n  init: function init() {\n    this.listenTo(Actions.sayHello, this.onSayHello);\n    var self = this;\n    setInterval(function () {\n      self.helloCount++;\n      self.trigger({\n        helloCount: self.helloCount\n      });\n    }, 1000);\n  },\n\n  onSayHello: function onSayHello(payload) {\n    this.trigger({\n      helloMessage: \"Hello from the store!\",\n      helloCount: this.helloCount\n    });\n  }\n\n});\n\nmodule.exports = HelloWorldStore;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/CustomCards/modules/Modules.jsx\":[function(require,module,exports){\n'use strict';\n\nvar Modules = {};\nModules.HelloWorld = require('./HelloWorld/HelloWorld.jsx');\nmodule.exports = Modules;\n\n},{\"./HelloWorld/HelloWorld.jsx\":\"/Users/frank/Documents/Projects/CustomCards/modules/HelloWorld/HelloWorld.jsx\"}]},{},[\"/Users/frank/Documents/Projects/CustomCards/modules/Modules.jsx\"])(\"/Users/frank/Documents/Projects/CustomCards/modules/Modules.jsx\")\n});"],"file":"SampleCards.js","sourceRoot":"/source/"}
=======
{"version":3,"names":[],"mappings":"","sources":["SampleCards.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SampleCards = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/ElevatorDemo.jsx\":[function(require,module,exports){\n'use strict';\n\nvar ElevatorDemo = {};\nElevatorDemo.Elevator = require('./cards/Elevator.jsx');\nElevatorDemo.ElevatorProperties = require('./customization/ElevatorProperties.jsx');\n\nmodule.exports = ElevatorDemo;\n\n},{\"./cards/Elevator.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/cards/Elevator.jsx\",\"./customization/ElevatorProperties.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/customization/ElevatorProperties.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/cards/Elevator.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\nvar LoadIndicator = IoTFCommon.LoadIndicator;\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\"\n  },\n  empty: {\n    padding: \"20px\"\n  },\n  scroller: {\n    width: \"100%\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    transition: \"top 0.5s ease\"\n  },\n  floor: {\n    width: \"110px\",\n    fontSize: \"60px\",\n    fontWeight: 100,\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    lineHeight: \"120px\",\n    transition: \"fontSize 1s ease\"\n  },\n  highlight: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"120px\",\n    opacity: 0.5,\n    transition: \"bottom 1s ease\"\n  },\n  cabin: {\n    position: \"absolute\",\n    height: \"100px\",\n    width: \"60px\",\n    fontWeight: 200,\n    border: \"3px solid grey\",\n    backgroundColor: \"white\",\n    left: \"120px\",\n    transition: \"bottom 1s ease\",\n    verticalAlign: \"middle\",\n    textAlign: \"center\",\n    fontSize: \"24px\",\n    lineHeight: \"normal\",\n    paddingTop: \"20px\"\n  },\n  weightBar: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"0px\",\n    bottom: \"0px\",\n    left: \"0px\",\n    transition: \"height 1s ease\",\n    overflow: \"hidden\"\n  },\n  weightBarContainer: {\n    height: \"100px\",\n    width: \"100%\",\n    position: \"absolute\",\n    bottom: \"-2px\",\n    lineHeight: \"normal\",\n    paddingTop: \"20px\"\n  },\n  scale: {\n    position: \"absolute\",\n    top: \"60px\",\n    bottom: \"60px\",\n    width: \"20px\",\n    right: \"13px\"\n  },\n  scaleAxis: {\n    height: \"100%\",\n    position: \"absolute\",\n    left: \"9px\",\n    borderLeft: \"3px solid grey\"\n  },\n  tick: {\n    fontSize: \"20px\",\n    lineHeight: \"20px\",\n    backgroundColor: \"white\",\n    width: \"30px\",\n    position: \"absolute\",\n    padding: \"4px 0px\",\n    textAlign: \"center\",\n    left: \"-5px\"\n  },\n  simpleTick: {\n    borderBottom: \"3px solid grey\",\n    width: \"9px\",\n    position: \"absolute\",\n    left: \"5px\"\n  },\n  heightLabel: {\n    position: \"absolute\",\n    fontSize: \"20px\",\n    lineHeight: \"30px\",\n    height: \"30px\",\n    right: \"48px\",\n    width: \"65px\",\n    textAlign: \"right\",\n    paddingRight: \"0px\",\n    transition: \"bottom 1s ease\"\n  },\n  labelText: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\"\n  },\n  pointer: {\n    width: \"20px\",\n    height: \"20px\",\n    transform: \"rotate(45deg)\",\n    right: \"-10px\",\n    top: \"6px\",\n    position: \"absolute\"\n  }\n};\n\nvar Elevator = React.createClass({\n  displayName: 'Elevator',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    demo: RPT.bool,\n    plots: RPT.array,\n    minFloor: RPT.number,\n    maxFloor: RPT.number,\n    minHeight: RPT.number,\n    maxHeight: RPT.number,\n    capacity: RPT.number,\n    floor: RPT.string,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      plots: [],\n      data: {}\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {};\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        IoTFDeviceStore.Actions.startPropertyWatch(plot.device, plot.event, plot.property);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var model = {};\n\n    model = this.addData(payload, \"floor\", model);\n    model = this.addData(payload, \"height\", model);\n    model = this.addData(payload, \"weight\", model);\n\n    if (Object.keys(model).length > 0) {\n      model.timestamp = new Date().getTime();\n      var self = this;\n      setTimeout(function () {\n        self.setState(model);\n      }, 1);\n    }\n  },\n\n  getPlot: function getPlot(type) {\n    var prop = this.props[type];\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot.id == prop) {\n        return plot;\n      }\n    }\n    return null;\n  },\n\n  addData: function addData(payload, type, model) {\n    var plot = this.getPlot(type);\n\n    if (plot) {\n      if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n        var property = IoTFDeviceStore.normalizeProperty(plot.property);\n        var obj = payload.deviceEvent.data[property];\n\n        if (obj !== undefined) {\n          model[type] = obj;\n        }\n      }\n    }\n\n    return model;\n  },\n\n  render: function render() {\n    var self = this;\n    if (this.state.floor !== undefined || this.state.height !== undefined || this.state.weight !== undefined) {\n\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n      // create array of floor names\n      var floors = [];\n      var floorPlot = this.getPlot(\"floor\");\n      var floorMin = floorPlot.min !== undefined ? floorPlot.min : 0;\n      var floorMax = floorPlot.max !== undefined ? floorPlot.max : 5;\n      for (var i = floorMax; i >= floorMin; i--) {\n        floors.push(\"\" + i);\n      }\n      var currentFloor = this.state.floor !== undefined ? this.state.floor - floorMin : floorMin;\n      var highlight = Object.assign({}, styles.highlight, { backgroundColor: this.props.theme.light, bottom: 120 * currentFloor + \"px\" });\n\n      // prepare height scale and cabin\n      var scale = [];\n      var heightPlot = this.getPlot(\"height\");\n      var heightMin = Math.floor(heightPlot.min !== undefined ? heightPlot.min : 0);\n      var heightMax = Math.floor(heightPlot.max !== undefined ? heightPlot.max : 20);\n      for (var i = heightMax; i >= heightMin; --i) {\n        scale.push(i);\n      }\n      var currentHeight = this.state.height !== undefined ? this.state.height - heightMin : heightMin;\n      var heightFactor = 120 / ((heightMax - heightMin) / (floorMax - floorMin));\n      var cabin = Object.assign({}, styles.cabin, { borderColor: this.props.theme.normal, backgroundColor: this.props.theme.content, color: this.props.theme.major, bottom: heightFactor * currentHeight + 10 + \"px\" });\n      var label = Object.assign({}, styles.heightLabel, { backgroundColor: this.props.theme.light, color: this.props.theme.content, bottom: heightFactor * currentHeight + 40 + \"px\" });\n      var labelText = Object.assign({}, styles.labelText, { backgroundColor: this.props.theme.light });\n      var pointer = Object.assign({}, styles.pointer, { backgroundColor: this.props.theme.light });\n\n      // prepare weight indicator\n      var weight = [];\n      var weightPlot = this.getPlot(\"weight\");\n      var weightMin = 0;\n      var weightMax = weightPlot.max !== undefined ? weightPlot.max : 2000;\n      var currentWeight = this.state.weight / weightMax * 100;\n      var weightBar = Object.assign({}, styles.weightBar, { backgroundColor: this.props.theme.normal, color: this.props.theme.content, height: currentWeight + \"px\" });\n\n      var contentHeight = (floorMax - floorMin) * 120;\n      var containerHeight = this.props.wrapper.realHeight;\n\n      var top = Math.min(contentHeight - currentFloor * 120, contentHeight - heightFactor * currentHeight);\n      var bottom = Math.max(contentHeight - currentFloor * 120 + 120, contentHeight - (heightFactor * currentHeight + 120));\n\n      var scrollPos = this.scrollPos ? this.scrollPos : 0;\n      if (bottom + scrollPos > containerHeight) {\n        scrollPos = -(bottom - containerHeight);\n      } else if (top + scrollPos < 0) {\n        scrollPos = 0 - top;\n      }\n      this.scrollPos = scrollPos;\n      var scroller = Object.assign({}, styles.scroller, { top: scrollPos + \"px\" });\n\n      return React.createElement(\n        'div',\n        { style: style },\n        React.createElement(\n          'div',\n          { style: scroller },\n          React.createElement(\n            'div',\n            { style: styles.scale },\n            React.createElement('div', { style: styles.scaleAxis }),\n            scale.map(function (item) {\n              if (item % 5 == 0) {\n                var tick = Object.assign({}, styles.tick, { backgroundColor: self.props.theme.content, color: self.props.theme.minor, bottom: heightFactor * item - 20 + \"px\" });\n                return React.createElement(\n                  'div',\n                  { key: item, style: tick },\n                  item\n                );\n              } else {\n                var tick = Object.assign({}, styles.simpleTick, { borderColor: self.props.theme.minor, bottom: heightFactor * item - 10 + \"px\" });\n                return React.createElement('div', { key: item, style: tick });\n              }\n            })\n          ),\n          React.createElement('div', { style: highlight }),\n          React.createElement(\n            'div',\n            { style: styles.floors },\n            floors.map(function (item) {\n              var floor = Object.assign({}, styles.floor, \"\" + self.state.floor == item ? { fontSize: \"100px\" } : {});\n              return React.createElement(\n                'div',\n                { key: item, style: floor },\n                item\n              );\n            })\n          ),\n          React.createElement(\n            'div',\n            { style: cabin },\n            this.state.weight,\n            ' kg',\n            React.createElement(\n              'div',\n              { style: weightBar },\n              React.createElement(\n                'div',\n                { style: styles.weightBarContainer },\n                this.state.weight,\n                ' kg'\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            { style: label },\n            React.createElement('div', { style: pointer }),\n            React.createElement(\n              'div',\n              { style: labelText },\n              this.state.height,\n              ' m'\n            )\n          )\n        )\n      );\n    } else {\n      if (!this.props.floor || !this.props.height || !this.props.weight) {\n        return React.createElement(\n          'div',\n          { style: styles.empty },\n          'No all data point defined'\n        );\n      } else {\n        return React.createElement(\n          'div',\n          { style: styles.empty },\n          React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n        );\n      }\n    }\n  }\n});\n\nmodule.exports = Elevator;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/customization/ElevatorProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nIoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar RPT = React.PropTypes;\nvar InputField = IoTFCommon.InputField;\nvar Label = IoTFCommon.Label;\nvar Select = IoTFCommon.Select;\nvar Option = IoTFCommon.Option;\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n\n};\n\nvar ElevatorProperties = React.createClass({\n  displayName: 'ElevatorProperties',\n\n\n  propTypes: {\n    floor: RPT.string,\n    height: RPT.string,\n    weight: RPT.string,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      floor: \"location.floor\",\n      height: \"location.height\",\n      weight: \"weight.value\"\n      // floor: null,\n      // height: null,\n      // weight: null\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      floor: this.props.floor,\n      height: this.props.height,\n      weight: this.props.weight\n    };\n  },\n\n  onFloorChanged: function onFloorChanged(value) {\n    this.setState({\n      floor: value\n    });\n  },\n\n  onHeightChanged: function onHeightChanged(value) {\n    this.setState({\n      height: value\n    });\n  },\n\n  onWeightChanged: function onWeightChanged(value) {\n    this.setState({\n      weight: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Floor data point', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onFloorChanged, value: this.state.floor },\n                    this.props.plots.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item.id, value: item.id, selected: self.state.floor == item.id },\n                        item.label\n                      );\n                    })\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Height data point', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onHeightChanged, value: this.state.height },\n                    this.props.plots.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item.id, value: item.id, selected: self.state.height == item.id },\n                        item.label\n                      );\n                    })\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Weight data point', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onWeightChanged, value: this.state.weight },\n                    this.props.plots.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item.id, value: item.id, selected: self.state.weight == item.id },\n                        item.label\n                      );\n                    })\n                  )\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = ElevatorProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/Maintenance.jsx\":[function(require,module,exports){\n'use strict';\n\nvar Maintenance = {};\nMaintenance.Maintenance = require('./cards/Maintenance.jsx');\nMaintenance.VideoChat = require('./cards/VideoChat.jsx');\nMaintenance.MessageViewer = require('./cards/MessageViewer.jsx');\nMaintenance.MessageDetails = require('./cards/MessageDetails.jsx');\nMaintenance.LogViewer = require('./cards/LogViewer.jsx');\nMaintenance.MaintenanceStore = require('./stores/MaintenanceStore.js');\n\nmodule.exports = Maintenance;\n\n},{\"./cards/LogViewer.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/LogViewer.jsx\",\"./cards/Maintenance.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/Maintenance.jsx\",\"./cards/MessageDetails.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/MessageDetails.jsx\",\"./cards/MessageViewer.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/MessageViewer.jsx\",\"./cards/VideoChat.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/VideoChat.jsx\",\"./stores/MaintenanceStore.js\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/LogViewer.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar MaintenanceStore = require('../stores/MaintenanceStore.js');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\",\n    overflow: \"scroll\"\n\n  },\n  entry: {\n    fontSize: \"12px\",\n    backgroundColor: \"#EEEEEE\",\n    padding: \"2px 10px\",\n    margin: \"1px\"\n  },\n  timestamp: {\n    width: \"100px\",\n    display: \"inline-block\"\n  },\n  device: {\n    width: \"150px\",\n    display: \"inline-block\"\n  },\n  event: {\n    width: \"150px\",\n    display: \"inline-block\"\n  },\n  scroller: {}\n};\n\nvar LogViewer = React.createClass({\n  displayName: 'LogViewer',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      logEntries: []\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    MaintenanceStore.listen(this.onUpdate);\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.isMounted()) {\n      if (payload.log) {\n        if (!this.count) {\n          this.count = 0;\n        }\n        payload.log = {\n          log: payload.log,\n          count: this.count++\n        };\n        this.state.logEntries.splice(0, 0, payload.log);\n        while (this.state.logEntries.length > 100) {\n          this.state.logEntries.pop();\n        }\n        this.setState(this.state.logEntries);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {},\n\n  render: function render() {\n    var self = this;\n\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    if (this.state && this.state.logEntries && this.state.logEntries.length > 0) {\n      return React.createElement(\n        'div',\n        { style: style },\n        React.createElement(\n          'div',\n          { style: styles.scroller },\n          this.state.logEntries.map(function (item) {\n            return React.createElement(\n              'div',\n              { key: item.count, style: styles.entry },\n              item.log\n            );\n          })\n        )\n      );\n    } else {\n      return React.createElement(\n        'div',\n        { style: style },\n        'Start logging in maintenance card'\n      );\n    }\n  }\n});\n\nmodule.exports = LogViewer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../stores/MaintenanceStore.js\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/Maintenance.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar MaintenanceStore = require('../stores/MaintenanceStore.js');\nvar Button = IoTFCommon.Button;\nvar Label = IoTFCommon.Label;\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\"\n  }\n};\n\nvar Maintenance = React.createClass({\n  displayName: 'Maintenance',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  getInitialState: function getInitialState() {\n    return {};\n  },\n\n  componentDidMount: function componentDidMount() {\n    MaintenanceStore.listen(this.onUpdate);\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.isMounted()) {\n      if (payload.dashboards) {\n        var model = {};\n        if (payload.dashboards) {\n          model.dashboards = payload.dashboards;\n        }\n        this.setState(model);\n      }\n      if (payload.fullLog) {\n        this.setState({\n          log: payload.fullLog\n        });\n      }\n    }\n  },\n\n  onBackup: function onBackup() {\n    MaintenanceStore.Actions.backupDashboard();\n  },\n\n  onRestore: function onRestore() {\n    var button = document.getElementById(\"uploadButton\");\n    button.click();\n  },\n\n  onUploadRestoreFile: function onUploadRestoreFile() {\n    var button = document.getElementById(\"uploadButton\");\n    var files = button.files;\n    if (files && files.length > 0) {\n      var file = files[0];\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        var content = e.target.result;\n        console.log(content);\n        MaintenanceStore.Actions.restoreDashboard({ content: content });\n      };\n      reader.readAsBinaryString(file);\n    }\n  },\n\n  onStartLogging: function onStartLogging() {\n    MaintenanceStore.Actions.startLogging();\n  },\n\n  onStopLogging: function onStopLogging() {\n    MaintenanceStore.Actions.stopLogging();\n  },\n\n  render: function render() {\n    var self = this;\n\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    var backupButton = \"\";\n    if (this.state.dashboards) {\n      backupButton = React.createElement(Button, { key: 1, download: \"DashboardBackup.json\", onClick: function onClick() {\n          setTimeout(function () {\n            self.setState({ dashboards: null });\n          }, 1000);\n        }, target: \"_blank\", href: \"data:text/json;charset=utf-8,\" + this.state.dashboards, text: \"Download Backup\" });\n    } else {\n      backupButton = React.createElement(Button, { key: 2, onClick: self.onBackup, text: \"Generate Backup\" });\n    }\n\n    var downloadButton = \"\";\n    if (this.state.log) {\n      downloadButton = React.createElement(Button, { key: 1, download: \"DashboardLog.txt\", onClick: function onClick() {\n          setTimeout(function () {\n            self.setState({ log: null });\n          }, 1000);\n        }, target: \"_blank\", href: \"data:text;charset=utf-8,\" + this.state.log, text: \"Download Log\" });\n    } else {\n      downloadButton = React.createElement(Button, { key: 2, onClick: self.onStopLogging, text: \"Stop Log\" });\n    }\n\n    return React.createElement(\n      'div',\n      { style: style },\n      React.createElement(\n        Label,\n        { label: \"Dashboard\", theme: this.props.theme },\n        backupButton,\n        React.createElement(Button, { onClick: self.onRestore, text: \"Restore\" }),\n        React.createElement('input', { id: 'uploadButton', onChange: this.onUploadRestoreFile, type: \"file\", style: { display: \"none\" } })\n      ),\n      React.createElement(\n        Label,\n        { label: \"Logs\", theme: this.props.theme },\n        React.createElement(Button, { onClick: self.onStartLogging, text: \"Start log\" }),\n        downloadButton\n      )\n    );\n  }\n});\n\nmodule.exports = Maintenance;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../stores/MaintenanceStore.js\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/MessageDetails.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar MaintenanceStore = require('../stores/MaintenanceStore.js');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\",\n    overflow: \"scroll\"\n\n  },\n  entry: {\n    fontSize: \"14px\",\n    backgroundColor: \"#EEEEEE\",\n    padding: \"2px 10px\",\n    margin: \"1px\"\n  },\n  scroller: {}\n};\n\nvar MessageDetails = React.createClass({\n  displayName: 'MessageDetails',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      messages: []\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    MaintenanceStore.listen(this.onUpdate);\n    MaintenanceStore.Actions.observeMessages();\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.isMounted()) {\n      if (payload.message) {\n        this.setState({\n          message: payload.message\n        });\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    MaintenanceStore.Actions.stopObservingMessages();\n  },\n\n  constructMessage: function constructMessage(message) {\n    var self = this;\n\n    var result = \"\";\n    if (message != null && (typeof message === 'undefined' ? 'undefined' : _typeof(message)) === 'object') {\n      var keys = Object.keys(message);\n      result = React.createElement(\n        'div',\n        { style: styles.entry },\n        keys.map(function (key) {\n          return React.createElement(\n            'div',\n            { style: styles.entry },\n            key,\n            ': ',\n            self.constructMessage(message[key])\n          );\n        })\n      );\n    } else {\n      result = message;\n    }\n    return result;\n  },\n\n  render: function render() {\n    var self = this;\n\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    if (this.state && this.state.message) {\n      var message = this.constructMessage(this.state.message.data);\n\n      var time = new Date(this.state.message.timestamp);\n\n      return React.createElement(\n        'div',\n        { style: style },\n        React.createElement(\n          'div',\n          { style: styles.scroller },\n          React.createElement(\n            'div',\n            { style: styles.entry },\n            React.createElement(\n              'b',\n              null,\n              'Time:'\n            ),\n            ' ',\n            time.toTimeString().split(\" \")[0]\n          ),\n          React.createElement(\n            'div',\n            { style: styles.entry },\n            React.createElement(\n              'b',\n              null,\n              'Device:'\n            ),\n            ' ',\n            this.state.message.device\n          ),\n          React.createElement(\n            'div',\n            { style: styles.entry },\n            React.createElement(\n              'b',\n              null,\n              'Event:'\n            ),\n            ' ',\n            this.state.message.event\n          ),\n          React.createElement('p', null),\n          message\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = MessageDetails;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../stores/MaintenanceStore.js\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/MessageViewer.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar MaintenanceStore = require('../stores/MaintenanceStore.js');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\",\n    overflow: \"scroll\"\n\n  },\n  entry: {\n    fontSize: \"12px\",\n    backgroundColor: \"#EEEEEE\",\n    padding: \"2px 10px\",\n    margin: \"1px\"\n  },\n  timestamp: {\n    width: \"100px\",\n    display: \"inline-block\"\n  },\n  device: {\n    width: \"150px\",\n    display: \"inline-block\"\n  },\n  event: {\n    width: \"150px\",\n    display: \"inline-block\"\n  },\n  scroller: {}\n};\n\nvar MessageViewer = React.createClass({\n  displayName: 'MessageViewer',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      messages: []\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    MaintenanceStore.listen(this.onUpdate);\n    MaintenanceStore.Actions.observeMessages();\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.isMounted()) {\n      if (payload.message) {\n        if (!this.count) {\n          this.count = 0;\n        }\n        payload.message.count = this.count++;\n        this.state.messages.splice(0, 0, payload.message);\n        while (this.state.messages.length > 100) {\n          this.state.messages.pop();\n        }\n        this.setState(this.state.messages);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    MaintenanceStore.Actions.stopObservingMessages();\n  },\n\n  render: function render() {\n    var self = this;\n\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    return React.createElement(\n      'div',\n      { style: style },\n      React.createElement(\n        'div',\n        { style: styles.scroller },\n        this.state.messages.map(function (item) {\n          var time = new Date(item.timestamp);\n          return React.createElement(\n            'div',\n            { key: item.count, style: styles.entry },\n            React.createElement(\n              'span',\n              { style: styles.timestamp },\n              time.toTimeString().split(\" \")[0]\n            ),\n            React.createElement(\n              'span',\n              { style: styles.device },\n              item.device\n            ),\n            React.createElement(\n              'span',\n              { style: styles.event },\n              item.event\n            )\n          );\n        })\n      )\n    );\n  }\n});\n\nmodule.exports = MessageViewer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../stores/MaintenanceStore.js\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/VideoChat.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar LoadIndicator = IoTFCommon.LoadIndicator;\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"0px\"\n  }\n};\n\nvar VideoChat = React.createClass({\n  displayName: 'VideoChat',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  render: function render() {\n    var self = this;\n\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    return React.createElement(\n      'div',\n      { style: style },\n      React.createElement('iframe', { src: 'https://appear.in/fedscrum', width: '641', height: '341', frameborder: '0' })\n    );\n  }\n});\n\nmodule.exports = VideoChat;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\nvar DashboardStore = IoTFComponents.Dashboard.DashboardStore;\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\n\nvar Actions = Reflux.createActions(['backupDashboard', 'restoreDashboard', 'startLogging', 'stopLogging', 'observeMessages', 'stopObservingMessages']);\n\nvar MaintenanceStore = Reflux.createStore({\n\n  Actions: Actions,\n\n  buffer: [],\n  pointer: 0,\n  threshold: 500,\n\n  init: function init() {\n    this.listenTo(Actions.backupDashboard, this.onBackupDashboard);\n    this.listenTo(Actions.restoreDashboard, this.onRestoreDashboard);\n    this.listenTo(Actions.startLogging, this.onStartLogging);\n    this.listenTo(Actions.stopLogging, this.onStopLogging);\n    this.listenTo(Actions.observeMessages, this.onObserveMessages);\n    this.listenTo(Actions.stopObservingMessages, this.onStopObservingMessages);\n  },\n\n  onBackupDashboard: function onBackupDashboard() {\n    var dashboards = DashboardStore.dashboards;\n    var json = JSON.stringify(dashboards);\n\n    this.trigger({\n      dashboards: json\n    });\n  },\n\n  onRestoreDashboard: function onRestoreDashboard(payload) {\n    var ds = DashboardStore;\n    var content = payload.content;\n    try {\n      var obj = JSON.parse(content);\n      ds.dashboards = obj;\n\n      ds.cleanup();\n\n      var dashboard = ds.dashboards.dashboards[0];\n\n      var name = null;\n      if (!name && ds.dashboards.settings && ds.dashboards.settings.defaultDashboard) {\n        name = ds.dashboards.settings.defaultDashboard;\n      }\n\n      if (name) {\n        var temp = ds.getDashboardByName(name);\n        if (temp) {\n          dashboard = temp;\n        }\n      }\n\n      ds.dashboard = dashboard;\n\n      ds.trigger({ components: ds.getComponents(), dashboard: ds.dashboard });\n      ds.storeDashboard();\n    } catch (e) {\n      this.trigger({\n        error: \"Restore failed\"\n      });\n    }\n  },\n\n  onObserveMessages: function onObserveMessages() {\n    var self = this;\n    IoTFDeviceStore.setMessageObserver(function (device, event, data, timestamp) {\n      self.trigger({ message: {\n          device: device,\n          event: event,\n          data: data,\n          timestamp: timestamp\n        } });\n    });\n  },\n\n  onStopObservingMessages: function onStopObservingMessages() {\n    IoTFDeviceStore.setMessageObserver(null);\n  },\n\n  onStartLogging: function onStartLogging() {\n    var self = this;\n    this.buffer = [];\n    this.pointer = 0;\n\n    console.orgLog = console.log;\n    console.log = function (obj) {\n      self.storeInBuffer(obj);\n      console.orgLog(obj);\n    };\n\n    console.orgInfo = console.info;\n    console.info = function (obj) {\n      self.storeInBuffer(obj);\n      console.orgInfo(obj);\n    };\n\n    console.orgWarn = console.warn;\n    console.warn = function (obj) {\n      self.storeInBuffer(obj);\n      console.orgWarn(obj);\n    };\n\n    console.orgError = console.error;\n    console.error = function (obj) {\n      self.storeInBuffer(obj);\n      console.orgError(obj);\n    };\n  },\n\n  onStopLogging: function onStopLogging() {\n    var self = this;\n    console.log = console.orgLog;\n    console.info = console.orgInfo;\n    console.warn = console.orgWarn;\n    console.error = console.orgError;\n\n    var text = this.getBufferAsString();\n    this.trigger({\n      fullLog: text\n    });\n  },\n\n  storeInBuffer: function storeInBuffer(obj) {\n    this.buffer[this.pointer] = obj;\n    this.pointer++;\n    if (this.pointer > this.threshold - 1) {\n      this.pointer = 0;\n    }\n    this.trigger({\n      log: obj\n    });\n  },\n\n  getBufferAsString: function getBufferAsString() {\n    var text = \"\";\n    var counter = 0;\n    for (var i = this.pointer; counter < this.threshold; i--) {\n      if (i < 0) {\n        i = this.threshold - 1;\n      }\n      var line = this.buffer[i];\n      counter++;\n      if (line) {\n        text += line + \"\\r\\n\";\n      }\n    }\n    return text;\n  }\n\n});\n\nmodule.exports = MaintenanceStore;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/Modules.jsx\":[function(require,module,exports){\n'use strict';\n\nvar Modules = {};\nModules.Maintenance = require('./Maintenance/Maintenance.jsx');\nModules.ElevatorDemo = require('./ElevatorDemo/ElevatorDemo.jsx');\nModules.WeatherService = require('./WeatherService/WeatherService.jsx');\nModules.Runtastic = require('./Runtastic/Runtastic.jsx');\nModules.ToggleGroup = require('./ToggleGroup/ToggleGroup.jsx');\n\nmodule.exports = Modules;\n\n},{\"./ElevatorDemo/ElevatorDemo.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/ElevatorDemo.jsx\",\"./Maintenance/Maintenance.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/Maintenance.jsx\",\"./Runtastic/Runtastic.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Runtastic/Runtastic.jsx\",\"./ToggleGroup/ToggleGroup.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/ToggleGroup.jsx\",\"./WeatherService/WeatherService.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/WeatherService.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Runtastic/Runtastic.jsx\":[function(require,module,exports){\n'use strict';\n\nvar Runtastic = {};\nRuntastic.Runtastic = require('./cards/Runtastic.jsx');\n\nmodule.exports = Runtastic;\n\n},{\"./cards/Runtastic.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Runtastic/cards/Runtastic.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Runtastic/cards/Runtastic.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\n\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar CardDatapoint = IoTFCommon.CardDatapoint;\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    padding: \"30px\"\n  },\n  empty: {\n    padding: \"20px\"\n  },\n  map: {\n    right: \"30px\",\n    top: \"30px\",\n    position: \"absolute\"\n  }\n};\n\nvar Runtastic = React.createClass({\n  displayName: 'Runtastic',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    demo: RPT.bool,\n    plots: RPT.array\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      plots: [],\n      data: {}\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      \"date\": null,\n      \"distance\": 0,\n      \"duration\": 0,\n      \"gain\": 0,\n      \"id\": \"0\",\n      \"kcal\": 0,\n      \"loss\": 0,\n      \"map\": \"\",\n      \"pace\": 0,\n      \"page\": \"\",\n      \"speed\": 0\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    if (this.props.plots && this.props.plots.length > 0) {\n      var plot = this.props.plots[0];\n      // we just listen for the event since the properties are hardcoded\n      IoTFDeviceStore.Actions.startEventWatch(plot.device, plot.event);\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.props.plots && this.props.plots.length > 0) {\n      var plot = this.props.plots[0];\n      if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n        var model = {};\n        var data = payload.deviceEvent.data;\n\n        model = this.addData(data, \"date\", model);\n        model = this.addData(data, \"distance\", model);\n        model = this.addData(data, \"duration\", model);\n        model = this.addData(data, \"gain\", model);\n        model = this.addData(data, \"id\", model);\n        model = this.addData(data, \"kcal\", model);\n        model = this.addData(data, \"loss\", model);\n        model = this.addData(data, \"map\", model);\n        model = this.addData(data, \"pace\", model);\n        model = this.addData(data, \"page\", model);\n        model = this.addData(data, \"speed\", model);\n\n        if (Object.keys(model).length > 0) {\n          model.timestamp = new Date().getTime();\n          var self = this;\n          setTimeout(function () {\n            self.setState(model);\n          }, 1);\n        }\n      }\n    }\n  },\n\n  addData: function addData(payload, property, model) {\n    var property = IoTFDeviceStore.normalizeProperty(property);\n    var obj = payload[property];\n\n    if (obj !== undefined) {\n      model[property] = obj;\n    }\n\n    return model;\n  },\n\n  render: function render() {\n    var self = this;\n    if (this.state[\"date\"]) {\n\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n      var html = \"\";\n      var height = this.props.wrapper.height;\n      var width = this.props.wrapper.width;\n\n      var seconds = Math.floor(this.state[\"duration\"] / 1000);\n      var hours = Math.floor(seconds / 3600);\n      seconds = seconds - hours * 3600;\n      var minutes = Math.floor(seconds / 60);\n      seconds = seconds - minutes * 60;\n\n      var dateString = this.state[\"date\"];\n      // handle messed up date format (missing leading 0 for hours below 10)\n      var tokens = dateString.split(\"T\");\n      dateString = tokens[0] + \"T\" + (tokens[1].length < 8 ? \"0\" : \"\") + tokens[1];\n\n      var dateObj = new Date(dateString);\n\n      var main = React.createElement(\n        'div',\n        null,\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Start time' },\n          dateObj.toLocaleString().replace(\",\", \" \")\n        ),\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Distance' },\n          this.state[\"distance\"],\n          ' m'\n        ),\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Duration' },\n          hours,\n          ' h ',\n          minutes,\n          ' m ',\n          seconds,\n          ' s'\n        )\n      );\n\n      var paceSeconds = this.state[\"pace\"];\n      var paceMinutes = Math.floor(paceSeconds);\n      paceSeconds = Math.floor((paceSeconds - paceMinutes) * 60);\n\n      var sub = React.createElement(\n        'div',\n        null,\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Pace' },\n          paceMinutes,\n          ' m ',\n          paceSeconds,\n          ' s per km'\n        ),\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Speed' },\n          this.state[\"speed\"].toFixed(2),\n          ' km/h'\n        )\n      );\n\n      if (height == 3 && width == 2) {\n\n        return React.createElement(\n          'div',\n          { style: style },\n          main\n        );\n      } else if (height == 4 && width == 4) {\n        var mapUrl = \"http:\" + this.state[\"map\"];\n        mapUrl = mapUrl.replace(\"width=50\", \"width=300\");\n        mapUrl = mapUrl.replace(\"height=70\", \"height=280\");\n        return React.createElement(\n          'div',\n          { style: style },\n          main,\n          sub,\n          React.createElement('img', { style: styles.map, src: mapUrl })\n        );\n      } else {\n        return React.createElement(\n          'div',\n          { style: style },\n          main\n        );\n      }\n    } else {\n      return React.createElement(\n        'div',\n        { style: styles.empty },\n        React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n      );\n    }\n  }\n});\n\nmodule.exports = Runtastic;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/ToggleGroup.jsx\":[function(require,module,exports){\n'use strict';\n\nvar ToggleGroup = {};\nToggleGroup.ToggleGroup = require('./cards/ToggleGroup.jsx');\nToggleGroup.ToggleTile = require('./components/ToggleTile.jsx');\nToggleGroup.ToggleGroupProperties = require('./customization/ToggleGroupProperties.jsx');\n\nmodule.exports = ToggleGroup;\n\n},{\"./cards/ToggleGroup.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/cards/ToggleGroup.jsx\",\"./components/ToggleTile.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/components/ToggleTile.jsx\",\"./customization/ToggleGroupProperties.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/customization/ToggleGroupProperties.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/cards/ToggleGroup.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\n\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\nvar ToggleTile = require('../components/ToggleTile.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"15px 5px\"\n  }\n};\n\nvar ToggleGroup = React.createClass({\n  displayName: 'ToggleGroup',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    plots: RPT.array,\n    iconType: RPT.string,\n    invert: RPT.bool\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      iconType: \"WINDOW\",\n      invert: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      model: {}\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        IoTFDeviceStore.Actions.startPropertyWatch(plot.device, plot.event, plot.property);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var found = false;\n    var model = {};\n\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n          var property = IoTFDeviceStore.normalizeProperty(plot.property);\n          var obj = payload.deviceEvent.data[property];\n\n          if (obj !== undefined) {\n            model[plot.id] = obj;\n            found = true;\n          }\n        }\n      }\n    }\n    if (found) {\n      this.setState(model);\n    }\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n      var items = [];\n\n      for (var i in this.props.plots) {\n        var plot = this.props.plots[i];\n        var state = this.state[plot.id];\n        var icon = null;\n        if (state !== undefined) {\n          if (this.props.invert) {\n            state = !state;\n          }\n          icon = \"/resources/images/\" + this.props.iconType + \"_\" + (state ? \"ON\" : \"OFF\") + \".png\";\n        }\n        var item = {\n          id: plot.id,\n          label: plot.label,\n          value: state,\n          icon: icon\n        };\n        items.push(item);\n      }\n\n      return React.createElement(\n        'div',\n        { style: style },\n        items.map(function (item) {\n          return React.createElement(\n            ToggleTile,\n            { key: item.id, theme: self.props.theme, icon: item.icon, state: !!item.value },\n            item.label\n          );\n        })\n      );\n    } else {\n      return React.createElement(\n        'div',\n        { style: styles.style },\n        React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n      );\n    }\n  }\n});\n\nmodule.exports = ToggleGroup;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../components/ToggleTile.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/components/ToggleTile.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/components/ToggleTile.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"95px\",\n    height: \"95px\",\n    margin: \"5px\",\n    float: \"left\"\n  },\n  icon: {\n    width: \"55px\",\n    height: \"55px\",\n    margin: \"5px 20px\",\n    fontSize: \"12px\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  },\n  label: {\n    fontSize: \"12px\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    padding: \"5px 10px\",\n    textAlign: \"center\"\n  }\n};\n\nvar ToggleTile = React.createClass({\n  displayName: \"ToggleTile\",\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    icon: RPT.string,\n    state: RPT.bool\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      icon: null\n    };\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style);\n    var label = Object.assign({}, styles.label);\n    var icon = Object.assign({}, styles.icon);\n\n    if (!this.props.state) {\n      label.color = this.props.theme.minor;\n      label.backgroundColor = this.props.theme.content;\n      icon.color = this.props.theme.minor;\n    } else {\n      label.color = this.props.theme.titleText;\n      label.backgroundColor = this.props.theme.light;\n    }\n\n    if (this.props.icon) {\n      return React.createElement(\n        \"div\",\n        { style: style },\n        React.createElement(\"img\", { src: this.props.icon, style: styles.icon }),\n        React.createElement(\n          \"div\",\n          { style: label },\n          this.props.children\n        )\n      );\n    } else {\n      return React.createElement(\n        \"div\",\n        { style: style },\n        React.createElement(\n          \"div\",\n          { style: icon },\n          \"Unknown state\"\n        ),\n        React.createElement(\n          \"div\",\n          { style: label },\n          this.props.children\n        )\n      );\n    }\n  }\n});\n\nmodule.exports = ToggleTile;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/customization/ToggleGroupProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar RPT = React.PropTypes;\nvar Label = IoTFCommon.Label;\nvar ComboBox = IoTFCommon.ComboBox;\nvar Option = IoTFCommon.Option;\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\nvar Select = IoTFCommon.Select;\nvar SwitchBtn = IoTFCommon.SwitchBtn;\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n};\n\nvar ToggleGroupProperties = React.createClass({\n  displayName: 'ToggleGroupProperties',\n\n\n  propTypes: {\n    iconType: RPT.string,\n    invert: RPT.bool,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      iconType: \"WINDOW\",\n      invert: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      iconType: this.props.iconType,\n      invert: this.props.invert !== undefined ? this.props.invert : null\n    };\n  },\n\n  onIconTypeChanged: function onIconTypeChanged(value) {\n    this.setState({\n      iconType: value\n    });\n  },\n\n  onInvertChanged: function onInvertChanged(value) {\n    this.setState({\n      invert: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n\n      var iconType = this.state.iconType;\n\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Visualization', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onIconTypeChanged, value: iconType },\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'DISC', selected: iconType == \"DISC\" },\n                      'Disc'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'LIGHT', selected: iconType == \"LIGHT\" },\n                      'Light'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'SWITCH', selected: iconType == \"SWITCH\" },\n                      'Switch'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'FAN', selected: iconType == \"FAN\" },\n                      'Fan'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'HEATING', selected: iconType == \"HEATING\" },\n                      'Heating'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'BATTERY', selected: iconType == \"BATTERY\" },\n                      'Battery'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'DOOR', selected: iconType == \"DOOR\" },\n                      'Door'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'WINDOW', selected: iconType == \"WINDOW\" },\n                      'Window'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'SMILEY', selected: iconType == \"SMILEY\" },\n                      'Smiley'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'BLANKET', selected: iconType == \"BLANKET\" },\n                      'Blanket'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'WATER', selected: iconType == \"WATER\" },\n                      'Water'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'SPRINKLER', selected: iconType == \"SPRINKLER\" },\n                      'Sprinkler'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'PUMP', selected: iconType == \"PUMP\" },\n                      'Pump'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'RAIN', selected: iconType == \"RAIN\" },\n                      'Rain'\n                    )\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Invert value', theme: this.props.theme },\n                  React.createElement(SwitchBtn, { theme: this.props.theme, onChange: this.onInvertChanged, initialValue: !!this.state.invert, trueText: 'true = OFF', falseText: 'true = ON' })\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = ToggleGroupProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/WeatherService.jsx\":[function(require,module,exports){\n'use strict';\n\nvar WeatherService = {};\nWeatherService.WeatherService = require('./cards/WeatherService.jsx');\nWeatherService.WeatherServiceProperties = require('./customization/WeatherServiceProperties.jsx');\n\nmodule.exports = WeatherService;\n\n},{\"./cards/WeatherService.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/cards/WeatherService.jsx\",\"./customization/WeatherServiceProperties.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/customization/WeatherServiceProperties.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/cards/WeatherService.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\n\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\nvar LoadIndicator = IoTFCommon.LoadIndicator;\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n\t\tcontainer: {\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tposition: \"relative\",\n\t\t\t\toverflow: \"hidden\"\n\t\t},\n\t\tempty: {\n\t\t\t\tpadding: \"20px\"\n\t\t}\n};\n\nvar path = \"resources/images/\";\n\nvar days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n\nvar iconMap = {\n\t\t\"chanceflurries\": \"w1\",\n\t\t\"chancerain\": \"w2\",\n\t\t\"chancesleet\": \"w3\",\n\t\t\"chancesnow\": \"w4\",\n\t\t\"chancetstorms\": \"w5\",\n\t\t\"clear\": \"w6\",\n\t\t\"cloudy\": \"w7\",\n\t\t\"flurries\": \"w8\",\n\t\t\"fog\": \"w9\",\n\t\t\"hazy\": \"w10\",\n\t\t\"mostlycloudy\": \"w11\",\n\t\t\"mostlysunny\": \"w12\",\n\t\t\"partlycloudy\": \"w13\",\n\t\t\"partlysunny\": \"w14\",\n\t\t\"sleet\": \"w15\",\n\t\t\"rain\": \"w16\",\n\t\t\"snow\": \"w17\",\n\t\t\"sunny\": \"w18\",\n\t\t\"tstorms\": \"w19\",\n\t\t\"unknown\": \"w0\"\n};\n\nvar WeatherService = React.createClass({\n\t\tdisplayName: 'WeatherService',\n\n\t\tpropTypes: {\n\t\t\t\ttheme: RPT.object.isRequired,\n\t\t\t\tstyle: RPT.object,\n\t\t\t\tnls: RPT.object,\n\t\t\t\twrapper: RPT.object,\n\t\t\t\tdemo: RPT.bool,\n\t\t\t\tplots: RPT.array,\n\t\t\t\tlocation: RPT.string\n\t\t},\n\n\t\tgetDefaultProps: function getDefaultProps() {\n\t\t\t\treturn {\n\t\t\t\t\t\tplots: [],\n\t\t\t\t\t\tdata: {}\n\t\t\t\t};\n\t\t},\n\n\t\tgetInitialState: function getInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\t\t\"DATIcon\": \"unknown\",\n\t\t\t\t\t\t\"TomorrowIcon\": \"unknown\",\n\t\t\t\t\t\t\"DewPoint\": \"-\",\n\t\t\t\t\t\t\"Visibility\": \"-\",\n\t\t\t\t\t\t\"Location\": \"-\",\n\t\t\t\t\t\t\"IsDark\": \"-\",\n\t\t\t\t\t\t\"SunriseNow\": \"-\",\n\t\t\t\t\t\t\"WindDirection\": \"-\",\n\t\t\t\t\t\t\"WindSpeed\": \"-\",\n\t\t\t\t\t\t\"TomorrowLow\": \"-\",\n\t\t\t\t\t\t\"DATHigh\": \"-\",\n\t\t\t\t\t\t\"TodayHigh\": \"-\",\n\t\t\t\t\t\t\"DATLow\": \"-\",\n\t\t\t\t\t\t\"TodayIcon\": \"unknown\",\n\t\t\t\t\t\t\"Sunset\": \"-\",\n\t\t\t\t\t\t\"MoonAge\": \"-\",\n\t\t\t\t\t\t\"TodayLow\": \"-\",\n\t\t\t\t\t\t\"TomorrowHigh\": \"-\",\n\t\t\t\t\t\t\"Pressure\": \"-\",\n\t\t\t\t\t\t\"Temperature\": \"-\",\n\t\t\t\t\t\t\"Humidity\": \"-\",\n\t\t\t\t\t\t\"Sunrise\": \"-\",\n\t\t\t\t\t\t\"MoonLight\": \"-\",\n\t\t\t\t\t\t\"SunsetNow\": \"-\"\n\n\t\t\t\t};\n\t\t},\n\n\t\tcomponentDidMount: function componentDidMount() {\n\t\t\t\tthis.sub = IoTFDeviceStore.listen(this.onUpdate);\n\t\t\t\tif (this.props.plots && this.props.plots.length > 0) {\n\t\t\t\t\t\tvar plot = this.props.plots[0];\n\t\t\t\t\t\t// we just listen for the event since the properties are hardcoded\n\t\t\t\t\t\tIoTFDeviceStore.Actions.startEventWatch(plot.device, plot.event);\n\t\t\t\t}\n\t\t},\n\n\t\tcomponentWillUnmount: function componentWillUnmount() {\n\t\t\t\tif (this.sub) {\n\t\t\t\t\t\tthis.sub();\n\t\t\t\t}\n\t\t},\n\n\t\tonUpdate: function onUpdate(payload) {\n\n\t\t\t\tif (this.props.plots && this.props.plots.length > 0) {\n\t\t\t\t\t\tvar plot = this.props.plots[0];\n\t\t\t\t\t\tif (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n\t\t\t\t\t\t\t\tvar model = {};\n\t\t\t\t\t\t\t\tvar data = payload.deviceEvent.data;\n\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DATIcon\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TomorrowIcon\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DewPoint\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Visibility\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Location\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"IsDark\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"SunriseNow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"WindDirection\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"WindSpeed\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TomorrowLow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DATHigh\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TodayHigh\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DATLow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TodayIcon\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Sunset\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"MoonAge\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TodayLow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TomorrowHigh\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Pressure\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Temperature\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Humidity\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Sunrise\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"MoonLight\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"SunsetNow\", model);\n\n\t\t\t\t\t\t\t\tif (Object.keys(model).length > 0) {\n\t\t\t\t\t\t\t\t\t\tmodel.timestamp = new Date().getTime();\n\t\t\t\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\t\t\t\t\tself.setState(model);\n\t\t\t\t\t\t\t\t\t\t}, 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t},\n\n\t\taddData: function addData(payload, property, model) {\n\t\t\t\tvar property = IoTFDeviceStore.normalizeProperty(property);\n\t\t\t\tvar obj = payload[property];\n\n\t\t\t\tif (obj !== undefined) {\n\t\t\t\t\t\tmodel[property] = obj;\n\t\t\t\t}\n\n\t\t\t\treturn model;\n\t\t},\n\n\t\tgetDayText: function getDayText(dayOfWeek) {\n\t\t\t\tdayOfWeek = dayOfWeek % 7;\n\t\t\t\tvar text = this.props.nls.resolve(days[dayOfWeek]);\n\t\t\t\treturn text;\n\t\t},\n\n\t\tgetContentToday: function getContentToday() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherTodayTable'><tbody>\" + \"<tr>\" + \"<td>\" + this.props.nls.resolve(\"High\") + \" \" + this.state.TodayHigh + \"°</td>\" + \"<td rowspan='3'><img class='shWeatherTodayIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td rowspan='3' class='shWeatherTodayValue'>\" + this.state.Temperature + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherTodayCity'>\" + this.state.Location + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td>\" + this.props.nls.resolve(\"Low\") + \" \" + this.state.TodayLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentSmall: function getContentSmall() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherSmallTable'><tbody>\" + \"<tr>\" + \"<td rowspan='3'><img class='shWeatherSmallIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td class='shWeatherSmallHighLow'>H: \" + this.state.TodayHigh + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherSmallValue'>\" + this.state.Temperature + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherSmallHighLow'>L: \" + this.state.TodayLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentForecast: function getContentForecast() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherForecastTable'><tbody>\" + \"<tr class='shWeatherForecastHeader'>\" + \"<td>\" + this.getDayText(today) + \"</td>\" + \"<td>\" + this.getDayText(today + 1) + \"</td>\" + \"<td>\" + this.getDayText(today + 2) + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TomorrowIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.DATIcon] + \".png'></td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TodayHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TomorrowHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.DATHigh + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TodayLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TomorrowLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.DATLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentForecastSmall: function getContentForecastSmall() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherForecastTableSmall'><tbody>\" + \"<tr class='shWeatherForecastHeader'>\" + \"<td>\" + this.getDayText(today) + \"</td>\" + \"<td>\" + this.getDayText(today + 1) + \"</td>\" + \"<td>\" + this.getDayText(today + 2) + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TomorrowIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.DATIcon] + \".png'></td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TodayHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TomorrowHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.DATHigh + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TodayLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TomorrowLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.DATLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentDetails: function getContentDetails() {\n\n\t\t\t\tvar html = \"<table class='shWeatherDetailsTable'><tbody>\" + \"<tr>\" + \"<td rowspan='2' class='shWeatherDetailsIconCell'><img class='shWeatherDetailsIcon' src='\" + path + \"w20.png'></td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.WindDirection + \"</td>\" + \"<td rowspan='2' class='shWeatherDetailsIconCell'><img class='shWeatherDetailsIcon' src='\" + path + \"w21.png'></td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.Sunset + \" h</td>\" + \"<td rowspan='2' class='shWeatherDetailsIconCell'><img class='shWeatherDetailsIcon' src='\" + path + \"w22.png'></td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.MoonAge + \" days</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.WindSpeed + \" km/h</td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.Sunrise + \" h</td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.MoonLight + \" %</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentSideTable: function getContentSideTable() {\n\n\t\t\t\tvar html = \"<table class='shWeatherSideTable'><tbody>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w23.png'><br>\" + this.state.Pressure + \" mBar</td></tr>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w24.png'><br>\" + this.state.Humidity + \"</td></tr>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w25.png'><br>\" + this.state.DewPoint + \" °</td></tr>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w26.png'><br>\" + this.state.Visibility + \" km</td></tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\trender: function render() {\n\t\t\t\tvar self = this;\n\t\t\t\tif (this.state !== undefined) {\n\n\t\t\t\t\t\tvar style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n\t\t\t\t\t\tvar html = \"\";\n\t\t\t\t\t\tvar height = this.props.wrapper.height;\n\t\t\t\t\t\tvar width = this.props.wrapper.width;\n\n\t\t\t\t\t\tif (height == 2 && width == 4) {\n\t\t\t\t\t\t\t\t// widescreen format\n\t\t\t\t\t\t\t\thtml = \"<table class='shWeatherWidescreen'><tbody><tr><td>\" + this.getContentToday() + \"</td><td>\" + this.getContentForecast() + \"</td></tr></tbody></table>\";\n\t\t\t\t\t\t} else if (width == 2) {\n\t\t\t\t\t\t\t\thtml = this.getContentSmall();\n\t\t\t\t\t\t} else if (width == 3) {\n\t\t\t\t\t\t\t\thtml = this.getContentForecastSmall();\n\t\t\t\t\t\t} else if (width == 4 && height == 4) {\n\t\t\t\t\t\t\t\thtml = this.getContentToday() + this.getContentForecast();\n\t\t\t\t\t\t} else if (width == 4) {\n\t\t\t\t\t\t\t\thtml = \"<table class='shWeatherForecastBaseTabel'><tbody><tr><td>\" + this.getContentToday() + \"</td><td valign='bottom' rowspan='3' class='shWeatherDetailsSide'>\" + this.getContentSideTable() + \"</td></tr>\" + \"<tr><td colspan='2'></td></tr>\" + \"<tr><td>\" + this.getContentForecast() + \"</td><td></td></tr>\" + \"<tr><td colspan='2'>\" + this.getContentDetails() + \"</td></tr>\" + \"<tbody></table>\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn React.createElement('div', { style: style, dangerouslySetInnerHTML: { __html: html } });\n\n\t\t\t\t\t\t//  return <div style={styles.style}>\n\t\t\t\t\t\t//  \t\t<p>Weather Service goes here</p>\n\t\t\t\t\t\t// <div>DATIcon: {this.state.DATIcon}</div>\n\t\t\t\t\t\t// <div>TomorrowIcon: {this.state.TomorrowIcon}</div>\n\t\t\t\t\t\t// <div>DewPoint: {this.state.DewPoint}</div>\n\t\t\t\t\t\t// <div>Visibility: {this.state.Visibility}</div>\n\t\t\t\t\t\t// <div>Location: {this.state.Location}</div>\n\t\t\t\t\t\t// <div>IsDark: {this.state.IsDark}</div>\n\t\t\t\t\t\t// <div>SunriseNow: {this.state.SunriseNow}</div>\n\t\t\t\t\t\t// <div>WindDirection: {this.state.WindDirection}</div>\n\t\t\t\t\t\t// <div>WindSpeed: {this.state.WindSpeed}</div>\n\t\t\t\t\t\t// <div>TomorrowLow: {this.state.TomorrowLow}</div>\n\t\t\t\t\t\t// <div>DATHigh: {this.state.DATHigh}</div>\n\t\t\t\t\t\t// <div>TodayIcon: {this.state.TodayIcon}</div>\n\t\t\t\t\t\t// <div>DATLow: {this.state.DATLow}</div>\n\t\t\t\t\t\t// <div>TodayIcon: {this.state.TodayIcon}</div>\n\t\t\t\t\t\t// <div>Sunset: {this.state.Sunset}</div>\n\t\t\t\t\t\t// <div>MoonAge: {this.state.MoonAge}</div>\n\t\t\t\t\t\t// <div>TodayLow: {this.state.TodayLow}</div>\n\t\t\t\t\t\t// <div>TomorrowHigh: {this.state.TomorrowHigh}</div>\n\t\t\t\t\t\t// <div>Pressure: {this.state.Pressure}</div>\n\t\t\t\t\t\t// <div>Temperature: {this.state.Temperature}</div>\n\t\t\t\t\t\t// <div>Humidity: {this.state.Humidity}</div>\n\t\t\t\t\t\t// <div>Sunrise: {this.state.Sunrise}</div>\n\t\t\t\t\t\t// <div>MoonLight: {this.state.MoonLight}</div>\n\t\t\t\t\t\t// <div>SunsetNow: {this.state.SunsetNow}</div>\n\t\t\t\t\t\t//  \t</div>\n\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t\t\t{ style: styles.empty },\n\t\t\t\t\t\t\t\t\t\tReact.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t}\n});\n\nmodule.exports = WeatherService;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/customization/WeatherServiceProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\n\nvar RPT = React.PropTypes;\nvar InputField = IoTFCommon.InputField;\nvar Label = IoTFCommon.Label;\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n\n};\n\nvar WeatherServiceProperties = React.createClass({\n  displayName: 'WeatherServiceProperties',\n\n\n  propTypes: {\n    location: RPT.string,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      location: \"Rottenburg\"\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      location: this.props.location\n    };\n  },\n\n  onLocationChanged: function onLocationChanged(value) {\n    this.setState({\n      location: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Location', theme: this.props.theme },\n                  React.createElement(InputField, { theme: this.props.theme, onChange: this.onLocationChanged, initialValue: this.state.location })\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = WeatherServiceProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[\"/Users/frank/Documents/Projects/SampleCards/modules/Modules.jsx\"])(\"/Users/frank/Documents/Projects/SampleCards/modules/Modules.jsx\")\n});"],"file":"SampleCards.js","sourceRoot":"/source/"}
>>>>>>> 8f970781483479696b9ad1a17e61a7dd2832d4f6
=======
{"version":3,"names":[],"mappings":"","sources":["SampleCards.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SampleCards = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/ElevatorDemo.jsx\":[function(require,module,exports){\n'use strict';\n\nvar ElevatorDemo = {};\nElevatorDemo.Elevator = require('./cards/Elevator.jsx');\nElevatorDemo.ElevatorProperties = require('./customization/ElevatorProperties.jsx');\n\nmodule.exports = ElevatorDemo;\n\n},{\"./cards/Elevator.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/cards/Elevator.jsx\",\"./customization/ElevatorProperties.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/customization/ElevatorProperties.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/cards/Elevator.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\nvar LoadIndicator = IoTFCommon.LoadIndicator;\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\"\n  },\n  empty: {\n    padding: \"20px\"\n  },\n  scroller: {\n    width: \"100%\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    transition: \"top 0.5s ease\"\n  },\n  floor: {\n    width: \"110px\",\n    fontSize: \"60px\",\n    fontWeight: 100,\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    lineHeight: \"120px\",\n    transition: \"fontSize 1s ease\"\n  },\n  highlight: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"120px\",\n    opacity: 0.5,\n    transition: \"bottom 1s ease\"\n  },\n  cabin: {\n    position: \"absolute\",\n    height: \"100px\",\n    width: \"60px\",\n    fontWeight: 200,\n    border: \"3px solid grey\",\n    backgroundColor: \"white\",\n    left: \"120px\",\n    transition: \"bottom 1s ease\",\n    verticalAlign: \"middle\",\n    textAlign: \"center\",\n    fontSize: \"24px\",\n    lineHeight: \"normal\",\n    paddingTop: \"20px\"\n  },\n  weightBar: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"0px\",\n    bottom: \"0px\",\n    left: \"0px\",\n    transition: \"height 1s ease\",\n    overflow: \"hidden\"\n  },\n  weightBarContainer: {\n    height: \"100px\",\n    width: \"100%\",\n    position: \"absolute\",\n    bottom: \"-2px\",\n    lineHeight: \"normal\",\n    paddingTop: \"20px\"\n  },\n  scale: {\n    position: \"absolute\",\n    top: \"60px\",\n    bottom: \"60px\",\n    width: \"20px\",\n    right: \"13px\"\n  },\n  scaleAxis: {\n    height: \"100%\",\n    position: \"absolute\",\n    left: \"9px\",\n    borderLeft: \"3px solid grey\"\n  },\n  tick: {\n    fontSize: \"20px\",\n    lineHeight: \"20px\",\n    backgroundColor: \"white\",\n    width: \"30px\",\n    position: \"absolute\",\n    padding: \"4px 0px\",\n    textAlign: \"center\",\n    left: \"-5px\"\n  },\n  simpleTick: {\n    borderBottom: \"3px solid grey\",\n    width: \"9px\",\n    position: \"absolute\",\n    left: \"5px\"\n  },\n  heightLabel: {\n    position: \"absolute\",\n    fontSize: \"20px\",\n    lineHeight: \"30px\",\n    height: \"30px\",\n    right: \"48px\",\n    width: \"65px\",\n    textAlign: \"right\",\n    paddingRight: \"0px\",\n    transition: \"bottom 1s ease\"\n  },\n  labelText: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\"\n  },\n  pointer: {\n    width: \"20px\",\n    height: \"20px\",\n    transform: \"rotate(45deg)\",\n    right: \"-10px\",\n    top: \"6px\",\n    position: \"absolute\"\n  }\n};\n\nvar Elevator = React.createClass({\n  displayName: 'Elevator',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    demo: RPT.bool,\n    plots: RPT.array,\n    minFloor: RPT.number,\n    maxFloor: RPT.number,\n    minHeight: RPT.number,\n    maxHeight: RPT.number,\n    capacity: RPT.number,\n    floor: RPT.string,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      plots: [],\n      data: {}\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {};\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        IoTFDeviceStore.Actions.startPropertyWatch(plot.device, plot.event, plot.property);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var model = {};\n\n    model = this.addData(payload, \"floor\", model);\n    model = this.addData(payload, \"height\", model);\n    model = this.addData(payload, \"weight\", model);\n\n    if (Object.keys(model).length > 0) {\n      model.timestamp = new Date().getTime();\n      var self = this;\n      setTimeout(function () {\n        self.setState(model);\n      }, 1);\n    }\n  },\n\n  getPlot: function getPlot(type) {\n    var prop = this.props[type];\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot.id == prop) {\n        return plot;\n      }\n    }\n    return null;\n  },\n\n  addData: function addData(payload, type, model) {\n    var plot = this.getPlot(type);\n\n    if (plot) {\n      if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n        var property = IoTFDeviceStore.normalizeProperty(plot.property);\n        var obj = payload.deviceEvent.data[property];\n\n        if (obj !== undefined) {\n          model[type] = obj;\n        }\n      }\n    }\n\n    return model;\n  },\n\n  render: function render() {\n    var self = this;\n    if (this.state.floor !== undefined || this.state.height !== undefined || this.state.weight !== undefined) {\n\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n      // create array of floor names\n      var floors = [];\n      var floorPlot = this.getPlot(\"floor\");\n      var floorMin = floorPlot.min !== undefined ? floorPlot.min : 0;\n      var floorMax = floorPlot.max !== undefined ? floorPlot.max : 5;\n      for (var i = floorMax; i >= floorMin; i--) {\n        floors.push(\"\" + i);\n      }\n      var currentFloor = this.state.floor !== undefined ? this.state.floor - floorMin : floorMin;\n      var highlight = Object.assign({}, styles.highlight, { backgroundColor: this.props.theme.light, bottom: 120 * currentFloor + \"px\" });\n\n      // prepare height scale and cabin\n      var scale = [];\n      var heightPlot = this.getPlot(\"height\");\n      var heightMin = Math.floor(heightPlot.min !== undefined ? heightPlot.min : 0);\n      var heightMax = Math.floor(heightPlot.max !== undefined ? heightPlot.max : 20);\n      for (var i = heightMax; i >= heightMin; --i) {\n        scale.push(i);\n      }\n      var currentHeight = this.state.height !== undefined ? this.state.height - heightMin : heightMin;\n      var heightFactor = 120 / ((heightMax - heightMin) / (floorMax - floorMin));\n      var cabin = Object.assign({}, styles.cabin, { borderColor: this.props.theme.normal, backgroundColor: this.props.theme.content, color: this.props.theme.major, bottom: heightFactor * currentHeight + 10 + \"px\" });\n      var label = Object.assign({}, styles.heightLabel, { backgroundColor: this.props.theme.light, color: this.props.theme.content, bottom: heightFactor * currentHeight + 40 + \"px\" });\n      var labelText = Object.assign({}, styles.labelText, { backgroundColor: this.props.theme.light });\n      var pointer = Object.assign({}, styles.pointer, { backgroundColor: this.props.theme.light });\n\n      // prepare weight indicator\n      var weight = [];\n      var weightPlot = this.getPlot(\"weight\");\n      var weightMin = 0;\n      var weightMax = weightPlot.max !== undefined ? weightPlot.max : 2000;\n      var currentWeight = this.state.weight / weightMax * 100;\n      var weightBar = Object.assign({}, styles.weightBar, { backgroundColor: this.props.theme.normal, color: this.props.theme.content, height: currentWeight + \"px\" });\n\n      var contentHeight = (floorMax - floorMin) * 120;\n      var containerHeight = this.props.wrapper.realHeight;\n\n      var top = Math.min(contentHeight - currentFloor * 120, contentHeight - heightFactor * currentHeight);\n      var bottom = Math.max(contentHeight - currentFloor * 120 + 120, contentHeight - (heightFactor * currentHeight + 120));\n\n      var scrollPos = this.scrollPos ? this.scrollPos : 0;\n      if (bottom + scrollPos > containerHeight) {\n        scrollPos = -(bottom - containerHeight);\n      } else if (top + scrollPos < 0) {\n        scrollPos = 0 - top;\n      }\n      this.scrollPos = scrollPos;\n      var scroller = Object.assign({}, styles.scroller, { top: scrollPos + \"px\" });\n\n      return React.createElement(\n        'div',\n        { style: style },\n        React.createElement(\n          'div',\n          { style: scroller },\n          React.createElement(\n            'div',\n            { style: styles.scale },\n            React.createElement('div', { style: styles.scaleAxis }),\n            scale.map(function (item) {\n              if (item % 5 == 0) {\n                var tick = Object.assign({}, styles.tick, { backgroundColor: self.props.theme.content, color: self.props.theme.minor, bottom: heightFactor * item - 20 + \"px\" });\n                return React.createElement(\n                  'div',\n                  { key: item, style: tick },\n                  item\n                );\n              } else {\n                var tick = Object.assign({}, styles.simpleTick, { borderColor: self.props.theme.minor, bottom: heightFactor * item - 10 + \"px\" });\n                return React.createElement('div', { key: item, style: tick });\n              }\n            })\n          ),\n          React.createElement('div', { style: highlight }),\n          React.createElement(\n            'div',\n            { style: styles.floors },\n            floors.map(function (item) {\n              var floor = Object.assign({}, styles.floor, \"\" + self.state.floor == item ? { fontSize: \"100px\" } : {});\n              return React.createElement(\n                'div',\n                { key: item, style: floor },\n                item\n              );\n            })\n          ),\n          React.createElement(\n            'div',\n            { style: cabin },\n            this.state.weight,\n            ' kg',\n            React.createElement(\n              'div',\n              { style: weightBar },\n              React.createElement(\n                'div',\n                { style: styles.weightBarContainer },\n                this.state.weight,\n                ' kg'\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            { style: label },\n            React.createElement('div', { style: pointer }),\n            React.createElement(\n              'div',\n              { style: labelText },\n              this.state.height,\n              ' m'\n            )\n          )\n        )\n      );\n    } else {\n      if (!this.props.floor || !this.props.height || !this.props.weight) {\n        return React.createElement(\n          'div',\n          { style: styles.empty },\n          'No all data point defined'\n        );\n      } else {\n        return React.createElement(\n          'div',\n          { style: styles.empty },\n          React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n        );\n      }\n    }\n  }\n});\n\nmodule.exports = Elevator;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/customization/ElevatorProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nIoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar RPT = React.PropTypes;\nvar InputField = IoTFCommon.InputField;\nvar Label = IoTFCommon.Label;\nvar Select = IoTFCommon.Select;\nvar Option = IoTFCommon.Option;\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n\n};\n\nvar ElevatorProperties = React.createClass({\n  displayName: 'ElevatorProperties',\n\n\n  propTypes: {\n    floor: RPT.string,\n    height: RPT.string,\n    weight: RPT.string,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      floor: \"location.floor\",\n      height: \"location.height\",\n      weight: \"weight.value\"\n      // floor: null,\n      // height: null,\n      // weight: null\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      floor: this.props.floor,\n      height: this.props.height,\n      weight: this.props.weight\n    };\n  },\n\n  onFloorChanged: function onFloorChanged(value) {\n    this.setState({\n      floor: value\n    });\n  },\n\n  onHeightChanged: function onHeightChanged(value) {\n    this.setState({\n      height: value\n    });\n  },\n\n  onWeightChanged: function onWeightChanged(value) {\n    this.setState({\n      weight: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Floor data point', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onFloorChanged, value: this.state.floor },\n                    this.props.plots.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item.id, value: item.id, selected: self.state.floor == item.id },\n                        item.label\n                      );\n                    })\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Height data point', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onHeightChanged, value: this.state.height },\n                    this.props.plots.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item.id, value: item.id, selected: self.state.height == item.id },\n                        item.label\n                      );\n                    })\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Weight data point', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onWeightChanged, value: this.state.weight },\n                    this.props.plots.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item.id, value: item.id, selected: self.state.weight == item.id },\n                        item.label\n                      );\n                    })\n                  )\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = ElevatorProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/Maintenance.jsx\":[function(require,module,exports){\n'use strict';\n\nvar Maintenance = {};\nMaintenance.Maintenance = require('./cards/Maintenance.jsx');\nMaintenance.VideoChat = require('./cards/VideoChat.jsx');\nMaintenance.MessageViewer = require('./cards/MessageViewer.jsx');\nMaintenance.MessageDetails = require('./cards/MessageDetails.jsx');\nMaintenance.LogViewer = require('./cards/LogViewer.jsx');\nMaintenance.MaintenanceStore = require('./stores/MaintenanceStore.js');\n\nmodule.exports = Maintenance;\n\n},{\"./cards/LogViewer.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/LogViewer.jsx\",\"./cards/Maintenance.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/Maintenance.jsx\",\"./cards/MessageDetails.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/MessageDetails.jsx\",\"./cards/MessageViewer.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/MessageViewer.jsx\",\"./cards/VideoChat.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/VideoChat.jsx\",\"./stores/MaintenanceStore.js\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/LogViewer.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar MaintenanceStore = require('../stores/MaintenanceStore.js');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\",\n    overflow: \"scroll\"\n\n  },\n  entry: {\n    fontSize: \"12px\",\n    backgroundColor: \"#EEEEEE\",\n    padding: \"2px 10px\",\n    margin: \"1px\"\n  },\n  timestamp: {\n    width: \"100px\",\n    display: \"inline-block\"\n  },\n  device: {\n    width: \"150px\",\n    display: \"inline-block\"\n  },\n  event: {\n    width: \"150px\",\n    display: \"inline-block\"\n  },\n  scroller: {}\n};\n\nvar LogViewer = React.createClass({\n  displayName: 'LogViewer',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      logEntries: []\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    MaintenanceStore.listen(this.onUpdate);\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.isMounted()) {\n      if (payload.log) {\n        if (!this.count) {\n          this.count = 0;\n        }\n        payload.log = {\n          log: payload.log,\n          count: this.count++\n        };\n        this.state.logEntries.splice(0, 0, payload.log);\n        while (this.state.logEntries.length > 100) {\n          this.state.logEntries.pop();\n        }\n        this.setState(this.state.logEntries);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {},\n\n  render: function render() {\n    var self = this;\n\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    if (this.state && this.state.logEntries && this.state.logEntries.length > 0) {\n      return React.createElement(\n        'div',\n        { style: style },\n        React.createElement(\n          'div',\n          { style: styles.scroller },\n          this.state.logEntries.map(function (item) {\n            return React.createElement(\n              'div',\n              { key: item.count, style: styles.entry },\n              item.log\n            );\n          })\n        )\n      );\n    } else {\n      return React.createElement(\n        'div',\n        { style: style },\n        'Start logging in maintenance card'\n      );\n    }\n  }\n});\n\nmodule.exports = LogViewer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../stores/MaintenanceStore.js\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/Maintenance.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar MaintenanceStore = require('../stores/MaintenanceStore.js');\nvar Button = IoTFCommon.Button;\nvar Label = IoTFCommon.Label;\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\"\n  }\n};\n\nvar Maintenance = React.createClass({\n  displayName: 'Maintenance',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  getInitialState: function getInitialState() {\n    return {};\n  },\n\n  componentDidMount: function componentDidMount() {\n    MaintenanceStore.listen(this.onUpdate);\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.isMounted()) {\n      if (payload.dashboards) {\n        var model = {};\n        if (payload.dashboards) {\n          model.dashboards = payload.dashboards;\n        }\n        this.setState(model);\n      }\n      if (payload.fullLog) {\n        this.setState({\n          log: payload.fullLog\n        });\n      }\n    }\n  },\n\n  onBackup: function onBackup() {\n    MaintenanceStore.Actions.backupDashboard();\n  },\n\n  onRestore: function onRestore() {\n    var button = document.getElementById(\"uploadButton\");\n    button.click();\n  },\n\n  onUploadRestoreFile: function onUploadRestoreFile() {\n    var button = document.getElementById(\"uploadButton\");\n    var files = button.files;\n    if (files && files.length > 0) {\n      var file = files[0];\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        var content = e.target.result;\n        console.log(content);\n        MaintenanceStore.Actions.restoreDashboard({ content: content });\n      };\n      reader.readAsBinaryString(file);\n    }\n  },\n\n  onStartLogging: function onStartLogging() {\n    MaintenanceStore.Actions.startLogging();\n  },\n\n  onStopLogging: function onStopLogging() {\n    MaintenanceStore.Actions.stopLogging();\n  },\n\n  render: function render() {\n    var self = this;\n\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    var backupButton = \"\";\n    if (this.state.dashboards) {\n      backupButton = React.createElement(Button, { key: 1, download: \"DashboardBackup.json\", onClick: function onClick() {\n          setTimeout(function () {\n            self.setState({ dashboards: null });\n          }, 1000);\n        }, target: \"_blank\", href: \"data:text/json;charset=utf-8,\" + this.state.dashboards, text: \"Download Backup\" });\n    } else {\n      backupButton = React.createElement(Button, { key: 2, onClick: self.onBackup, text: \"Generate Backup\" });\n    }\n\n    var downloadButton = \"\";\n    if (this.state.log) {\n      downloadButton = React.createElement(Button, { key: 1, download: \"DashboardLog.txt\", onClick: function onClick() {\n          setTimeout(function () {\n            self.setState({ log: null });\n          }, 1000);\n        }, target: \"_blank\", href: \"data:text;charset=utf-8,\" + this.state.log, text: \"Download Log\" });\n    } else {\n      downloadButton = React.createElement(Button, { key: 2, onClick: self.onStopLogging, text: \"Stop Log\" });\n    }\n\n    return React.createElement(\n      'div',\n      { style: style },\n      React.createElement(\n        Label,\n        { label: \"Dashboard\", theme: this.props.theme },\n        backupButton,\n        React.createElement(Button, { onClick: self.onRestore, text: \"Restore\" }),\n        React.createElement('input', { id: 'uploadButton', onChange: this.onUploadRestoreFile, type: \"file\", style: { display: \"none\" } })\n      ),\n      React.createElement(\n        Label,\n        { label: \"Logs\", theme: this.props.theme },\n        React.createElement(Button, { onClick: self.onStartLogging, text: \"Start log\" }),\n        downloadButton\n      )\n    );\n  }\n});\n\nmodule.exports = Maintenance;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../stores/MaintenanceStore.js\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/MessageDetails.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar MaintenanceStore = require('../stores/MaintenanceStore.js');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\",\n    overflow: \"scroll\"\n\n  },\n  entry: {\n    fontSize: \"14px\",\n    backgroundColor: \"#EEEEEE\",\n    padding: \"2px 10px\",\n    margin: \"1px\"\n  },\n  scroller: {}\n};\n\nvar MessageDetails = React.createClass({\n  displayName: 'MessageDetails',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      messages: []\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    MaintenanceStore.listen(this.onUpdate);\n    MaintenanceStore.Actions.observeMessages();\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.isMounted()) {\n      if (payload.message) {\n        this.setState({\n          message: payload.message\n        });\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    MaintenanceStore.Actions.stopObservingMessages();\n  },\n\n  constructMessage: function constructMessage(message) {\n    var self = this;\n\n    var result = \"\";\n    if (message != null && (typeof message === 'undefined' ? 'undefined' : _typeof(message)) === 'object') {\n      var keys = Object.keys(message);\n      result = React.createElement(\n        'div',\n        { style: styles.entry },\n        keys.map(function (key) {\n          return React.createElement(\n            'div',\n            { style: styles.entry },\n            key,\n            ': ',\n            self.constructMessage(message[key])\n          );\n        })\n      );\n    } else {\n      result = message;\n    }\n    return result;\n  },\n\n  render: function render() {\n    var self = this;\n\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    if (this.state && this.state.message) {\n      var message = this.constructMessage(this.state.message.data);\n\n      var time = new Date(this.state.message.timestamp);\n\n      return React.createElement(\n        'div',\n        { style: style },\n        React.createElement(\n          'div',\n          { style: styles.scroller },\n          React.createElement(\n            'div',\n            { style: styles.entry },\n            React.createElement(\n              'b',\n              null,\n              'Time:'\n            ),\n            ' ',\n            time.toTimeString().split(\" \")[0]\n          ),\n          React.createElement(\n            'div',\n            { style: styles.entry },\n            React.createElement(\n              'b',\n              null,\n              'Device:'\n            ),\n            ' ',\n            this.state.message.device\n          ),\n          React.createElement(\n            'div',\n            { style: styles.entry },\n            React.createElement(\n              'b',\n              null,\n              'Event:'\n            ),\n            ' ',\n            this.state.message.event\n          ),\n          React.createElement('p', null),\n          message\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = MessageDetails;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../stores/MaintenanceStore.js\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/MessageViewer.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar MaintenanceStore = require('../stores/MaintenanceStore.js');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\",\n    overflow: \"scroll\"\n\n  },\n  entry: {\n    fontSize: \"12px\",\n    backgroundColor: \"#EEEEEE\",\n    padding: \"2px 10px\",\n    margin: \"1px\"\n  },\n  timestamp: {\n    width: \"100px\",\n    display: \"inline-block\"\n  },\n  device: {\n    width: \"150px\",\n    display: \"inline-block\"\n  },\n  event: {\n    width: \"150px\",\n    display: \"inline-block\"\n  },\n  scroller: {}\n};\n\nvar MessageViewer = React.createClass({\n  displayName: 'MessageViewer',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      messages: []\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    MaintenanceStore.listen(this.onUpdate);\n    MaintenanceStore.Actions.observeMessages();\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.isMounted()) {\n      if (payload.message) {\n        if (!this.count) {\n          this.count = 0;\n        }\n        payload.message.count = this.count++;\n        this.state.messages.splice(0, 0, payload.message);\n        while (this.state.messages.length > 100) {\n          this.state.messages.pop();\n        }\n        this.setState(this.state.messages);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    MaintenanceStore.Actions.stopObservingMessages();\n  },\n\n  render: function render() {\n    var self = this;\n\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    return React.createElement(\n      'div',\n      { style: style },\n      React.createElement(\n        'div',\n        { style: styles.scroller },\n        this.state.messages.map(function (item) {\n          var time = new Date(item.timestamp);\n          return React.createElement(\n            'div',\n            { key: item.count, style: styles.entry },\n            React.createElement(\n              'span',\n              { style: styles.timestamp },\n              time.toTimeString().split(\" \")[0]\n            ),\n            React.createElement(\n              'span',\n              { style: styles.device },\n              item.device\n            ),\n            React.createElement(\n              'span',\n              { style: styles.event },\n              item.event\n            )\n          );\n        })\n      )\n    );\n  }\n});\n\nmodule.exports = MessageViewer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../stores/MaintenanceStore.js\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/cards/VideoChat.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar LoadIndicator = IoTFCommon.LoadIndicator;\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"0px\"\n  }\n};\n\nvar VideoChat = React.createClass({\n  displayName: 'VideoChat',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  render: function render() {\n    var self = this;\n\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    return React.createElement(\n      'div',\n      { style: style },\n      React.createElement('iframe', { src: 'https://appear.in/fedscrum', width: '641', height: '341', frameborder: '0' })\n    );\n  }\n});\n\nmodule.exports = VideoChat;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/stores/MaintenanceStore.js\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\nvar DashboardStore = IoTFComponents.Dashboard.DashboardStore;\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\n\nvar Actions = Reflux.createActions(['backupDashboard', 'restoreDashboard', 'startLogging', 'stopLogging', 'observeMessages', 'stopObservingMessages']);\n\nvar MaintenanceStore = Reflux.createStore({\n\n  Actions: Actions,\n\n  buffer: [],\n  pointer: 0,\n  threshold: 500,\n\n  init: function init() {\n    this.listenTo(Actions.backupDashboard, this.onBackupDashboard);\n    this.listenTo(Actions.restoreDashboard, this.onRestoreDashboard);\n    this.listenTo(Actions.startLogging, this.onStartLogging);\n    this.listenTo(Actions.stopLogging, this.onStopLogging);\n    this.listenTo(Actions.observeMessages, this.onObserveMessages);\n    this.listenTo(Actions.stopObservingMessages, this.onStopObservingMessages);\n  },\n\n  onBackupDashboard: function onBackupDashboard() {\n    var dashboards = DashboardStore.dashboards;\n    var json = JSON.stringify(dashboards);\n\n    this.trigger({\n      dashboards: json\n    });\n  },\n\n  onRestoreDashboard: function onRestoreDashboard(payload) {\n    var ds = DashboardStore;\n    var content = payload.content;\n    try {\n      var obj = JSON.parse(content);\n      ds.dashboards = obj;\n\n      ds.cleanup();\n\n      var dashboard = ds.dashboards.dashboards[0];\n\n      var name = null;\n      if (!name && ds.dashboards.settings && ds.dashboards.settings.defaultDashboard) {\n        name = ds.dashboards.settings.defaultDashboard;\n      }\n\n      if (name) {\n        var temp = ds.getDashboardByName(name);\n        if (temp) {\n          dashboard = temp;\n        }\n      }\n\n      ds.dashboard = dashboard;\n\n      ds.trigger({ components: ds.getComponents(), dashboard: ds.dashboard });\n      ds.storeDashboard();\n    } catch (e) {\n      this.trigger({\n        error: \"Restore failed\"\n      });\n    }\n  },\n\n  onObserveMessages: function onObserveMessages() {\n    var self = this;\n    IoTFDeviceStore.setMessageObserver(function (device, event, data, timestamp) {\n      self.trigger({ message: {\n          device: device,\n          event: event,\n          data: data,\n          timestamp: timestamp\n        } });\n    });\n  },\n\n  onStopObservingMessages: function onStopObservingMessages() {\n    IoTFDeviceStore.setMessageObserver(null);\n  },\n\n  onStartLogging: function onStartLogging() {\n    var self = this;\n    this.buffer = [];\n    this.pointer = 0;\n\n    console.orgLog = console.log;\n    console.log = function (obj) {\n      self.storeInBuffer(obj);\n      console.orgLog(obj);\n    };\n\n    console.orgInfo = console.info;\n    console.info = function (obj) {\n      self.storeInBuffer(obj);\n      console.orgInfo(obj);\n    };\n\n    console.orgWarn = console.warn;\n    console.warn = function (obj) {\n      self.storeInBuffer(obj);\n      console.orgWarn(obj);\n    };\n\n    console.orgError = console.error;\n    console.error = function (obj) {\n      self.storeInBuffer(obj);\n      console.orgError(obj);\n    };\n  },\n\n  onStopLogging: function onStopLogging() {\n    var self = this;\n    console.log = console.orgLog;\n    console.info = console.orgInfo;\n    console.warn = console.orgWarn;\n    console.error = console.orgError;\n\n    var text = this.getBufferAsString();\n    this.trigger({\n      fullLog: text\n    });\n  },\n\n  storeInBuffer: function storeInBuffer(obj) {\n    this.buffer[this.pointer] = obj;\n    this.pointer++;\n    if (this.pointer > this.threshold - 1) {\n      this.pointer = 0;\n    }\n    this.trigger({\n      log: obj\n    });\n  },\n\n  getBufferAsString: function getBufferAsString() {\n    var text = \"\";\n    var counter = 0;\n    for (var i = this.pointer; counter < this.threshold; i--) {\n      if (i < 0) {\n        i = this.threshold - 1;\n      }\n      var line = this.buffer[i];\n      counter++;\n      if (line) {\n        text += line + \"\\r\\n\";\n      }\n    }\n    return text;\n  }\n\n});\n\nmodule.exports = MaintenanceStore;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/Modules.jsx\":[function(require,module,exports){\n'use strict';\n\nvar Modules = {};\nModules.Maintenance = require('./Maintenance/Maintenance.jsx');\nModules.ElevatorDemo = require('./ElevatorDemo/ElevatorDemo.jsx');\nModules.WeatherService = require('./WeatherService/WeatherService.jsx');\nModules.Runtastic = require('./Runtastic/Runtastic.jsx');\nModules.ToggleGroup = require('./ToggleGroup/ToggleGroup.jsx');\n\nmodule.exports = Modules;\n\n},{\"./ElevatorDemo/ElevatorDemo.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ElevatorDemo/ElevatorDemo.jsx\",\"./Maintenance/Maintenance.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Maintenance/Maintenance.jsx\",\"./Runtastic/Runtastic.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Runtastic/Runtastic.jsx\",\"./ToggleGroup/ToggleGroup.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/ToggleGroup.jsx\",\"./WeatherService/WeatherService.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/WeatherService.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Runtastic/Runtastic.jsx\":[function(require,module,exports){\n'use strict';\n\nvar Runtastic = {};\nRuntastic.Runtastic = require('./cards/Runtastic.jsx');\n\nmodule.exports = Runtastic;\n\n},{\"./cards/Runtastic.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/Runtastic/cards/Runtastic.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/Runtastic/cards/Runtastic.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\n\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar CardDatapoint = IoTFCommon.CardDatapoint;\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    padding: \"30px\"\n  },\n  empty: {\n    padding: \"20px\"\n  },\n  map: {\n    right: \"30px\",\n    top: \"30px\",\n    position: \"absolute\"\n  }\n};\n\nvar Runtastic = React.createClass({\n  displayName: 'Runtastic',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    demo: RPT.bool,\n    plots: RPT.array\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      plots: [],\n      data: {}\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      \"date\": null,\n      \"distance\": 0,\n      \"duration\": 0,\n      \"gain\": 0,\n      \"id\": \"0\",\n      \"kcal\": 0,\n      \"loss\": 0,\n      \"map\": \"\",\n      \"pace\": 0,\n      \"page\": \"\",\n      \"speed\": 0\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    if (this.props.plots && this.props.plots.length > 0) {\n      var plot = this.props.plots[0];\n      // we just listen for the event since the properties are hardcoded\n      IoTFDeviceStore.Actions.startEventWatch(plot.device, plot.event);\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.props.plots && this.props.plots.length > 0) {\n      var plot = this.props.plots[0];\n      if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n        var model = {};\n        var data = payload.deviceEvent.data;\n\n        model = this.addData(data, \"date\", model);\n        model = this.addData(data, \"distance\", model);\n        model = this.addData(data, \"duration\", model);\n        model = this.addData(data, \"gain\", model);\n        model = this.addData(data, \"id\", model);\n        model = this.addData(data, \"kcal\", model);\n        model = this.addData(data, \"loss\", model);\n        model = this.addData(data, \"map\", model);\n        model = this.addData(data, \"pace\", model);\n        model = this.addData(data, \"page\", model);\n        model = this.addData(data, \"speed\", model);\n\n        if (Object.keys(model).length > 0) {\n          model.timestamp = new Date().getTime();\n          var self = this;\n          setTimeout(function () {\n            self.setState(model);\n          }, 1);\n        }\n      }\n    }\n  },\n\n  addData: function addData(payload, property, model) {\n    var property = IoTFDeviceStore.normalizeProperty(property);\n    var obj = payload[property];\n\n    if (obj !== undefined) {\n      model[property] = obj;\n    }\n\n    return model;\n  },\n\n  render: function render() {\n    var self = this;\n    if (this.state[\"date\"]) {\n\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n      var html = \"\";\n      var height = this.props.wrapper.height;\n      var width = this.props.wrapper.width;\n\n      var seconds = Math.floor(this.state[\"duration\"] / 1000);\n      var hours = Math.floor(seconds / 3600);\n      seconds = seconds - hours * 3600;\n      var minutes = Math.floor(seconds / 60);\n      seconds = seconds - minutes * 60;\n\n      var dateString = this.state[\"date\"];\n      // handle messed up date format (missing leading 0 for hours below 10)\n      var tokens = dateString.split(\"T\");\n      dateString = tokens[0] + \"T\" + (tokens[1].length < 8 ? \"0\" : \"\") + tokens[1];\n\n      var dateObj = new Date(dateString);\n\n      var main = React.createElement(\n        'div',\n        null,\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Start time' },\n          dateObj.toLocaleString().replace(\",\", \" \")\n        ),\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Distance' },\n          this.state[\"distance\"],\n          ' m'\n        ),\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Duration' },\n          hours,\n          ' h ',\n          minutes,\n          ' m ',\n          seconds,\n          ' s'\n        )\n      );\n\n      var paceSeconds = this.state[\"pace\"];\n      var paceMinutes = Math.floor(paceSeconds);\n      paceSeconds = Math.floor((paceSeconds - paceMinutes) * 60);\n\n      var sub = React.createElement(\n        'div',\n        null,\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Pace' },\n          paceMinutes,\n          ' m ',\n          paceSeconds,\n          ' s per km'\n        ),\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Speed' },\n          this.state[\"speed\"].toFixed(2),\n          ' km/h'\n        )\n      );\n\n      if (height == 3 && width == 2) {\n\n        return React.createElement(\n          'div',\n          { style: style },\n          main\n        );\n      } else if (height == 4 && width == 4) {\n        var mapUrl = \"http:\" + this.state[\"map\"];\n        mapUrl = mapUrl.replace(\"width=50\", \"width=300\");\n        mapUrl = mapUrl.replace(\"height=70\", \"height=280\");\n        return React.createElement(\n          'div',\n          { style: style },\n          main,\n          sub,\n          React.createElement('img', { style: styles.map, src: mapUrl })\n        );\n      } else {\n        return React.createElement(\n          'div',\n          { style: style },\n          main\n        );\n      }\n    } else {\n      return React.createElement(\n        'div',\n        { style: styles.empty },\n        React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n      );\n    }\n  }\n});\n\nmodule.exports = Runtastic;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/ToggleGroup.jsx\":[function(require,module,exports){\n'use strict';\n\nvar ToggleGroup = {};\nToggleGroup.ToggleGroup = require('./cards/ToggleGroup.jsx');\nToggleGroup.ToggleTile = require('./components/ToggleTile.jsx');\nToggleGroup.ToggleGroupProperties = require('./customization/ToggleGroupProperties.jsx');\n\nmodule.exports = ToggleGroup;\n\n},{\"./cards/ToggleGroup.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/cards/ToggleGroup.jsx\",\"./components/ToggleTile.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/components/ToggleTile.jsx\",\"./customization/ToggleGroupProperties.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/customization/ToggleGroupProperties.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/cards/ToggleGroup.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\n\nvar LoadIndicator = IoTFCommon.LoadIndicator;\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\nvar ToggleTile = require('../components/ToggleTile.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"15px 5px\"\n  }\n};\n\nvar ToggleGroup = React.createClass({\n  displayName: 'ToggleGroup',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    plots: RPT.array,\n    iconType: RPT.string,\n    invert: RPT.bool\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      iconType: \"WINDOW\",\n      invert: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      model: {}\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        IoTFDeviceStore.Actions.startPropertyWatch(plot.device, plot.event, plot.property);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var found = false;\n    var model = {};\n\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n          var property = IoTFDeviceStore.normalizeProperty(plot.property);\n          var obj = payload.deviceEvent.data[property];\n\n          if (obj !== undefined) {\n            model[plot.id] = obj;\n            found = true;\n          }\n        }\n      }\n    }\n    if (found) {\n      this.setState(model);\n    }\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n      var items = [];\n\n      for (var i in this.props.plots) {\n        var plot = this.props.plots[i];\n        var state = this.state[plot.id];\n        var icon = null;\n        if (state !== undefined) {\n          if (this.props.invert) {\n            state = !state;\n          }\n          icon = \"/resources/images/\" + this.props.iconType + \"_\" + (state ? \"ON\" : \"OFF\") + \".png\";\n        }\n        var item = {\n          id: plot.id,\n          label: plot.label,\n          value: state,\n          icon: icon\n        };\n        items.push(item);\n      }\n\n      return React.createElement(\n        'div',\n        { style: style },\n        items.map(function (item) {\n          return React.createElement(\n            ToggleTile,\n            { key: item.id, theme: self.props.theme, icon: item.icon, state: !!item.value },\n            item.label\n          );\n        })\n      );\n    } else {\n      return React.createElement(\n        'div',\n        { style: styles.style },\n        React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n      );\n    }\n  }\n});\n\nmodule.exports = ToggleGroup;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../components/ToggleTile.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/components/ToggleTile.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/components/ToggleTile.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"95px\",\n    height: \"95px\",\n    margin: \"5px\",\n    float: \"left\"\n  },\n  icon: {\n    width: \"55px\",\n    height: \"55px\",\n    margin: \"5px 20px\",\n    fontSize: \"12px\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  },\n  label: {\n    fontSize: \"12px\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    padding: \"5px 10px\",\n    textAlign: \"center\"\n  }\n};\n\nvar ToggleTile = React.createClass({\n  displayName: \"ToggleTile\",\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    icon: RPT.string,\n    state: RPT.bool\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      icon: null\n    };\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style);\n    var label = Object.assign({}, styles.label);\n    var icon = Object.assign({}, styles.icon);\n\n    if (!this.props.state) {\n      label.color = this.props.theme.minor;\n      label.backgroundColor = this.props.theme.content;\n      icon.color = this.props.theme.minor;\n    } else {\n      label.color = this.props.theme.titleText;\n      label.backgroundColor = this.props.theme.light;\n    }\n\n    if (this.props.icon) {\n      return React.createElement(\n        \"div\",\n        { style: style },\n        React.createElement(\"img\", { src: this.props.icon, style: styles.icon }),\n        React.createElement(\n          \"div\",\n          { style: label },\n          this.props.children\n        )\n      );\n    } else {\n      return React.createElement(\n        \"div\",\n        { style: style },\n        React.createElement(\n          \"div\",\n          { style: icon },\n          \"Unknown state\"\n        ),\n        React.createElement(\n          \"div\",\n          { style: label },\n          this.props.children\n        )\n      );\n    }\n  }\n});\n\nmodule.exports = ToggleTile;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/ToggleGroup/customization/ToggleGroupProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\nvar RPT = React.PropTypes;\nvar Label = IoTFCommon.Label;\nvar ComboBox = IoTFCommon.ComboBox;\nvar Option = IoTFCommon.Option;\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\nvar Select = IoTFCommon.Select;\nvar SwitchBtn = IoTFCommon.SwitchBtn;\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n};\n\nvar ToggleGroupProperties = React.createClass({\n  displayName: 'ToggleGroupProperties',\n\n\n  propTypes: {\n    iconType: RPT.string,\n    invert: RPT.bool,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      iconType: \"WINDOW\",\n      invert: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      iconType: this.props.iconType,\n      invert: this.props.invert !== undefined ? this.props.invert : null\n    };\n  },\n\n  onIconTypeChanged: function onIconTypeChanged(value) {\n    this.setState({\n      iconType: value\n    });\n  },\n\n  onInvertChanged: function onInvertChanged(value) {\n    this.setState({\n      invert: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n\n      var iconType = this.state.iconType;\n\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Visualization', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onIconTypeChanged, value: iconType },\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'DISC', selected: iconType == \"DISC\" },\n                      'Disc'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'LIGHT', selected: iconType == \"LIGHT\" },\n                      'Light'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'SWITCH', selected: iconType == \"SWITCH\" },\n                      'Switch'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'FAN', selected: iconType == \"FAN\" },\n                      'Fan'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'HEATING', selected: iconType == \"HEATING\" },\n                      'Heating'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'BATTERY', selected: iconType == \"BATTERY\" },\n                      'Battery'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'DOOR', selected: iconType == \"DOOR\" },\n                      'Door'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'WINDOW', selected: iconType == \"WINDOW\" },\n                      'Window'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'SMILEY', selected: iconType == \"SMILEY\" },\n                      'Smiley'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'BLANKET', selected: iconType == \"BLANKET\" },\n                      'Blanket'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'WATER', selected: iconType == \"WATER\" },\n                      'Water'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'SPRINKLER', selected: iconType == \"SPRINKLER\" },\n                      'Sprinkler'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'PUMP', selected: iconType == \"PUMP\" },\n                      'Pump'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'RAIN', selected: iconType == \"RAIN\" },\n                      'Rain'\n                    )\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Invert value', theme: this.props.theme },\n                  React.createElement(SwitchBtn, { theme: this.props.theme, onChange: this.onInvertChanged, initialValue: !!this.state.invert, trueText: 'true = OFF', falseText: 'true = ON' })\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = ToggleGroupProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/WeatherService.jsx\":[function(require,module,exports){\n'use strict';\n\nvar WeatherService = {};\nWeatherService.WeatherService = require('./cards/WeatherService.jsx');\nWeatherService.WeatherServiceProperties = require('./customization/WeatherServiceProperties.jsx');\n\nmodule.exports = WeatherService;\n\n},{\"./cards/WeatherService.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/cards/WeatherService.jsx\",\"./customization/WeatherServiceProperties.jsx\":\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/customization/WeatherServiceProperties.jsx\"}],\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/cards/WeatherService.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\n\nvar IoTFDeviceStore = IoTFCommon.IoTFDeviceStore;\nvar LoadIndicator = IoTFCommon.LoadIndicator;\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n\t\tcontainer: {\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tposition: \"relative\",\n\t\t\t\toverflow: \"hidden\"\n\t\t},\n\t\tempty: {\n\t\t\t\tpadding: \"20px\"\n\t\t}\n};\n\nvar path = \"resources/images/\";\n\nvar days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n\nvar iconMap = {\n\t\t\"chanceflurries\": \"w1\",\n\t\t\"chancerain\": \"w2\",\n\t\t\"chancesleet\": \"w3\",\n\t\t\"chancesnow\": \"w4\",\n\t\t\"chancetstorms\": \"w5\",\n\t\t\"clear\": \"w6\",\n\t\t\"cloudy\": \"w7\",\n\t\t\"flurries\": \"w8\",\n\t\t\"fog\": \"w9\",\n\t\t\"hazy\": \"w10\",\n\t\t\"mostlycloudy\": \"w11\",\n\t\t\"mostlysunny\": \"w12\",\n\t\t\"partlycloudy\": \"w13\",\n\t\t\"partlysunny\": \"w14\",\n\t\t\"sleet\": \"w15\",\n\t\t\"rain\": \"w16\",\n\t\t\"snow\": \"w17\",\n\t\t\"sunny\": \"w18\",\n\t\t\"tstorms\": \"w19\",\n\t\t\"unknown\": \"w0\"\n};\n\nvar WeatherService = React.createClass({\n\t\tdisplayName: 'WeatherService',\n\n\t\tpropTypes: {\n\t\t\t\ttheme: RPT.object.isRequired,\n\t\t\t\tstyle: RPT.object,\n\t\t\t\tnls: RPT.object,\n\t\t\t\twrapper: RPT.object,\n\t\t\t\tdemo: RPT.bool,\n\t\t\t\tplots: RPT.array,\n\t\t\t\tlocation: RPT.string\n\t\t},\n\n\t\tgetDefaultProps: function getDefaultProps() {\n\t\t\t\treturn {\n\t\t\t\t\t\tplots: [],\n\t\t\t\t\t\tdata: {}\n\t\t\t\t};\n\t\t},\n\n\t\tgetInitialState: function getInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\t\t\"DATIcon\": \"unknown\",\n\t\t\t\t\t\t\"TomorrowIcon\": \"unknown\",\n\t\t\t\t\t\t\"DewPoint\": \"-\",\n\t\t\t\t\t\t\"Visibility\": \"-\",\n\t\t\t\t\t\t\"Location\": \"-\",\n\t\t\t\t\t\t\"IsDark\": \"-\",\n\t\t\t\t\t\t\"SunriseNow\": \"-\",\n\t\t\t\t\t\t\"WindDirection\": \"-\",\n\t\t\t\t\t\t\"WindSpeed\": \"-\",\n\t\t\t\t\t\t\"TomorrowLow\": \"-\",\n\t\t\t\t\t\t\"DATHigh\": \"-\",\n\t\t\t\t\t\t\"TodayHigh\": \"-\",\n\t\t\t\t\t\t\"DATLow\": \"-\",\n\t\t\t\t\t\t\"TodayIcon\": \"unknown\",\n\t\t\t\t\t\t\"Sunset\": \"-\",\n\t\t\t\t\t\t\"MoonAge\": \"-\",\n\t\t\t\t\t\t\"TodayLow\": \"-\",\n\t\t\t\t\t\t\"TomorrowHigh\": \"-\",\n\t\t\t\t\t\t\"Pressure\": \"-\",\n\t\t\t\t\t\t\"Temperature\": \"-\",\n\t\t\t\t\t\t\"Humidity\": \"-\",\n\t\t\t\t\t\t\"Sunrise\": \"-\",\n\t\t\t\t\t\t\"MoonLight\": \"-\",\n\t\t\t\t\t\t\"SunsetNow\": \"-\"\n\n\t\t\t\t};\n\t\t},\n\n\t\tcomponentDidMount: function componentDidMount() {\n\t\t\t\tthis.sub = IoTFDeviceStore.listen(this.onUpdate);\n\t\t\t\tif (this.props.plots && this.props.plots.length > 0) {\n\t\t\t\t\t\tvar plot = this.props.plots[0];\n\t\t\t\t\t\t// we just listen for the event since the properties are hardcoded\n\t\t\t\t\t\tIoTFDeviceStore.Actions.startEventWatch(plot.device, plot.event);\n\t\t\t\t}\n\t\t},\n\n\t\tcomponentWillUnmount: function componentWillUnmount() {\n\t\t\t\tif (this.sub) {\n\t\t\t\t\t\tthis.sub();\n\t\t\t\t}\n\t\t},\n\n\t\tonUpdate: function onUpdate(payload) {\n\n\t\t\t\tif (this.props.plots && this.props.plots.length > 0) {\n\t\t\t\t\t\tvar plot = this.props.plots[0];\n\t\t\t\t\t\tif (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n\t\t\t\t\t\t\t\tvar model = {};\n\t\t\t\t\t\t\t\tvar data = payload.deviceEvent.data;\n\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DATIcon\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TomorrowIcon\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DewPoint\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Visibility\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Location\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"IsDark\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"SunriseNow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"WindDirection\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"WindSpeed\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TomorrowLow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DATHigh\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TodayHigh\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DATLow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TodayIcon\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Sunset\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"MoonAge\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TodayLow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TomorrowHigh\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Pressure\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Temperature\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Humidity\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Sunrise\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"MoonLight\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"SunsetNow\", model);\n\n\t\t\t\t\t\t\t\tif (Object.keys(model).length > 0) {\n\t\t\t\t\t\t\t\t\t\tmodel.timestamp = new Date().getTime();\n\t\t\t\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\t\t\t\t\tself.setState(model);\n\t\t\t\t\t\t\t\t\t\t}, 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t},\n\n\t\taddData: function addData(payload, property, model) {\n\t\t\t\tvar property = IoTFDeviceStore.normalizeProperty(property);\n\t\t\t\tvar obj = payload[property];\n\n\t\t\t\tif (obj !== undefined) {\n\t\t\t\t\t\tmodel[property] = obj;\n\t\t\t\t}\n\n\t\t\t\treturn model;\n\t\t},\n\n\t\tgetDayText: function getDayText(dayOfWeek) {\n\t\t\t\tdayOfWeek = dayOfWeek % 7;\n\t\t\t\tvar text = this.props.nls.resolve(days[dayOfWeek]);\n\t\t\t\treturn text;\n\t\t},\n\n\t\tgetContentToday: function getContentToday() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherTodayTable'><tbody>\" + \"<tr>\" + \"<td>\" + this.props.nls.resolve(\"High\") + \" \" + this.state.TodayHigh + \"°</td>\" + \"<td rowspan='3'><img class='shWeatherTodayIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td rowspan='3' class='shWeatherTodayValue'>\" + this.state.Temperature + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherTodayCity'>\" + this.state.Location + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td>\" + this.props.nls.resolve(\"Low\") + \" \" + this.state.TodayLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentSmall: function getContentSmall() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherSmallTable'><tbody>\" + \"<tr>\" + \"<td rowspan='3'><img class='shWeatherSmallIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td class='shWeatherSmallHighLow'>H: \" + this.state.TodayHigh + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherSmallValue'>\" + this.state.Temperature + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherSmallHighLow'>L: \" + this.state.TodayLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentForecast: function getContentForecast() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherForecastTable'><tbody>\" + \"<tr class='shWeatherForecastHeader'>\" + \"<td>\" + this.getDayText(today) + \"</td>\" + \"<td>\" + this.getDayText(today + 1) + \"</td>\" + \"<td>\" + this.getDayText(today + 2) + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TomorrowIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.DATIcon] + \".png'></td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TodayHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TomorrowHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.DATHigh + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TodayLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TomorrowLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.DATLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentForecastSmall: function getContentForecastSmall() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherForecastTableSmall'><tbody>\" + \"<tr class='shWeatherForecastHeader'>\" + \"<td>\" + this.getDayText(today) + \"</td>\" + \"<td>\" + this.getDayText(today + 1) + \"</td>\" + \"<td>\" + this.getDayText(today + 2) + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TomorrowIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.DATIcon] + \".png'></td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TodayHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TomorrowHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.DATHigh + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TodayLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TomorrowLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.DATLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentDetails: function getContentDetails() {\n\n\t\t\t\tvar html = \"<table class='shWeatherDetailsTable'><tbody>\" + \"<tr>\" + \"<td rowspan='2' class='shWeatherDetailsIconCell'><img class='shWeatherDetailsIcon' src='\" + path + \"w20.png'></td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.WindDirection + \"</td>\" + \"<td rowspan='2' class='shWeatherDetailsIconCell'><img class='shWeatherDetailsIcon' src='\" + path + \"w21.png'></td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.Sunset + \" h</td>\" + \"<td rowspan='2' class='shWeatherDetailsIconCell'><img class='shWeatherDetailsIcon' src='\" + path + \"w22.png'></td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.MoonAge + \" days</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.WindSpeed + \" km/h</td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.Sunrise + \" h</td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.MoonLight + \" %</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentSideTable: function getContentSideTable() {\n\n\t\t\t\tvar html = \"<table class='shWeatherSideTable'><tbody>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w23.png'><br>\" + this.state.Pressure + \" mBar</td></tr>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w24.png'><br>\" + this.state.Humidity + \"</td></tr>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w25.png'><br>\" + this.state.DewPoint + \" °</td></tr>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w26.png'><br>\" + this.state.Visibility + \" km</td></tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\trender: function render() {\n\t\t\t\tvar self = this;\n\t\t\t\tif (this.state !== undefined) {\n\n\t\t\t\t\t\tvar style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n\t\t\t\t\t\tvar html = \"\";\n\t\t\t\t\t\tvar height = this.props.wrapper.height;\n\t\t\t\t\t\tvar width = this.props.wrapper.width;\n\n\t\t\t\t\t\tif (height == 2 && width == 4) {\n\t\t\t\t\t\t\t\t// widescreen format\n\t\t\t\t\t\t\t\thtml = \"<table class='shWeatherWidescreen'><tbody><tr><td>\" + this.getContentToday() + \"</td><td>\" + this.getContentForecast() + \"</td></tr></tbody></table>\";\n\t\t\t\t\t\t} else if (width == 2) {\n\t\t\t\t\t\t\t\thtml = this.getContentSmall();\n\t\t\t\t\t\t} else if (width == 3) {\n\t\t\t\t\t\t\t\thtml = this.getContentForecastSmall();\n\t\t\t\t\t\t} else if (width == 4 && height == 4) {\n\t\t\t\t\t\t\t\thtml = this.getContentToday() + this.getContentForecast();\n\t\t\t\t\t\t} else if (width == 4) {\n\t\t\t\t\t\t\t\thtml = \"<table class='shWeatherForecastBaseTabel'><tbody><tr><td>\" + this.getContentToday() + \"</td><td valign='bottom' rowspan='3' class='shWeatherDetailsSide'>\" + this.getContentSideTable() + \"</td></tr>\" + \"<tr><td colspan='2'></td></tr>\" + \"<tr><td>\" + this.getContentForecast() + \"</td><td></td></tr>\" + \"<tr><td colspan='2'>\" + this.getContentDetails() + \"</td></tr>\" + \"<tbody></table>\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn React.createElement('div', { style: style, dangerouslySetInnerHTML: { __html: html } });\n\n\t\t\t\t\t\t//  return <div style={styles.style}>\n\t\t\t\t\t\t//  \t\t<p>Weather Service goes here</p>\n\t\t\t\t\t\t// <div>DATIcon: {this.state.DATIcon}</div>\n\t\t\t\t\t\t// <div>TomorrowIcon: {this.state.TomorrowIcon}</div>\n\t\t\t\t\t\t// <div>DewPoint: {this.state.DewPoint}</div>\n\t\t\t\t\t\t// <div>Visibility: {this.state.Visibility}</div>\n\t\t\t\t\t\t// <div>Location: {this.state.Location}</div>\n\t\t\t\t\t\t// <div>IsDark: {this.state.IsDark}</div>\n\t\t\t\t\t\t// <div>SunriseNow: {this.state.SunriseNow}</div>\n\t\t\t\t\t\t// <div>WindDirection: {this.state.WindDirection}</div>\n\t\t\t\t\t\t// <div>WindSpeed: {this.state.WindSpeed}</div>\n\t\t\t\t\t\t// <div>TomorrowLow: {this.state.TomorrowLow}</div>\n\t\t\t\t\t\t// <div>DATHigh: {this.state.DATHigh}</div>\n\t\t\t\t\t\t// <div>TodayIcon: {this.state.TodayIcon}</div>\n\t\t\t\t\t\t// <div>DATLow: {this.state.DATLow}</div>\n\t\t\t\t\t\t// <div>TodayIcon: {this.state.TodayIcon}</div>\n\t\t\t\t\t\t// <div>Sunset: {this.state.Sunset}</div>\n\t\t\t\t\t\t// <div>MoonAge: {this.state.MoonAge}</div>\n\t\t\t\t\t\t// <div>TodayLow: {this.state.TodayLow}</div>\n\t\t\t\t\t\t// <div>TomorrowHigh: {this.state.TomorrowHigh}</div>\n\t\t\t\t\t\t// <div>Pressure: {this.state.Pressure}</div>\n\t\t\t\t\t\t// <div>Temperature: {this.state.Temperature}</div>\n\t\t\t\t\t\t// <div>Humidity: {this.state.Humidity}</div>\n\t\t\t\t\t\t// <div>Sunrise: {this.state.Sunrise}</div>\n\t\t\t\t\t\t// <div>MoonLight: {this.state.MoonLight}</div>\n\t\t\t\t\t\t// <div>SunsetNow: {this.state.SunsetNow}</div>\n\t\t\t\t\t\t//  \t</div>\n\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t\t\t{ style: styles.empty },\n\t\t\t\t\t\t\t\t\t\tReact.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t}\n});\n\nmodule.exports = WeatherService;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/SampleCards/modules/WeatherService/customization/WeatherServiceProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar IoTFCommon = (typeof window !== \"undefined\" ? window['IoTFCommon'] : typeof global !== \"undefined\" ? global['IoTFCommon'] : null);\n\nvar RPT = React.PropTypes;\nvar InputField = IoTFCommon.InputField;\nvar Label = IoTFCommon.Label;\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n\n};\n\nvar WeatherServiceProperties = React.createClass({\n  displayName: 'WeatherServiceProperties',\n\n\n  propTypes: {\n    location: RPT.string,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      location: \"Rottenburg\"\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      location: this.props.location\n    };\n  },\n\n  onLocationChanged: function onLocationChanged(value) {\n    this.setState({\n      location: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Location', theme: this.props.theme },\n                  React.createElement(InputField, { theme: this.props.theme, onChange: this.onLocationChanged, initialValue: this.state.location })\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = WeatherServiceProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[\"/Users/frank/Documents/Projects/SampleCards/modules/Modules.jsx\"])(\"/Users/frank/Documents/Projects/SampleCards/modules/Modules.jsx\")\n});"],"file":"SampleCards.js","sourceRoot":"/source/"}
>>>>>>> 8f970781483479696b9ad1a17e61a7dd2832d4f6
