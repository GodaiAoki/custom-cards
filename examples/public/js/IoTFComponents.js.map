{"version":3,"names":[],"mappings":"","sources":["IoTFComponents.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.IoTFComponents = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/AAA.jsx\":[function(require,module,exports){\n'use strict';\n\nvar AAA = {};\n\nAAA.AAAStore = require('./stores/AAAStore.js');\nAAA.UserDetails = require('./dialogs/DialogAAAUserDetails.jsx');\nAAA.AddMember = require('./dialogs/DialogAddMember.jsx');\nAAA.SSOLogin = require('./sites/SSOLogin.jsx');\n\nmodule.exports = AAA;\n\n},{\"./dialogs/DialogAAAUserDetails.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/dialogs/DialogAAAUserDetails.jsx\",\"./dialogs/DialogAddMember.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/dialogs/DialogAddMember.jsx\",\"./sites/SSOLogin.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/sites/SSOLogin.jsx\",\"./stores/AAAStore.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/stores/AAAStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/dialogs/DialogAAAUserDetails.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar RPT = React.PropTypes;\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\n\nvar DashboardDialog = require('../../Dialog/Dialog.jsx');\nvar Dialog = DashboardDialog.Dialog;\nvar DialogTab = DashboardDialog.DialogTab;\nvar DialogButtons = DashboardDialog.DialogButtons;\nvar Section = require('../../common/components/Section.jsx');\nvar Actions = require('../../Dashboard/dashboard/Actions.jsx');\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar Image = require('../../common/components/Image.jsx');\nvar Button = require('../../common/components/Button.jsx');\n/*var Messages = require('../../Dashboard/nls/Messages');*/\nvar IconLink = require('../../common/components/IconLink.jsx');\nvar Icon = require('../../common/components/Icon.jsx');\nvar Select = require('../../common/components/Select.jsx');\nvar Option = require('../../common/components/Option.jsx');\n\nvar existingRoles = [];\n\nvar styles = {\n    sectionText: {\n        marginBottom: \"40px\"\n    },\n\n    addPermText: {\n        color: \"#5c91cc\",\n        fontWeight: \"700\",\n        textTransform: \"none\",\n        fontSize: \"14px\"\n    },\n\n    detailLabel: {\n        float: \"left\",\n        fontSize: \"15px\",\n        paddingTop: \"10px\",\n        width: \"50%\",\n        wordWrap: \"break-word\"\n    },\n\n    detailData: {\n        float: \"left\",\n        fontSize: \"15px\",\n        paddingTop: \"10px\",\n        fontWeight: \"bold\",\n        width: \"50%\",\n        wordWrap: \"break-word\"\n    },\n\n    detailDataSelect: {\n        float: \"left\",\n        width: \"45%\",\n        paddingTop: \"5px\",\n        fontWeight: \"bold\"\n    },\n\n    itemlist: {\n        paddingTop: \"15px\",\n        paddingLeft: \"40px\",\n        paddingRight: \"40px\"\n    },\n\n    itemlistDelete: {\n        float: \"right\",\n        cursor: \"pointer\"\n    },\n\n    boldText: {\n        fontWeight: \"bold\"\n    },\n\n    detailTable: {\n        width: \"100%\",\n        borderCollapse: \"initial\"\n    }\n};\n\nvar Item = React.createClass({\n    displayName: 'Item',\n\n    render: function render() {\n        return React.createElement(\n            'div',\n            { style: styles.itemlist },\n            React.createElement(\n                'span',\n                null,\n                this.props.value\n            ),\n            React.createElement(\n                'span',\n                { style: styles.itemlistDelete, onClick: this.props.onClickClose },\n                React.createElement(Icon, { icon: 'delete', color: '#333333', size: '18', theme: this.props.theme })\n            )\n        );\n    }\n});\nmodule.exports = Item;\n\nvar DialogAAAUserDetails = React.createClass({\n    displayName: 'DialogAAAUserDetails',\n\n    propTypes: {\n        theme: RPT.object.isRequired,\n        nls: RPT.object,\n        member: RPT.object,\n        style: RPT.object,\n        url: RPT.string,\n        visible: RPT.bool.isRequired,\n        scaleToFill: RPT.string\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            member: {\n                roles: [],\n                roleText: '',\n                email: '',\n                invitedBy: '',\n                orgId: '',\n                firstName: '',\n                lastName: '',\n                displayName: '',\n                comment: '',\n                status: 1,\n                owner: false,\n                realmName: '',\n                issuer: '',\n                lastLogin: '',\n                dateAdded: '',\n                lastUpdate: '',\n                expiresAt: ''\n            },\n            defaultRoles: [{\n                defaultDescription: '',\n                defaultName: '',\n                descriptionNlsLabel: '',\n                domainsList: [],\n                lastUpdate: '',\n                modifiable: false,\n                nameNlsLabel: '',\n                organization: '',\n                status: 1,\n                uid: ''\n            }]\n        };\n    },\n\n    apiRequestUpdateRoles: function apiRequestUpdateRoles() {\n        var self = this;\n        var roleData = {\n            roles: existingRoles\n        };\n        var roleDataJson = JSON.stringify(roleData);\n\n        $.ajax({\n            url: window.location.origin + \"/api/v0002/authorization/apikeys/{apiKey}/roles\",\n            type: 'post',\n            dataType: 'json',\n            contentType: 'application/json',\n            data: roleDataJson,\n            beforeSend: function beforeSend() {\n                // this is where I append a loading image\n            },\n            success: function success(data) {\n                // successful request; do something with the data\n            },\n            error: function error() {\n                // failed request; give feedback to user\n            }\n        });\n    },\n\n    apiRequestGetApiKey: function apiRequestGetApiKey() {\n        var self = this;\n        var requestURL = window.location.origin + \"/api/v0002/authorization/apikeys/\";\n        var request = $.get(requestURL).done(function (response) {\n            console.log(\"success\" + response.toString());\n        }).fail(function () {\n            console.log(\"error\");\n        });\n    },\n\n    getInitialState: function getInitialState() {\n        return {\n            roleItems: []\n        };\n    },\n\n    componentDidMount: function componentDidMount() {\n        this.apiRequestGetApiKey();\n    },\n\n    componentWillReceiveProps: function componentWillReceiveProps(newProps) {\n        existingRoles = newProps.member.roles.map(function (element) {\n            if (element.orgId) {\n                delete element.orgId;\n            }\n            return element;\n        });\n\n        var roleNlsLabels = newProps.member.roleText.split(\", \").map(function (label) {\n            return { value: label };\n        });\n        this.setState({\n            roleItems: roleNlsLabels\n        });\n    },\n\n    onClose: function onClose() {\n        if (this.props.emitter) {\n            this.props.emitter.emit(\"ReactDialog.Close\", {\n                value: 'DialogAAAUseDetails'\n            });\n        }\n\n        this.setState({\n            roleItems: []\n        });\n    },\n\n    onSubmit: function onSubmit() {\n        if (this.props.emitter) {\n            this.props.emitter.emit(\"ReactDialog.Submit\", {\n                value: 'DialogAAAUseDetails'\n            });\n            this.props.emitter.emit(\"ReactDialog.Close\", {\n                value: 'DialogAAAUseDetails'\n            });\n        }\n        this.apiRequestUpdateRoles();\n        this.setState({\n            roleItems: []\n        });\n    },\n\n    // Role - handling Start\n\n    onRoleChange: function onRoleChange(value) {\n        this.setState({\n            roleValue: value\n        });\n    },\n\n    addRoleItem: function addRoleItem() {\n        var roleItems = this.state.roleItems;\n        var i;\n        var checkExistRoles = false;\n\n        for (i = 0; i < existingRoles.length; i++) {\n            if (existingRoles[i].uid == this.state.roleValue.uid) {\n                checkExistRoles = true;\n            }\n        }\n\n        if (this.state.roleValue && !checkExistRoles) {\n            existingRoles.push({\n                uid: this.state.roleValue.uid\n            });\n            roleItems.push({\n                value: this.state.roleValue.nameNlsLabel\n            });\n            this.setState({\n                roleItems: roleItems,\n                roleValue: \"\"\n            });\n        }\n    },\n\n    removeRoleItem: function removeRoleItem(index) {\n        existingRoles.splice(index, 1);\n        this.state.roleItems.splice(index, 1);\n        this.setState({\n            roleItems: this.state.roleItems\n        });\n    },\n\n    // Role - handling End\n\n    render: function render() {\n\n        var roleOption = this.props.defaultRoles.map(function (role) {\n            return React.createElement(\n                Option,\n                { value: role },\n                role.nameNlsLabel\n            );\n        });\n\n        var statusOfAccess = \"\";\n\n        if (this.props.member.status == 1) {\n            statusOfAccess = \"Access allowed\";\n        } else {\n            statusOfAccess = \"Access denied\";\n        }\n\n        var roleItems = this.state.roleItems.map(function (roleItem, index) {\n            return React.createElement(Item, {\n                key: index,\n                value: roleItem.value,\n                onClickClose: this.removeRoleItem.bind(this, index)\n            });\n        }.bind(this));\n\n        var dialogTitle = \"User ID: \" + this.props.member.email;\n\n        if (this.props.visible) {\n            return React.createElement(\n                Dialog,\n                { title: dialogTitle, theme: this.props.theme, nls: this.props.nls, onCancel: this.onClose, onSubmit: this.onSubmit },\n                React.createElement(\n                    DialogTab,\n                    { id: 'details', theme: this.props.theme, label: 'Details', status: 'active' },\n                    React.createElement(\n                        Section,\n                        { headingSection: 'User Details' },\n                        React.createElement(\n                            'div',\n                            null,\n                            'These are details of the user such as email adress and name information.'\n                        ),\n                        React.createElement(\n                            'table',\n                            { style: styles.detailTable },\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'User'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    this.props.member.email\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Email'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    this.props.member.email\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Added on'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    moment(this.props.member.dateAdded).format('MMM Do YYYY')\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Added by'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    this.props.member.invitedBy\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Last Login'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    moment(this.props.member.lastLogin).format('MMM Do YYYY')\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Last Update'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    moment(this.props.member.lastUpdate).format('MMM Do YYYY')\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Expiry'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    moment(this.props.member.expiresAt).format('MMM Do YYYY')\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Status'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    statusOfAccess\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Organization ID'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    this.props.member.orgId\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Authentication Provider'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    this.props.member.realmName\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Display Name'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    this.props.member.displayName\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'First Name'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    this.props.member.firstName\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Last Name'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    this.props.member.lastName\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailLabel },\n                                    'Comment'\n                                ),\n                                React.createElement(\n                                    'td',\n                                    { style: styles.detailData },\n                                    this.props.member.comment\n                                )\n                            )\n                        )\n                    )\n                ),\n                React.createElement(\n                    DialogTab,\n                    { id: 'permissions', theme: this.props.theme, status: 'active', label: 'Permissions', isSubmitTab: true },\n                    React.createElement(\n                        Section,\n                        { headingSection: 'Permissions' },\n                        React.createElement(\n                            'div',\n                            null,\n                            React.createElement(\n                                'h3',\n                                null,\n                                'Role'\n                            )\n                        ),\n                        React.createElement(\n                            Label,\n                            { label: 'Change roles for your user from predefined list', theme: this.props.theme },\n                            React.createElement(\n                                Select,\n                                { onChange: this.onRoleChange, theme: this.props.theme },\n                                roleOption\n                            ),\n                            React.createElement(Button, { onClick: this.addRoleItem, text: 'Add Roles' })\n                        ),\n                        React.createElement(\n                            'div',\n                            { style: styles.boldText },\n                            'Assigned Roles:'\n                        ),\n                        React.createElement(\n                            'div',\n                            null,\n                            roleItems\n                        )\n                    )\n                )\n            );\n        } else {\n            return React.createElement('div', null);\n        }\n    }\n});\n\nmodule.exports = DialogAAAUserDetails;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/dashboard/Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"../../Dialog/Dialog.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dialog/Dialog.jsx\",\"../../common/components/Button.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Button.jsx\",\"../../common/components/Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\",\"../../common/components/IconLink.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/IconLink.jsx\",\"../../common/components/Image.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Image.jsx\",\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/Section.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Section.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/dialogs/DialogAddMember.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar RPT = React.PropTypes;\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar DashboardDialog = require('../../Dialog/Dialog.jsx');\nvar Dialog = DashboardDialog.Dialog;\nvar DialogTab = DashboardDialog.DialogTab;\nvar DialogButtons = DashboardDialog.DialogButtons;\nvar Section = require('../../common/components/Section.jsx');\nvar Actions = require('../../Dashboard/dashboard/Actions.jsx');\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar Image = require('../../common/components/Image.jsx');\nvar Button = require('../../common/components/Button.jsx');\nvar IconLink = require('../../common/components/IconLink.jsx');\nvar Icon = require('../../common/components/Icon.jsx');\nvar Select = require('../../common/components/Select.jsx');\nvar Option = require('../../common/components/Option.jsx');\nvar re_email = require('../../Dashboard/util/regex-email');\nvar SwitchBtn = require('../../common/components/SwitchBtn.jsx');\n\nvar existingMails = [];\nvar existingRoles = [];\nvar roleResponse = { roles: [] };\nvar defaultRoles = [];\nvar orgId = \"\";\nvar user = \"\";\n\nvar styles = {\n    sectionLine: {\n        clear: \"both\",\n        marginBottom: \"15px\",\n        paddingBottom: \"15px\",\n        borderBottom: \"2px solid\",\n        borderColor: \"#ededed\"\n    },\n\n    addPermText: {\n        color: \"#5c91cc\",\n        fontWeight: \"700\",\n        textTransform: \"none\",\n        fontSize: \"14px\"\n    },\n\n    btnImport: {\n        float: \"none\"\n    },\n\n    textImport: {\n        marginRight: \"20px\",\n        display: \"inline\"\n    },\n\n    itemlist: {\n        paddingTop: \"15px\",\n        paddingLeft: \"40px\",\n        paddingRight: \"40px\"\n    },\n\n    itemlistDelete: {\n        float: \"right\",\n        cursor: \"pointer\"\n    },\n\n    boldText: {\n        fontWeight: \"bold\"\n    }\n};\n\nvar Item = React.createClass({\n    displayName: 'Item',\n\n    render: function render() {\n        return React.createElement(\n            'div',\n            { style: styles.itemlist },\n            React.createElement(\n                'span',\n                null,\n                this.props.value\n            ),\n            React.createElement(\n                'span',\n                { style: styles.itemlistDelete, onClick: this.props.onClickClose },\n                React.createElement(Icon, { icon: 'delete', color: '#333333', size: '18', theme: this.props.theme })\n            )\n        );\n    }\n});\nmodule.exports = Item;\n\nvar DialogAddMember = React.createClass({\n    displayName: 'DialogAddMember',\n\n    propTypes: {\n        theme: RPT.object.isRequired,\n        nls: RPT.object,\n        style: RPT.object,\n        url: RPT.string,\n        visible: RPT.bool.isRequired,\n        scaleToFill: RPT.string,\n        onSubmit: RPT.func\n    },\n\n    getInitialState: function getInitialState() {\n        return {\n            noneExpireDate: this.props.noneExpireDate ? this.props.noneExpireDate : null,\n            items: [],\n            roleItems: [],\n            visibleInviteMember: true\n        };\n    },\n\n    onaddPermChange: function onaddPermChange() {},\n\n    // Email - handling Start\n\n    handleChange: function handleChange(value) {\n        this.setState({\n            inputValue: value\n        });\n    },\n\n    removeItem: function removeItem(index) {\n        existingMails.splice(index, 1);\n        this.state.items.splice(index, 1);\n        this.setState({\n            items: this.state.items\n        });\n    },\n\n    addItem: function addItem() {\n        var items = this.state.items;\n        var checkExistMails = existingMails.indexOf(this.state.inputValue) > -1;\n\n        if (this.state.inputValue && this.state.inputValue.match(re_email) && !checkExistMails) {\n            existingMails.push(this.state.inputValue);\n            items.push({\n                value: this.state.inputValue\n            });\n            this.setState({\n                items: items,\n                inputValue: \"\"\n            });\n            this.refs.emailInput.setState({ value: '' });\n        };\n    },\n\n    // Email - handling End\n\n    // Role - handling Start\n\n    onRoleChange: function onRoleChange(value) {\n        this.setState({\n            roleValue: value\n        });\n    },\n\n    removeRoleItem: function removeRoleItem(index) {\n        existingRoles.splice(index, 1);\n        this.state.roleItems.splice(index, 1);\n        this.setState({\n            roleItems: this.state.roleItems\n        });\n    },\n\n    addRoleItem: function addRoleItem() {\n        var roleItems = this.state.roleItems;\n        var checkExistRoles = existingRoles.indexOf(this.state.roleValue.uid) > -1;\n\n        if (this.state.roleValue && !checkExistRoles) {\n            existingRoles.push(this.state.roleValue.uid);\n            roleItems.push({\n                value: this.state.roleValue.nameNlsLabel\n            });\n            this.setState({\n                roleItems: roleItems,\n                roleValue: \"\"\n            });\n        };\n    },\n\n    // Role - handling End\n\n    editEmailText: function editEmailText() {},\n\n    onAddOrInvite: function onAddOrInvite(value) {\n        this.setState({\n            visibleInviteMember: value\n        });\n    },\n\n    onClose: function onClose() {\n        if (this.props.emitter) {\n            this.props.emitter.emit(\"ReactDialog.Close\", {\n                value: 'DialogAddMember'\n            });\n            this.setState({\n                items: []\n            });\n            this.setState({\n                roleItems: []\n            });\n            console.log(event);\n        }\n    },\n\n    checkRoleRequest: function checkRoleRequest(response) {\n        roleResponse = response;\n        defaultRoles = roleResponse.roles;\n        if (this.props.emitter) {\n            this.props.emitter.emit(\"ReactDialog.StoreRoles\", defaultRoles);\n        }\n    },\n\n    apiRequestGetRoles: function apiRequestGetRoles() {\n        var self = this;\n        var requestURL = window.location.origin + \"/api/v0002/authorization/roles\";\n        var request = $.get(requestURL).done(function (response) {\n            console.log(\"success\");\n            self.checkRoleRequest(response);\n        }).fail(function () {\n            console.log(\"error\");\n        });\n    },\n\n    //    apiRequestAdd: function(){\n    //        var self = this;\n    //        var add = {\n    //            orgId: orgId,\n    //            roles: existingRoles,\n    //            authProvider: [\"facebook\"],\n    //            emails: existingMails,\n    //            comment: \"testComment\",\n    //            expiryDate: null,\n    //            invitationExpiryDate: null,\n    //            invitedBy: user,\n    //            status: 1\n    //        };\n    //        var addJson = JSON.stringify(add);\n    //       \n    //        $.ajax({\n    //            url: window.location.origin+\"/api/v0002/authentication/user/registration/multiple\",\n    //            type: 'post',\n    //            dataType: 'json',\n    //            contentType: 'application/json',\n    //            data: addJson,\n    //            beforeSend:function(){\n    //            // this is where I append a loading image\n    //            },\n    //            success:function(data){\n    //            // successful request; do something with the data\n    //            },\n    //            error:function(){\n    //            // failed request; give feedback to user\n    //            }  \n    //        });\n    //    },\n\n    apiRequestAdd: function apiRequestAdd() {\n        var self = this;\n        var add = {\n            uniqueSecurityName: \"uniqueName\",\n            realmName: \"IBM\",\n            owner: false,\n            firstName: \"FirstName\",\n            lastName: \"LastName\",\n            displayName: \"Name\",\n            issuer: \"IBM\",\n            roles: existingRoles,\n            emails: existingMails,\n            comment: \"testComment\",\n            expiresAt: null,\n            invitedBy: user,\n            status: 1\n        };\n        var addJson = JSON.stringify(add);\n\n        $.ajax({\n            url: window.location.origin + \"/api/v0002/authorization/users/multiple\",\n            type: 'post',\n            dataType: 'json',\n            contentType: 'application/json',\n            data: addJson,\n            beforeSend: function beforeSend() {\n                // this is where I append a loading image\n            },\n            success: function success(data) {\n                // successful request; do something with the data\n                if (this.props.emitter) {\n                    this.props.emitter.emit(\"ReactDialog.Submit\", {\n                        value: 'DialogAddMember'\n                    });\n                }\n            },\n            error: function error() {\n                // failed request; give feedback to user\n            }\n        });\n    },\n\n    apiRequestInvite: function apiRequestInvite() {\n        var self = this;\n        var invite = {\n            orgId: orgId,\n            roles: existingRoles,\n            authProvider: [],\n            emails: existingMails,\n            comment: \"testComment\",\n            expiryDate: null,\n            invitationExpiryDate: null,\n            invitedBy: user,\n            status: 1\n        };\n        var inviteJson = JSON.stringify(invite);\n\n        $.ajax({\n            url: window.location.origin + \"/api/v0002/authentication/user/invites/register/multiple\",\n            type: 'post',\n            dataType: 'json',\n            contentType: 'application/json',\n            data: inviteJson,\n            beforeSend: function beforeSend() {\n                // this is where I append a loading image\n            },\n            success: function success(data) {\n                if (this.props.emitter) {\n                    this.props.emitter.emit(\"ReactDialog.Submit\", {\n                        value: 'DialogAddMember'\n                    });\n                }\n            },\n            error: function error() {\n                // failed request; give feedback to user\n            }\n        });\n    },\n\n    onSubmit: function onSubmit() {\n        if (this.state.visibleInviteMember) {\n            this.apiRequestInvite();\n        }\n\n        if (!this.state.visibleInviteMember) {\n            this.apiRequestAdd();\n        }\n\n        existingMails = [];\n        existingRoles = [];\n\n        this.setState({\n            items: []\n        });\n        this.setState({\n            roleItems: []\n        });\n\n        if (this.props.emitter) {\n            this.props.emitter.emit(\"ReactDialog.Close\", {\n                value: 'DialogAddMember'\n            });\n        }\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            orgId: \"\",\n            user: \"\"\n        };\n    },\n\n    componentDidMount: function componentDidMount() {\n        orgId = this.props.orgId;\n        user = this.props.user;\n    },\n    componentWillMount: function componentWillMount() {\n        this.apiRequestGetRoles();\n    },\n\n    render: function render() {\n\n        var roleOption = roleResponse.roles.map(function (role) {\n            return React.createElement(\n                Option,\n                { value: role },\n                role.nameNlsLabel\n            );\n        });\n\n        var items = this.state.items.map(function (item, index) {\n            return React.createElement(Item, {\n                key: index,\n                value: item.value,\n                onClickClose: this.removeItem.bind(this, index)\n            });\n        }.bind(this));\n\n        var roleItems = this.state.roleItems.map(function (roleItem, index) {\n            return React.createElement(Item, {\n                key: index,\n                value: roleItem.value,\n                onClickClose: this.removeRoleItem.bind(this, index)\n            });\n        }.bind(this));\n\n        var addMember = '';\n        var inviteMember = '';\n        var inviteTab = false;\n        var addTab = true;\n\n        if (this.state.visibleInviteMember) {\n            inviteMember = React.createElement(\n                'div',\n                null,\n                React.createElement(\n                    Section,\n                    { headingSection: 'Invite member(s) via Email adress' },\n                    React.createElement(\n                        Label,\n                        { label: 'Email adress', theme: this.props.theme },\n                        React.createElement(InputField, { type: 'email', onChange: this.handleChange, ref: 'emailInput', placeholder: 'Enter the Email Adress', theme: this.props.theme }),\n                        React.createElement(Button, { onClick: this.addItem, text: 'Add Another' })\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.boldText },\n                        'To be added:'\n                    ),\n                    React.createElement(\n                        'div',\n                        null,\n                        items\n                    )\n                )\n            );\n            inviteTab = true;\n            addTab = false;\n        }\n\n        if (!this.state.visibleInviteMember) {\n            addMember = React.createElement(\n                'div',\n                null,\n                React.createElement(\n                    Section,\n                    { headingSection: 'Add member(s) via Email adress as member name' },\n                    React.createElement(\n                        Label,\n                        { label: 'Email adress', theme: this.props.theme },\n                        React.createElement(InputField, { type: 'email', onChange: this.handleChange, ref: 'emailInput', placeholder: 'Enter the Email Adress', theme: this.props.theme }),\n                        React.createElement(Button, { onClick: this.addItem, text: 'Add Another' })\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.boldText },\n                        'To be added:'\n                    ),\n                    React.createElement(\n                        'div',\n                        null,\n                        items\n                    )\n                )\n            );\n            inviteTab = false;\n            addTab = true;\n        }\n\n        if (this.props.visible) {\n            return React.createElement(\n                Dialog,\n                { title: 'Add member(s)', theme: this.props.theme, nls: this.props.nls, onCancel: this.onClose, onSubmit: this.onSubmit },\n                React.createElement(\n                    DialogTab,\n                    { id: 'assignPerm', theme: this.props.theme, status: 'active', label: 'Assign permissions' },\n                    React.createElement(\n                        Section,\n                        { headingSection: 'Assign permissions' },\n                        React.createElement(\n                            'div',\n                            null,\n                            React.createElement(\n                                'h3',\n                                null,\n                                'Role'\n                            )\n                        ),\n                        React.createElement(\n                            Label,\n                            { label: 'Choose roles for your user(s) from predefined list', theme: this.props.theme },\n                            React.createElement(\n                                Select,\n                                { onChange: this.onRoleChange, theme: this.props.theme },\n                                roleOption\n                            ),\n                            React.createElement(Button, { onClick: this.addRoleItem, text: 'Add Roles' })\n                        ),\n                        React.createElement(\n                            'div',\n                            { style: styles.boldText },\n                            'To be added'\n                        ),\n                        React.createElement(\n                            'div',\n                            null,\n                            roleItems\n                        )\n                    )\n                ),\n                React.createElement(\n                    DialogTab,\n                    { id: 'userToAdd', theme: this.props.theme, isSubmitTab: addTab, status: 'active', label: 'Choose guest(s) to add' },\n                    React.createElement(\n                        Section,\n                        { headingSection: 'Choose wether you want to invite or add member(s)' },\n                        React.createElement(SwitchBtn, { theme: this.props.theme, onChange: this.onAddOrInvite, initialValue: !!this.state.visibleInviteMember, trueText: 'Invite following member(s)', falseText: 'Add following member(s)' }),\n                        React.createElement('br', null),\n                        addMember,\n                        inviteMember\n                    )\n                ),\n                React.createElement(\n                    DialogTab,\n                    { id: 'emailTemplate', theme: this.props.theme, isSubmitTab: inviteTab, status: 'disabled', label: 'Edit Email invitation' },\n                    React.createElement(\n                        Section,\n                        { headingSection: 'Preview of Email invitation' },\n                        'EMAIL PREVIEW',\n                        React.createElement('br', null)\n                    )\n                )\n            );\n        } else {\n            return React.createElement('div', null);\n        }\n    }\n});\n\nmodule.exports = DialogAddMember;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/dashboard/Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"../../Dashboard/util/regex-email\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/regex-email.js\",\"../../Dialog/Dialog.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dialog/Dialog.jsx\",\"../../common/components/Button.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Button.jsx\",\"../../common/components/Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\",\"../../common/components/IconLink.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/IconLink.jsx\",\"../../common/components/Image.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Image.jsx\",\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/Section.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Section.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\",\"../../common/components/SwitchBtn.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/SwitchBtn.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/sites/SSOLogin.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\n\nvar InputField = require('../../common/components/InputField.jsx');\nvar Actions = require('../../Dashboard/dashboard/Actions.jsx');\nvar InputField = require('../../common/components/InputField.jsx');\nvar Section = require('../../common/components/Section.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar Image = require('../../common/components/Image.jsx');\nvar Button = require('../../common/components/Button.jsx');\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar styles = {\n    sectionText: {\n        marginBottom: \"40px\"\n    },\n\n    loginImgLinks: {\n        cursor: \"pointer\",\n        margin: \"10px 20px 20px 0px\",\n        float: \"left\"\n    },\n\n    idassContainer: {\n        marginRight: \"5%\",\n        marginLeft: \"5%\",\n        minWidth: \"200px\",\n        width: \"40%\",\n        float: \"left\"\n    },\n\n    providerContainer: {\n        marginRight: \"5%\",\n        marginLeft: \"5%\",\n        minWidth: \"200px\",\n        width: \"40%\",\n        float: \"left\"\n    },\n\n    orgIdContainer: {\n        minWidth: \"200px\",\n        width: \"40%\",\n        float: \"left\"\n    },\n\n    redirectLinkContainer: {\n        width: \"100%\",\n        textAlign: \"center\",\n        marginTop: \"40px\"\n    }\n};\n\nvar SSOLogin = React.createClass({\n    displayName: 'SSOLogin',\n\n    propTypes: {\n        theme: RPT.object.isRequired,\n        nls: RPT.object,\n        style: RPT.object,\n        url: RPT.string,\n        scaleToFill: RPT.string\n    },\n\n    getInitialState: function getInitialState() {\n        return {\n            value: \"\",\n            visibleRedirectLink: false,\n            visibleOrgIdInput: false,\n            visibleChooseProv: false,\n            visibleIBMLink: false,\n            visibleGoogleLink: false,\n            visibleFacebookLink: false,\n            visibleLinkedInLink: false,\n            urlIBM: \"\",\n            urlGoogle: \"\",\n            urlFacebook: \"\",\n            urlLinkedIn: \"\",\n            organizationId: \"\"\n        };\n    },\n\n    getURL: function getURL() {\n        var self = this;\n        var url = window.location.href;\n        var start = url.indexOf(\"//\");\n        var end = url.indexOf(\".\");\n        var org = url.substring(start + 2, end);\n        this.setState({\n            organizationId: org\n        }, function () {\n            self.apiRequestOne();\n        });\n    },\n\n    apiRequestOne: function apiRequestOne() {\n        var self = this;\n        var requestURL = window.location.origin + \"/api/v0002/authentication/providers\";\n        var request = $.get(requestURL).done(function (response) {\n            console.log(\"success\" + response.toString());\n            self.checkRequest(response);\n            if (self.state.visibleIBMLink || self.state.visibleFacebookLink || self.state.visibleLinkedInLink || self.state.visibleGooleLink) {\n                self.setState({\n                    visibleOrgIdInput: false,\n                    visibleChooseProv: true\n                });\n            } else {\n                self.setState({\n                    visibleOrgIdInput: true,\n                    organizationId: \"\"\n                });\n            }\n        }).fail(function () {\n            console.log(\"error\");\n            self.setState({\n                visibleOrgIdInput: true\n            });\n        });\n    },\n\n    apiRequestTwo: function apiRequestTwo() {\n        var self = this;\n        var orgID = this.state.organizationId;\n        var requestURL = \"https://\" + orgID + \".\" + window.location.host + \"/api/v0002/authentication/providers\";\n        var request = $.get(requestURL).done(function (response) {\n            console.log(\"success\" + response.toString());\n            self.checkRequest(response);\n            if (self.state.visibleIBMLink || self.state.visibleFacebookLink || self.state.visibleLinkedInLink || self.state.visibleGooleLink) {\n                self.setState({\n                    visibleOrgIdInput: false,\n                    visibleChooseProv: true\n                });\n            } else {\n                self.setState({\n                    visibleRedirectLink: true,\n                    visibleOrgIdInput: false,\n                    visibleChooseProv: false\n                });\n                window.location.replace(\"https://internetofthings.ibmcloud.com/login\");\n            }\n        }).fail(function () {\n            console.log(\"error\");\n            self.setState({\n                visibleRedirectLink: true,\n                visibleOrgIdInput: false,\n                visibleChooseProv: false\n            });\n            window.location.replace(\"https://internetofthings.ibmcloud.com/login\");\n        });\n    },\n\n    checkRequest: function checkRequest(response) {\n        var self = this;\n        for (var i = 0; i < response.length; i++) {\n            switch (response[i].name) {\n                case \"ibmldap\":\n                    self.setState({\n                        visibleIBMLink: true\n                    });\n                    self.setState({\n                        urlIBM: response[i].url\n                    });\n                    break;\n                case \"google\":\n                    self.setState({\n                        visibleGooleLink: true\n                    });\n                    self.setState({\n                        urlgoogle: response[i].url\n                    });\n                    break;\n                case \"facebook\":\n                    self.setState({\n                        visibleFacebookLink: true\n                    });\n                    self.setState({\n                        urlFacebook: response[i].url\n                    });\n                    break;\n                case \"linkedin\":\n                    self.setState({\n                        visibleLinkedInLink: true\n                    });\n                    self.setState({\n                        urlLinkedIn: response[i].url\n                    });\n                    break;\n            }\n        };\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {};\n    },\n\n    submitIdassLogin: function submitIdassLogin() {\n        return {};\n    },\n\n    onOrganizationIdChanged: function onOrganizationIdChanged(orgValue) {\n        this.setState({\n            organizationId: orgValue\n        });\n    },\n\n    submitOrgID: function submitOrgID() {\n        this.apiRequestTwo();\n        this.setState({\n            visibleOrgIdInput: false\n        });\n        console.log(this.state.organizationId);\n    },\n\n    componentWillMount: function componentWillMount() {\n        this.getURL();\n    },\n\n    render: function render() {\n\n        var LinkIBM = '';\n        var LinkGoogle = '';\n        var LinkFacebook = '';\n        var LinkLinkedIn = '';\n        var SSOLogInHeading = '';\n        var AuthHeading = '';\n\n        if (this.state.visibleIBMLink || this.state.visibleGoogleLink || this.state.visibleFacebookLink || this.state.visibleLinkedInLink) {\n            SSOLogInHeading = 'Welcome, choose how you would like to login.';\n            AuthHeading = 'Or alternatively you can use:';\n        } else {\n            SSOLogInHeading = 'Welcome, use your IBM id to login.';\n            AuthHeading = '';\n        }\n\n        if (this.state.visibleIBMLink) {\n            LinkIBM = React.createElement(\n                'div',\n                null,\n                React.createElement(\n                    'a',\n                    { href: this.state.urlIBM, target: '_blank' },\n                    React.createElement(Image, { style: styles.loginImgLinks, theme: this.props.theme, alt: 'IBM', title: 'IBM', url: \"assets/ibm.png\", width: \"200\", height: \"60\", onLoad: this.imageOnLoad })\n                )\n            );\n        };\n\n        if (this.state.visibleGoogleLink) {\n            LinkGoogle = React.createElement(\n                'div',\n                null,\n                React.createElement(\n                    'a',\n                    { href: this.state.urlGoogle, target: '_blank' },\n                    React.createElement(Image, { style: styles.loginImgLinks, theme: this.props.theme, alt: 'Google', title: 'Google', url: \"assets/google.png\", width: \"200\", height: \"60\", onLoad: this.imageOnLoad })\n                )\n            );\n        };\n\n        if (this.state.visibleFacebookLink) {\n            LinkFacebook = React.createElement(\n                'div',\n                null,\n                React.createElement(\n                    'a',\n                    { href: this.state.urlFacebook, target: '_blank' },\n                    React.createElement(Image, { style: styles.loginImgLinks, theme: this.props.theme, alt: 'Facebook', title: 'Facebook', url: \"assets/facebook.png\", width: \"200\", height: \"60\", onLoad: this.imageOnLoad })\n                )\n            );\n        };\n\n        if (this.state.visibleLinkedInLink) {\n            LinkLinkedIn = React.createElement(\n                'div',\n                null,\n                React.createElement(\n                    'a',\n                    { href: this.state.urlLinkedIn, target: '_blank' },\n                    React.createElement(Image, { style: styles.loginImgLinks, theme: this.props.theme, alt: 'LinkedIn', title: 'LinkedIn', url: \"assets/resources/linkedin.png\", width: \"200\", height: \"60\", onLoad: this.imageOnLoad })\n                )\n            );\n        };\n\n        if (this.state.visibleOrgIdInput) {\n            return React.createElement(\n                'div',\n                null,\n                React.createElement(\n                    Section,\n                    { headingSection: 'Please enter your Organization ID' },\n                    React.createElement(\n                        'div',\n                        { style: styles.orgIdContainer },\n                        React.createElement(\n                            Label,\n                            { label: 'Organization ID', theme: this.props.theme },\n                            React.createElement(InputField, { type: 'text', onChange: this.onOrganizationIdChanged, placeholder: 'Enter your Organization ID' })\n                        ),\n                        React.createElement(\n                            'div',\n                            { style: styles.sectionText },\n                            '  ',\n                            React.createElement(\n                                'a',\n                                { href: 'https://www.ibm.com/html/', target: '_blank' },\n                                'Can‘t remember organization ID?'\n                            )\n                        ),\n                        React.createElement(Button, { isPrimary: true, text: 'Submit', onClick: this.submitOrgID })\n                    )\n                )\n            );\n        } else if (this.state.visibleChooseProv) {\n            return React.createElement(\n                'div',\n                null,\n                React.createElement(\n                    Section,\n                    { headingSection: SSOLogInHeading },\n                    React.createElement(\n                        'div',\n                        { style: styles.idassContainer },\n                        React.createElement(\n                            Label,\n                            { label: 'Login with IBM id:', theme: this.props.theme },\n                            React.createElement(InputField, { type: 'email', onChange: this.handleIdassEmailChange, ref: 'emailInput', placeholder: 'Enter your IBM id', theme: this.props.theme }),\n                            React.createElement(InputField, { type: 'password', onChange: this.handleIdassPwChange, ref: 'pwInput', placeholder: 'Enter your Password', theme: this.props.theme }),\n                            React.createElement(Button, { isPrimary: true, onClick: this.submitIdassLogin, text: 'Login' })\n                        )\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.providerContainer },\n                        React.createElement(Label, { label: AuthHeading, theme: this.props.theme }),\n                        LinkIBM,\n                        LinkGoogle,\n                        LinkLinkedIn,\n                        LinkFacebook\n                    )\n                )\n            );\n        } else if (this.state.visibleRedirectLink) {\n            return React.createElement(\n                'div',\n                { style: styles.redirectLinkContainer },\n                'Please wait you will be redirected, or click ',\n                React.createElement(\n                    'a',\n                    { href: 'https://internetofthings.ibmcloud.com/login', target: '_self' },\n                    'IBM IDASS Login'\n                )\n            );\n        } else {\n            return React.createElement('div', null);\n        }\n    }\n});\n\nmodule.exports = SSOLogin;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/dashboard/Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"../../common/components/Button.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Button.jsx\",\"../../common/components/Image.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Image.jsx\",\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/Section.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Section.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/stores/AAAStore.js\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\nvar Const = require('../../Dashboard/util/Const');\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar Actions = Reflux.createActions(['connect', 'disconnect', 'pause', 'resume']);\n\nvar AAAStore = Reflux.createStore({\n\n  Actions: Actions,\n\n  state: Const.DISCONNECTED,\n\n  init: function init() {\n    this.listenTo(Actions.connect, this.onConnect);\n    this.listenTo(Actions.disconnect, this.onDisconnect);\n    this.listenTo(Actions.pause, this.onPause);\n    this.listenTo(Actions.resume, this.onResume);\n\n    this.trigger({ state: Const.DISCONNECTED });\n  },\n\n  onConnect: function onConnect(payload) {\n    if (this.state == Const.DISCONNECTED) {\n      this.state = Const.CONNECTED;\n      this.changeState();\n      this.poll();\n    }\n  },\n\n  poll: function poll() {\n    var url = \"http://localhost:6004/sso\";\n    var self = this;\n    $.getJSON(url, function (ssoData) {\n      console.log(ssoData);\n      self.trigger(ssoData);\n      setTimeout(function () {\n        self.poll();\n      }, 5000);\n    });\n  },\n\n  changeState: function changeState() {\n    this.trigger({ state: this.state });\n  },\n\n  onDisconnect: function onDisconnect(payload) {\n    this.trigger({ state: Const.DISCONNECTED });\n  },\n\n  onPause: function onPause(payload) {\n    this.trigger({ state: Const.PAUSED });\n  },\n\n  onResume: function onResume(payload) {\n    this.trigger({ state: Const.CONNECTED });\n  }\n});\n\nmodule.exports = AAAStore;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/util/Const\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/Const.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/Dashboard.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar DashboardStore = require('./dashboard/DashboardStore');\nvar DashboardUtils = require('./dashboard/DashboardUtils');\nvar DashboardCanvas = require('./dashboard/DashboardCanvas.jsx');\nvar DashboardControl = require('./dashboard/DashboardControl.jsx');\nvar CustomizationWizard = require('./dashboard/CustomizationWizard.jsx');\nvar ComponentCustomization = require('./dashboard/ComponentCustomization.jsx');\nvar DialogAAAUserDetails = require('../AAA/dialogs/DialogAAAUserDetails.jsx');\nvar DialogAddMember = require('../AAA/dialogs/DialogAddMember.jsx');\nvar PageCustomization = require('./dashboard/PageCustomization.jsx');\nvar IoTFAuthStore = require('../common/stores/IoTFAuthStore.js');\nvar Actions = require('./dashboard/Actions.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  dialogContainer: {\n    zIndex: \"2000\",\n    position: \"relative\"\n  },\n  canvas: {\n    //width: \"1440px\"\n  },\n  container: {\n    backgroundColor: \"#142a36\"\n  }\n};\n\nvar Dashboard = function (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    _classCallCheck(this, Dashboard);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Dashboard).call(this, props));\n\n    _this.state = {\n      strings: {}\n    };\n\n    if (props.dashboardConfig) {\n      DashboardStore.setDashboardConfig(props.dashboardConfig);\n      DashboardUtils.setDashboardConfig(props.dashboardConfig);\n    }\n    if (props.defaultDashboard) {\n      DashboardStore.setDefaultDashboard(props.defaultDashboard);\n    }\n    if (props.experimental) {\n      console.log(\"Experimental mode enabled\");\n      DashboardStore.setExperimentalMode(true);\n    }\n\n    // pass the emitter object to the store to emit whenever somebody call the notify action\n    if (props.emitter) {\n      DashboardStore.setEmitter(props.emitter);\n    }\n\n    DashboardStore.listen(function (payload) {\n      if (payload.history !== undefined) {\n        var editState = false;\n        if (payload.history > 1) {\n          editState = true;\n        }\n        props.emitter.emit(\"Dashboard.inEditMode\", editState);\n      }\n    });\n\n    _this.componentDidMount = _this.componentDidMount.bind(_this);\n    _this.onModelUpdate = _this.onModelUpdate.bind(_this);\n    _this.render = _this.render.bind(_this);\n    _this.componentWillMount = _this.componentWillMount.bind(_this);\n    _this.handleNLS = _this.handleNLS.bind(_this);\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: 'handleNLS',\n    value: function handleNLS(strings) {\n      this.setState(strings);\n      this.render();\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      if (this.props.strings.length > 0) {\n        this.props.nls.resolve(\"Dashboard\", this.props.strings, this.handleNLS);\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      DashboardStore.listen(this.onModelUpdate);\n      IoTFAuthStore.Actions.setAuth(this.props.auth.org, this.props.auth.ltpa, this.props.auth.domain, this.props.auth.apiKey, this.props.auth.apiToken);\n\n      window.addEventListener(\"orientationchange\", function () {\n        var orientation = window.screen.orientation.angle;\n        if (orientation == 90 || orientation == -90) {\n          var viewport = document.querySelector(\"meta[name=viewport]\");\n          viewport.setAttribute('content', 'width=device-width, initial-scale=0.80, maximum-scale=1.0, user-scalable=no');\n        } else {\n          var viewport = document.querySelector(\"meta[name=viewport]\");\n          viewport.setAttribute('content', 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no');\n          console.log(viewport);\n        }\n      }, false);\n    }\n  }, {\n    key: 'onModelUpdate',\n    value: function onModelUpdate(payload) {\n      var model = {};\n      if (payload.dialog) model.dialog = payload.dialog;\n      if (Object.keys(model).length > 0) {\n        this.setState(model);\n        if (model.dialog == 'none') {\n          $('body').css('overflow', 'auto');\n        } else {\n          $('body').css('overflow', 'hidden');\n        }\n      }\n    }\n  }, {\n    key: 'onDeviceUpdate',\n    value: function onDeviceUpdate(payload) {\n      Actions.deviceUpdated(payload);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var dialog = \"\";\n\n      var theme = DashboardStore.getTheme();\n\n      if (this.state.dialog) {\n        if (this.state.dialog.dialog == \"ComponentSelection\") {\n          dialog = React.createElement(ComponentSelection, { theme: theme, nls: this.props.nls, id: this.state.dialog.id, action: this.state.dialog.action });\n        } else if (this.state.dialog.dialog == \"ComponentCustomization\") {\n          dialog = React.createElement(ComponentCustomization, { theme: theme, nls: this.props.nls, id: this.state.dialog.id, type: this.state.dialog.type, action: this.state.dialog.action });\n        } else if (this.state.dialog.dialog == \"CustomizationWizard\") {\n          dialog = React.createElement(ComponentCustomization, { theme: theme, nls: this.props.nls, id: this.state.dialog.id, type: this.state.dialog.type, action: this.state.dialog.action });\n        } else if (this.state.dialog.dialog == \"PageCustomization\") {\n          dialog = React.createElement(PageCustomization, { theme: theme, nls: this.props.nls, id: this.state.dialog.id, action: this.state.dialog.action });\n        } else if (this.state.dialog.dialog == \"DialogAddMember\") {\n          dialog = React.createElement(DialogAddMember, { theme: theme, nls: this.props.nls, id: this.state.dialog.id, type: this.state.dialog.type, action: this.state.dialog.action });\n        } else if (this.state.dialog.dialog == \"DialogAAAUserDetails\") {\n          dialog = React.createElement(DialogAAAUserDetails, { theme: theme, nls: this.props.nls, id: this.state.dialog.id, type: this.state.dialog.type, action: this.state.dialog.action });\n        }\n      }\n\n      var control = \"\";\n      if (DashboardUtils.getCapability(\"showControls\")) {\n        control = React.createElement(DashboardControl, { theme: theme, nls: this.props.nls, configurable: true });\n      }\n\n      var container = Object.assign({}, styles.container, { backgroundColor: theme.canvas });\n\n      return React.createElement(\n        'div',\n        { style: container, r: true },\n        control,\n        React.createElement(\n          'div',\n          { style: styles.canvas },\n          React.createElement(DashboardCanvas, { theme: theme, nls: this.props.nls })\n        ),\n        React.createElement(\n          'div',\n          { style: styles.dialogContainer },\n          dialog\n        )\n      );\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nDashboard.propTypes = {\n  style: RPT.object,\n  nls: RPT.object,\n  auth: RPT.object\n};\nDashboard.defaultProps = {\n  strings: []\n};\nDashboard.callAction = function (action) {\n  if (action == \"ADD_CARD\") {\n    Actions.showDialog({\n      id: null,\n      action: 'addCard'\n    });\n  } else if (action == \"UNDO\") {\n    Actions.undo();\n  } else if (action == \"EXPERIMENTAL_ON\") {\n    DashboardStore.setExperimentalMode(true);\n  } else if (action == \"EXPERIMENTAL_OFF\") {\n    DashboardStore.setExperimentalMode(false);\n  }\n};\n\nmodule.exports = Dashboard;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../AAA/dialogs/DialogAAAUserDetails.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/dialogs/DialogAAAUserDetails.jsx\",\"../AAA/dialogs/DialogAddMember.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/dialogs/DialogAddMember.jsx\",\"../common/stores/IoTFAuthStore.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFAuthStore.js\",\"./dashboard/Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"./dashboard/ComponentCustomization.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/ComponentCustomization.jsx\",\"./dashboard/CustomizationWizard.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/CustomizationWizard.jsx\",\"./dashboard/DashboardCanvas.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardCanvas.jsx\",\"./dashboard/DashboardControl.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardControl.jsx\",\"./dashboard/DashboardStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardStore.js\",\"./dashboard/DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\",\"./dashboard/PageCustomization.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/PageCustomization.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/BarChart.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar BarChartComponent = require('../../common/components/BarChart.jsx');\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\n\n/**\n* Static chart\n*/\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\"\n  }\n};\n\nvar BarChart = React.createClass({\n  displayName: 'BarChart',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    demo: RPT.bool,\n    plots: RPT.array,\n    title: RPT.string,\n    horizontal: RPT.bool\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      \"plots\": []\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      data: [],\n      names: {},\n      unit: \"\",\n      precision: 0\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        IoTFDeviceStore.Actions.startPropertyWatch(plot.device, plot.event, plot.property);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var found = false;\n    var data = this.state.data;\n    var names = Object.assign({}, this.state.names);\n    var unit = null;\n    var precision = 0;\n\n    // get first unit and precision\n    for (var i in this.props.plots) {\n      if (this.props.plots[i].unit) {\n        unit = this.props.plots[i].unit;\n      }\n      if (this.props.plots[i].precision) {\n        precision = this.props.plots[i].precision;\n      }\n    }\n\n    for (var j in this.props.plots) {\n      var plot = this.props.plots[j];\n      if (plot) {\n        if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n          var property = IoTFDeviceStore.normalizeProperty(plot.property);\n          var obj = payload.deviceEvent.data[property];\n\n          if (obj !== undefined) {\n            var newData = [plot.id, obj];\n            var replaced = false;\n            for (var t in data) {\n              if (data[t][0] == plot.id) {\n                data.splice(t, 1, newData);\n                replaced = true;\n                break;\n              }\n            }\n            if (!replaced) {\n              data.push(newData);\n            }\n            names[plot.id] = plot.label;\n            found = true;\n          }\n        }\n      }\n    }\n    if (found) {\n      this.setState({\n        data: data,\n        names: names,\n        unit: unit,\n        precision: precision\n      });\n    }\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    if (this.state.data && this.state.data.length > 0) {\n      return React.createElement(\n        'div',\n        { style: style },\n        React.createElement(BarChartComponent, {\n          theme: this.props.theme,\n          data: this.state.data,\n          names: this.state.names,\n          title: this.props.title,\n          horizontal: this.props.horizontal,\n          unit: this.state.unit,\n          precision: this.state.precision,\n          height: this.props.wrapper.realHeight - 40,\n          width: this.props.wrapper.realWidth - 40,\n          small: this.props.wrapper.width == 2 || this.props.wrapper.height == 2\n        })\n      );\n    } else {\n      return React.createElement(\n        'div',\n        { style: style },\n        React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n      );\n    }\n  }\n});\n\nmodule.exports = BarChart;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/BarChart.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/BarChart.jsx\",\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/DeviceTypes.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar IoTFUsageStore = require('../../common/stores/IoTFUsageStore.js');\nvar CardDatapoint = require('../../common/components/CardDatapoint.jsx');\nvar CardFooter = require('../../common/components/CardFooter.jsx');\nvar CardFooterDatapoint = require('../../common/components/CardFooterDatapoint.jsx');\nvar DonutChartComponent = require('../../common/components/DonutChart.jsx');\nvar CardTable = require('../../common/components/CardTable.jsx');\nvar Utils = require('../dashboard/DashboardUtils');\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\nvar Button = require('../../common/components/Button.jsx');\nvar Actions = require('../dashboard/Actions.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\"\n  },\n  chart: {\n    marginTop: \"15px\"\n  },\n  legend: {\n    position: \"relative\",\n    padding: \"10px 20px\",\n    boxSizing: \"border-box\",\n    height: \"130px\",\n    overflow: \"hidden\"\n  },\n  legendEntry: {\n    height: \"30px\",\n    width: \"250px\",\n    float: \"left\",\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    cursor: \"pointer\"\n  },\n  legendDot: {\n    height: \"22px\",\n    minWidth: \"22px\",\n    borderRadius: \"17px\",\n    backgroundColor: \"blue\",\n    display: \"inline-block\",\n    top: \"4px\",\n    left: \"0px\",\n    color: \"white\",\n    lineHeight: \"22px\",\n    textAlign: \"center\",\n    padding: \"3px\",\n    position: \"absolute\"\n  },\n  legendLabel: {\n    display: \"block\",\n    position: \"relative\",\n    lineHeight: \"30px\",\n    fontSize: \"16px\",\n    marginLeft: \"40px\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\"\n  },\n  legendValue: {\n    display: \"block\",\n    position: \"relative\",\n    lineHeight: \"30px\",\n    fontSize: \"16px\",\n    textAlign: \"right\",\n    float: \"right\"\n  },\n  waiting: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    padding: \"20px\"\n  },\n  legendTitle: {\n    fontSize: \"16px\",\n    letterSpacing: \"0.5px\",\n    textTransform: \"uppercase\",\n    marginBottom: \"10px\"\n  },\n  simpleLegend: {\n    display: \"block\",\n    position: \"relative\",\n    lineHeight: \"22px\",\n    fontSize: \"16px\",\n    textAlign: \"center\"\n  },\n  wideCardChart: {\n    float: \"left\",\n    margin: \"10px 50px\"\n  },\n  wideHighCardChart: {\n    float: \"left\",\n    margin: \"20px 10px\"\n  },\n  wideCardLegend: {\n    height: \"220px\",\n    width: \"300px\",\n    top: \"3px\"\n  },\n  wideHighCardLegend: {\n    height: \"310px\",\n    width: \"300px\",\n    top: \"12px\"\n  }\n};\n\nvar DeviceTypes = React.createClass({\n  displayName: 'DeviceTypes',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      data: null\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFUsageStore.listen(this.onUpdate);\n    IoTFUsageStore.Actions.fetchDeviceTypes();\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var model = {};\n    if (payload.deviceTypes) {\n      model.data = payload.deviceTypes;\n    }\n    if (Object.keys(model).length > 0) {\n      this.setState(model);\n    }\n  },\n\n  onLegendClick: function onLegendClick(id) {\n    this.setState({\n      click: id,\n      focus: undefined\n    });\n    Actions.notify({\n      deviceType: id\n    });\n  },\n\n  onAddDevice: function onAddDevice() {\n    Actions.notify({\n      action: \"CREATE_DEVICE\"\n    });\n  },\n\n  onLegendFocus: function onLegendFocus(id) {\n    this.setState({\n      focus: id,\n      selected: id,\n      click: undefined\n    });\n  },\n\n  onLegendRevert: function onLegendRevert(id) {\n    this.setState({\n      click: undefined,\n      selected: undefined,\n      focus: undefined\n    });\n  },\n\n  onOver: function onOver(d, i) {\n    this.setState({\n      label: d.value,\n      selected: d.id\n    });\n  },\n\n  onOut: function onOut(d, i) {\n    this.setState({\n      label: undefined,\n      selected: undefined\n    });\n  },\n\n  render: function render() {\n    var self = this;\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    if (this.state.data) {\n      if (this.state.data.length > 0) {\n        var colors = this.props.theme.palette;\n\n        // limit the number of visible items depending on the size\n        var itemLimit = null;\n        if (this.props.wrapper.width == 2 && this.props.wrapper.height == 3) {\n          itemLimit = null;\n        } else if (this.props.wrapper.width == 2 && this.props.wrapper.height == 4) {\n          itemLimit = 3;\n        } else if (this.props.wrapper.width == 4 && this.props.wrapper.height == 3) {\n          itemLimit = 6;\n        } else if (this.props.wrapper.width == 4 && this.props.wrapper.height == 4) {\n          itemLimit = 9;\n        }\n\n        var names = {};\n        var data = [];\n\n        var count = 0;\n        for (var i in this.state.data) {\n          var item = this.state.data[i];\n          data.push([item.deviceType, item.count]);\n          count += item.count;\n        }\n\n        var sort = function sort(a, b) {\n          if (a.length == 2 && b.length == 2) {\n            if (a[1] > b[1]) {\n              return -1;\n            } else if (a[1] < b[1]) {\n              return 1;\n            } else {\n              return 0;\n            }\n          } else {\n            return 0;\n          }\n        };\n        data.sort(sort);\n\n        // finally limit to the number of visible items\n        if (itemLimit && data.length > itemLimit) {\n          var othersLabel = this.props.nls.resolve(\"Other\");\n          var others = 0;\n          for (var i = itemLimit - 1; i < data.length; i++) {\n            var item = data[i];\n            others += item[1];\n          }\n          data.splice(itemLimit - 1, data.length - itemLimit + 1);\n          var newItem = [];\n          newItem[0] = othersLabel;\n          newItem[1] = Math.round(others);\n          data.push(newItem);\n        }\n\n        var title = this.props.nls.resolve(\"DeviceTypesTitle\");\n        var colorCounter = -1;\n\n        styles.legendLabel.color = this.props.theme.minor;\n\n        var width = this.props.wrapper.realWidth;\n        var height = this.props.wrapper.realHeight;\n        if (this.props.wrapper.width == 2) {\n          width = 180;\n          height = 180;\n        } else if (this.props.wrapper.height == 3) {\n          width = 220;\n          height = 220;\n        } else {\n          width = 300;\n          height = 300;\n        }\n\n        var legend = \"\";\n        if (this.props.wrapper.height == 4 || this.props.wrapper.width == 4) {\n          var legendStyle = styles.legend;\n          if (this.props.wrapper.width == 4 && this.props.wrapper.height < 4) {\n            legendStyle = Object.assign({}, styles.legend, styles.wideCardLegend);\n          } else if (this.props.wrapper.width == 4 && this.props.wrapper.height == 4) {\n            legendStyle = Object.assign({}, styles.legend, styles.wideHighCardLegend);\n          }\n\n          legend = React.createElement(\n            'div',\n            { style: legendStyle },\n            React.createElement(\n              'div',\n              { style: Object.assign({}, styles.legendTitle, { color: this.props.theme.minor }) },\n              this.props.nls.resolve(\"DeviceTypeLegendTitle\")\n            ),\n            data.map(function (entry) {\n              var deviceType = entry[0];\n              var count = entry[1];\n\n              colorCounter++;\n\n              var legendEntry = styles.legendEntry;\n              if (deviceType == self.state.selected) {\n                legendEntry = Object.assign({}, styles.legendEntry, { fontWeight: \"bold\" });\n              }\n\n              return React.createElement(\n                'div',\n                { key: deviceType, style: legendEntry, onClick: function onClick() {\n                    self.onLegendClick(deviceType);\n                  }, onMouseOver: function onMouseOver() {\n                    self.onLegendFocus(deviceType);\n                  }, onMouseOut: function onMouseOut() {\n                    self.onLegendRevert(deviceType);\n                  } },\n                React.createElement(\n                  'div',\n                  { style: Object.assign({}, styles.legendDot, { backgroundColor: colors[colorCounter % (colors.length - 1)] }) },\n                  \"\"\n                ),\n                React.createElement(\n                  'div',\n                  { style: Object.assign({}, styles.legendValue, { color: colors[colorCounter % (colors.length - 1)] }) },\n                  count\n                ),\n                React.createElement(\n                  'div',\n                  { style: styles.legendLabel },\n                  deviceType\n                )\n              );\n            })\n          );\n        } else if (this.state.selected) {\n          var type = null;\n          for (var j in this.state.data) {\n            var entry = this.state.data[j];\n            if (entry.deviceType == this.state.selected) {\n              type = entry;\n              break;\n            }\n          }\n\n          legend = React.createElement(\n            'div',\n            { style: styles.simpleLegend },\n            type.deviceType\n          );\n        }\n\n        var chartStyle = styles.chart;\n        if (this.props.wrapper.width == 4 && this.props.wrapper.height < 4) {\n          chartStyle = Object.assign({}, styles.chart, styles.wideCardChart);\n        } else if (this.props.wrapper.width == 4 && this.props.wrapper.height == 4) {\n          chartStyle = Object.assign({}, styles.chart, styles.wideHighCardChart);\n        }\n\n        return React.createElement(\n          'div',\n          { style: style },\n          React.createElement(DonutChartComponent, {\n            theme: this.props.theme,\n            data: data,\n            names: names,\n            title: title,\n            height: height,\n            width: width,\n            focus: this.state.focus,\n            click: this.state.click,\n            onOver: this.onOver,\n            onOut: this.onOut,\n            label: this.state.label,\n            unit: 'devices',\n            style: chartStyle\n          }),\n          legend\n        );\n      } else {\n        return React.createElement(\n          'div',\n          { style: styles.waiting },\n          this.props.nls[\"NoDevicesAdded\"],\n          React.createElement('div', null),\n          React.createElement(Button, { theme: this.props.theme, text: this.props.nls[\"AddDevice\"], onClick: this.onAddDevice })\n        );\n      }\n    } else {\n      return React.createElement(\n        'div',\n        { style: styles.waiting },\n        React.createElement(LoadIndicator, { theme: this.props.theme })\n      );\n    }\n  }\n});\n\nmodule.exports = DeviceTypes;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/Button.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Button.jsx\",\"../../common/components/CardDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardDatapoint.jsx\",\"../../common/components/CardFooter.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooter.jsx\",\"../../common/components/CardFooterDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooterDatapoint.jsx\",\"../../common/components/CardTable.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardTable.jsx\",\"../../common/components/DonutChart.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/DonutChart.jsx\",\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../../common/stores/IoTFUsageStore.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFUsageStore.js\",\"../dashboard/Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"../dashboard/DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/DonutChart.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar DonutChartComponent = require('../../common/components/DonutChart.jsx');\nvar CardDatapoint = require('../../common/components/CardDatapoint.jsx');\nvar CardFooter = require('../../common/components/CardFooter.jsx');\nvar CardFooterDatapoint = require('../../common/components/CardFooterDatapoint.jsx');\nvar CardTable = require('../../common/components/CardTable.jsx');\nvar Utils = require('../dashboard/DashboardUtils');\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\"\n  },\n  chart: {\n    marginTop: \"15px\"\n  },\n  legend: {\n    position: \"relative\",\n    padding: \"10px 20px\",\n    boxSizing: \"border-box\",\n    height: \"130px\",\n    overflow: \"hidden\"\n  },\n  legendEntry: {\n    height: \"30px\",\n    width: \"250px\",\n    float: \"left\",\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    cursor: \"pointer\"\n  },\n  legendDot: {\n    height: \"22px\",\n    minWidth: \"22px\",\n    borderRadius: \"17px\",\n    backgroundColor: \"blue\",\n    display: \"inline-block\",\n    top: \"4px\",\n    left: \"0px\",\n    color: \"white\",\n    lineHeight: \"22px\",\n    textAlign: \"center\",\n    padding: \"3px\",\n    position: \"absolute\"\n  },\n  legendLabel: {\n    display: \"block\",\n    position: \"relative\",\n    lineHeight: \"30px\",\n    fontSize: \"16px\",\n    marginLeft: \"40px\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\"\n  },\n  legendValue: {\n    display: \"block\",\n    position: \"relative\",\n    lineHeight: \"30px\",\n    fontSize: \"16px\",\n    textAlign: \"right\",\n    float: \"right\"\n  },\n  waiting: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    padding: \"20px\"\n  },\n  legendTitle: {\n    fontSize: \"16px\",\n    letterSpacing: \"0.5px\",\n    textTransform: \"uppercase\",\n    marginBottom: \"10px\"\n  },\n  simpleLegend: {\n    display: \"block\",\n    position: \"relative\",\n    lineHeight: \"22px\",\n    fontSize: \"16px\",\n    textAlign: \"center\"\n  },\n  wideCardChart: {\n    float: \"left\",\n    margin: \"10px 50px\"\n  },\n  wideHighCardChart: {\n    float: \"left\",\n    margin: \"20px 10px\"\n  },\n  wideCardLegend: {\n    height: \"220px\",\n    width: \"300px\",\n    top: \"3px\"\n  },\n  wideHighCardLegend: {\n    height: \"310px\",\n    width: \"300px\",\n    top: \"12px\"\n  }\n};\n\nvar DonutChart = React.createClass({\n  displayName: 'DonutChart',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    demo: RPT.bool,\n    plots: RPT.array,\n    type: RPT.string,\n    title: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      \"plots\": []\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      data: [],\n      names: {}\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        IoTFDeviceStore.Actions.startPropertyWatch(plot.device, plot.event, plot.property);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var found = false;\n    var data = this.state.data;\n    var names = Object.assign({}, this.state.names);\n\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n          var property = IoTFDeviceStore.normalizeProperty(plot.property);\n          var obj = payload.deviceEvent.data[property];\n\n          if (obj !== undefined) {\n            var newData = [plot.id, obj];\n            var replaced = false;\n            for (var t in data) {\n              if (data[t][0] == plot.id) {\n                data.splice(t, 1, newData);\n                replaced = true;\n                break;\n              }\n            }\n            if (!replaced) {\n              data.push(newData);\n            }\n            names[plot.id] = plot.label;\n            found = true;\n          }\n        }\n      }\n    }\n\n    if (found) {\n      this.setState({\n        data: data,\n        names: names\n      });\n    }\n  },\n\n  onLegendClick: function onLegendClick(id) {\n    this.setState({\n      click: id,\n      focus: undefined\n    });\n  },\n\n  onLegendFocus: function onLegendFocus(id) {\n    this.setState({\n      focus: id,\n      selected: id\n    });\n  },\n\n  onLegendRevert: function onLegendRevert(id) {\n    this.setState({\n      focus: undefined,\n      selected: undefined\n    });\n  },\n\n  onOver: function onOver(d, i) {\n    this.setState({\n      label: d.value,\n      selected: d.id\n    });\n  },\n\n  onOut: function onOut(d, i) {\n    this.setState({\n      label: undefined,\n      selected: undefined\n    });\n  },\n\n  render: function render() {\n    var self = this;\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    if (this.state.data) {\n      if (this.state.data.length > 0) {\n        var colors = this.props.theme.palette;\n\n        // limit the number of visible items depending on the size\n        var itemLimit = null;\n        if (this.props.wrapper.width == 2 && this.props.wrapper.height == 3) {\n          itemLimit = null;\n        } else if (this.props.wrapper.width == 2 && this.props.wrapper.height == 4) {\n          itemLimit = 4;\n        } else if (this.props.wrapper.width == 4 && this.props.wrapper.height == 3) {\n          itemLimit = 7;\n        } else if (this.props.wrapper.width == 4 && this.props.wrapper.height == 4) {\n          itemLimit = 10;\n        }\n\n        var names = Object.assign({}, this.state.names);\n        // convert into real array and sort\n        var data = [];\n        for (var i in this.state.data) {\n          data.push(this.state.data[i]);\n        }\n\n        var sort = function sort(a, b) {\n          if (a.length == 2 && b.length == 2) {\n            if (a[1] > b[1]) {\n              return -1;\n            } else if (a[1] < b[1]) {\n              return 1;\n            } else {\n              return 0;\n            }\n          } else {\n            return 0;\n          }\n        };\n        data.sort(sort);\n\n        // finally limit to the number of visible items\n        // create a fake plot to simplify handling of the others entry\n        var othersPlot = {\n          precision: 0,\n          unit: \"\"\n        };\n        if (itemLimit && data.length > itemLimit) {\n          othersPlot.label = this.props.nls.resolve(\"Other\") + \" (\" + (data.length - itemLimit + 1) + \")\";\n          var others = 0;\n          for (var i = itemLimit - 1; i < data.length; i++) {\n            var item = data[i];\n            others += item[1];\n          }\n          data.splice(itemLimit - 1, data.length - itemLimit + 1);\n          var newItem = [];\n          newItem[0] = \"others\";\n          newItem[1] = Math.round(others);\n          data.push(newItem);\n          names[\"others\"] = othersPlot.label;\n        }\n\n        var colorCounter = -1;\n\n        styles.legendLabel.color = this.props.theme.minor;\n\n        var width = this.props.wrapper.realWidth;\n        var height = this.props.wrapper.realHeight;\n        if (this.props.wrapper.width == 2) {\n          width = 180;\n          height = 180;\n        } else if (this.props.wrapper.height == 3) {\n          width = 220;\n          height = 220;\n        } else {\n          width = 300;\n          height = 300;\n        }\n\n        var legend = \"\";\n        var plot = null;\n        if (this.props.wrapper.height == 4 || this.props.wrapper.width == 4) {\n          var legendStyle = styles.legend;\n          if (this.props.wrapper.width == 4 && this.props.wrapper.height < 4) {\n            legendStyle = Object.assign({}, styles.legend, styles.wideCardLegend);\n          } else if (this.props.wrapper.width == 4 && this.props.wrapper.height == 4) {\n            legendStyle = Object.assign({}, styles.legend, styles.wideHighCardLegend);\n          }\n          legend = React.createElement(\n            'div',\n            { style: legendStyle },\n            data.map(function (entry) {\n              var value = entry[1];\n              var id = entry[0];\n              var plot = null;\n              if (id != \"others\") {\n                for (var i = 0; i < self.props.plots.length; i++) {\n                  plot = self.props.plots[i];\n                  if (id == plot.id) {\n                    // try to catch unit and precision from other plots\n                    if (plot.unit) othersPlot.unit = plot.unit;\n                    // we just round the value since we do not have an accurate precision for the accumulated value\n                    //if (plot.precision !== undefined) othersPlot.precision = plot.precision;\n                    break;\n                  }\n                }\n              } else {\n                plot = othersPlot;\n              }\n\n              if (plot.precision !== undefined) {\n                value = value.toFixed(plot.precision);\n              }\n\n              colorCounter++;\n              var legendEntry = styles.legendEntry;\n              if (id == self.state.selected) {\n                legendEntry = Object.assign({}, styles.legendEntry, { fontWeight: \"bold\" });\n              }\n              return React.createElement(\n                'div',\n                { key: id, style: legendEntry, onClick: function onClick() {\n                    self.onLegendClick(id);\n                  }, onMouseOver: function onMouseOver() {\n                    self.onLegendFocus(id);\n                  }, onMouseOut: function onMouseOut() {\n                    self.onLegendRevert(id);\n                  } },\n                React.createElement(\n                  'div',\n                  { style: Object.assign({}, styles.legendDot, { backgroundColor: colors[colorCounter % (colors.length - 1)] }) },\n                  \"\"\n                ),\n                React.createElement(\n                  'div',\n                  { style: Object.assign({}, styles.legendValue, { color: colors[colorCounter % (colors.length - 1)] }) },\n                  value,\n                  ' ',\n                  plot.unit\n                ),\n                React.createElement(\n                  'div',\n                  { style: styles.legendLabel },\n                  plot.label\n                )\n              );\n            })\n          );\n        } else if (this.state.selected) {\n          plot = null;\n          for (var j in this.props.plots) {\n            plot = this.props.plots[j];\n            if (plot.id == this.state.selected) {\n              plot = plot;\n              break;\n            }\n          }\n\n          legend = React.createElement(\n            'div',\n            { style: styles.simpleLegend },\n            plot.label\n          );\n        }\n\n        // find unit\n        var unit = \"\";\n        for (var k in this.props.plots) {\n          plot = this.props.plots[k];\n          if (plot.unit) {\n            unit = plot.unit;\n            break;\n          }\n        }\n\n        var chartStyle = styles.chart;\n        if (this.props.wrapper.width == 4 && this.props.wrapper.height < 4) {\n          chartStyle = Object.assign({}, styles.chart, styles.wideCardChart);\n        } else if (this.props.wrapper.width == 4 && this.props.wrapper.height == 4) {\n          chartStyle = Object.assign({}, styles.chart, styles.wideHighCardChart);\n        }\n\n        return React.createElement(\n          'div',\n          { style: style },\n          React.createElement(DonutChartComponent, {\n            theme: this.props.theme,\n            data: data,\n            names: names,\n            type: this.props.type,\n            title: this.props.title,\n            height: height,\n            width: width,\n            focus: this.state.focus,\n            onOver: this.onOver,\n            onOut: this.onOut,\n            label: this.state.label,\n            unit: unit,\n            style: chartStyle\n          }),\n          legend\n        );\n      } else {\n        return React.createElement(\n          'div',\n          { style: styles.waiting },\n          React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n        );\n      }\n    } else {\n      return React.createElement(\n        'div',\n        { style: styles.waiting },\n        React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n      );\n    }\n  }\n});\n\nmodule.exports = DonutChart;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/CardDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardDatapoint.jsx\",\"../../common/components/CardFooter.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooter.jsx\",\"../../common/components/CardFooterDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooterDatapoint.jsx\",\"../../common/components/CardTable.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardTable.jsx\",\"../../common/components/DonutChart.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/DonutChart.jsx\",\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\",\"../dashboard/DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/Gauge.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar d3 = (typeof window !== \"undefined\" ? window['d3'] : typeof global !== \"undefined\" ? global['d3'] : null);\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar RPT = React.PropTypes;\nvar GaugeComponent = require('../../common/components/Gauge.jsx');\nvar CardIndicator = require('../../common/components/CardIndicator.jsx');\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar CardDatapoint = require('../../common/components/CardDatapoint.jsx');\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\n\n/**\n* Flexible gauge.\n*/\nvar styles = {\n  container: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  waiting: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    padding: \"20px\"\n  },\n  gauge: {\n    marginTop: \"15px\"\n  },\n  dataPoint: {\n    marginTop: \"5px\",\n    marginLeft: \"30px\"\n  },\n  miniContainer: {\n    width: \"100%\",\n    height: \"15px\",\n    position: \"absolute\",\n    bottom: \"0px\"\n  },\n  miniBar: {\n    height: \"100%\",\n    position: \"relative\"\n  }\n};\n\nvar Gauge = React.createClass({\n  displayName: 'Gauge',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    demo: RPT.bool,\n    minDegree: RPT.number,\n    maxDegree: RPT.number,\n    plots: RPT.array,\n    major: RPT.string,\n    needle: RPT.bool,\n    lowerThresholdMeaning: RPT.string,\n    middleThresholdMeaning: RPT.string,\n    upperThresholdMeaning: RPT.string,\n    lowerThreshold: RPT.number,\n    upperThreshold: RPT.number\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      plots: [],\n      minDegree: 45,\n      maxDegree: 315,\n      needle: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      value: 0\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    if (this.props.plots && this.props.plots.length > 0) {\n      var plot = this.getPlot();\n      IoTFDeviceStore.Actions.startPropertyWatch(plot.device, plot.event, plot.property);\n    }\n\n    if (this.props.demo) {\n      // var self = this;\n      // setInterval(function() {\n      //   self.updateSVG(Math.round(Math.random()*(self.props.max - self.props.min) + self.props.min))\n      // }, 1000);\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  getPlot: function getPlot() {\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot.id == this.props.major) {\n        return plot;\n      }\n    }\n    // fallback\n    if (this.props.plots.length > 0) {\n      return this.props.plots[0];\n    } else {\n      return null;\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    //console.log(\"onUpdate\", payload.deviceEvent.deviceId, payload.deviceEvent.eventType, this.props);\n    if (this.props.plots && this.props.plots.length > 0) {\n      var plot = this.getPlot();\n\n      if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n        var property = IoTFDeviceStore.normalizeProperty(plot.property);\n        var obj = payload.deviceEvent.data[property];\n\n        if (obj !== undefined) {\n          this.setState({\n            value: obj\n          });\n        }\n      }\n    }\n  },\n\n  render: function render() {\n    var self = this;\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n    var plot = this.getPlot();\n\n    if (this.state.value !== undefined && plot) {\n      var width = this.props.wrapper.realWidth;\n      var height = this.props.wrapper.realHeight;\n      if (this.props.wrapper.width == 2) {\n        width = 280;\n        height = 280;\n      } else {\n        width = 300;\n        height = 300;\n      }\n\n      // handle thresholds\n      var condition = \"\";\n      var indicatorText = \"\";\n      if (this.props.lowerThresholdMeaning && this.state.value <= this.props.lowerThreshold) {\n        condition = this.props.lowerThresholdMeaning;\n        indicatorText = \"Threshold is \" + this.props.nls[\"THRESHOLD_\" + this.props.lowerThresholdMeaning];\n      } else if (this.props.middleThresholdMeaning && this.state.value > this.props.lowerThreshold && this.state.value < this.props.upperThreshold) {\n        condition = this.props.middleThresholdMeaning;\n        indicatorText = \"Threshold is \" + this.props.nls[\"THRESHOLD_\" + this.props.middleThresholdMeaning];\n      } else if (this.props.upperThresholdMeaning && this.state.value >= this.props.upperThreshold) {\n        condition = this.props.upperThresholdMeaning;\n        indicatorText = \"Threshold is \" + this.props.nls[\"THRESHOLD_\" + this.props.upperThresholdMeaning];\n      }\n\n      var indicator = \"\";\n      var gauge = \"\";\n      var miniGauge = \"\";\n      var dataPoint = \"\";\n\n      if (this.props.wrapper.height == 1 && plot) {\n        dataPoint = React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: plot.label, style: styles.dataPoint },\n          plot.precision !== undefined ? this.state.value.toFixed(plot.precision) : this.state.value,\n          plot.unit ? \" \" + plot.unit : \"\"\n        );\n        var percentage = Math.floor(this.state.value - plot.min) / (plot.max - plot.min) * 100;\n        var miniBar = Object.assign({}, styles.miniBar, { backgroundColor: this.props.theme.normal, width: percentage + \"%\" });\n        var miniContainer = Object.assign({}, styles.miniContainer, { backgroundColor: this.props.theme.minor });\n        miniGauge = React.createElement(\n          'div',\n          { style: miniContainer },\n          React.createElement('div', { style: miniBar })\n        );\n      } else {\n        if (condition) {\n          indicator = React.createElement(\n            CardIndicator,\n            {\n              theme: this.props.theme,\n              condition: condition\n            },\n            indicatorText\n          );\n        }\n\n        gauge = React.createElement(GaugeComponent, {\n          theme: this.props.theme,\n          value: this.state.value,\n          height: height,\n          width: width,\n          label: this.state.label,\n          unit: plot.unit,\n          minDegree: this.props.minDegree,\n          maxDegree: this.props.maxDegree,\n          needle: this.props.needle,\n          min: plot.min,\n          max: plot.max,\n          precision: plot.precision,\n          style: styles.gauge,\n          lowerThresholdMeaning: this.props.lowerThresholdMeaning,\n          middleThresholdMeaning: this.props.middleThresholdMeaning,\n          upperThresholdMeaning: this.props.upperThresholdMeaning,\n          lowerThreshold: this.props.lowerThreshold,\n          upperThreshold: this.props.upperThreshold\n\n        });\n      }\n\n      return React.createElement(\n        'div',\n        { style: style },\n        indicator,\n        dataPoint,\n        miniGauge,\n        gauge\n      );\n    } else {\n      return React.createElement(\n        'div',\n        { style: styles.waiting },\n        React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n      );\n    }\n  }\n});\n\nmodule.exports = Gauge;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/CardDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardDatapoint.jsx\",\"../../common/components/CardIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardIndicator.jsx\",\"../../common/components/Gauge.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Gauge.jsx\",\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/HorizontalLine.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\n\n/**\n* Simple horizontal line to organize cards\n*/\n\nvar HorizontalLine = React.createClass({\n\tdisplayName: \"HorizontalLine\",\n\n\tpropTypes: {\n\t\ttheme: RPT.object.isRequired,\n\t\tstyle: RPT.object,\n\t\tnls: RPT.object,\n\t\ttype: RPT.string,\n\t\twrapper: RPT.object\n\t},\n\n\trender: function render() {\n\t\tvar self = this;\n\t\tvar style = {\n\t\t\tbackgroundColor: this.props.theme.normal,\n\t\t\theight: \"10px\"\n\t\t};\n\t\treturn React.createElement(\"div\", { style: style });\n\t}\n});\n\nmodule.exports = HorizontalLine;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/RealTimeChart.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar d3 = (typeof window !== \"undefined\" ? window['d3'] : typeof global !== \"undefined\" ? global['d3'] : null);\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar LineChart = require('../../common/components/LineChart.jsx');\n\n/**\n* Realtime chart\n*/\nvar styles = {\n  container: {\n    height: \"100%\",\n    width: \"100%\",\n    color: \"black\",\n    padding: \"20px\"\n  }\n};\n\nvar RealTimeChart = React.createClass({\n  displayName: 'RealTimeChart',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    demo: RPT.bool,\n    plots: RPT.array,\n    range: RPT.number,\n    autoscroll: RPT.bool,\n    overview: RPT.bool,\n    stacked: RPT.bool,\n    steps: RPT.bool,\n    threshold: RPT.number\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      plots: [],\n      range: 60,\n      threshold: 300,\n      autoscroll: true,\n      overview: true,\n      stacked: false,\n      steps: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      data: {}\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        IoTFDeviceStore.Actions.startPropertyWatch(plot.device, plot.event, plot.property);\n      }\n    }\n\n    var self = this;\n\n    // if (this.props.demo) {\n    // \tsetInterval(function() {\n    // \t\tself.updateGraph([\n    // \t\t\t(new Date().getTime()),\n    // \t\t\tMath.round(Math.random()*(100 - (-100)) + -100)\n    // \t\t]);\n    // \t}, 1000);\n    // }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var data = { timestamp: new Date().getTime() };\n    var found = false;\n    var count = 0;\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n          var property = IoTFDeviceStore.normalizeProperty(plot.property);\n          var obj = payload.deviceEvent.data[property];\n\n          if (obj !== undefined) {\n            data[plot.id] = obj;\n            found = true;\n          }\n        }\n      }\n    }\n    if (found) {\n      this.setState({\n        data: data\n      });\n    }\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n    return React.createElement(\n      'div',\n      { style: style, onMouseOver: this.onEnter, onMouseOut: this.onLeave },\n      React.createElement(LineChart, {\n        theme: this.props.theme,\n        data: this.state.data,\n        plots: this.props.plots,\n        height: this.props.wrapper.realHeight - 40,\n        width: this.props.wrapper.realWidth - 40,\n        overview: this.props.overview && this.props.wrapper.height == 4 && this.props.wrapper.width > 2,\n        range: this.props.range,\n        legend: this.props.wrapper.height == 4,\n        small: this.props.wrapper.width < 3,\n        autoscroll: this.props.autoscroll,\n        stacked: this.props.stacked,\n        steps: this.props.steps,\n        threshold: this.props.threshold\n      })\n    );\n  }\n});\n\nmodule.exports = RealTimeChart;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/LineChart.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LineChart.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/UsageDataCard.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar IoTFUsageStore = require('../../common/stores/IoTFUsageStore.js');\nvar CardDatapoint = require('../../common/components/CardDatapoint.jsx');\nvar CardFooter = require('../../common/components/CardFooter.jsx');\nvar CardFooterDatapoint = require('../../common/components/CardFooterDatapoint.jsx');\nvar CardLineChart = require('../../common/components/CardLineChart.jsx');\nvar CardTable = require('../../common/components/CardTable.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    padding: \"30px\"\n  }\n};\n\nvar UsageDataCard = React.createClass({\n  displayName: 'UsageDataCard',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    nls: RPT.object,\n    style: RPT.object\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      dataTrafficUsageToday: 0,\n      details: [],\n      dataTrafficUsageThisMonth: 0,\n      dataTrafficUsageLastMonth: 0\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFUsageStore.listen(this.onUpdate);\n    IoTFUsageStore.Actions.fetchDataTrafficUsage();\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var model = {};\n    if (payload.dataTrafficUsageThisMonth !== undefined) {\n      model.dataTrafficUsageThisMonth = payload.dataTrafficUsageThisMonth;\n    }\n    if (payload.dataTrafficUsageLastMonth !== undefined) {\n      model.dataTrafficUsageLastMonth = payload.dataTrafficUsageLastMonth;\n    }\n    if (payload.dataTrafficUsageToday !== undefined) {\n      model.dataTrafficUsageToday = payload.dataTrafficUsageToday;\n    }\n    if (payload.dataTrafficUsageDetails) {\n      var details = payload.dataTrafficUsageDetails;\n      model.details = details;\n    }\n\n    if (Object.keys(model).length > 0) {\n      this.setState(model);\n    }\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    var firstDataPoint = \"\";\n    var secondDataPoint = \"\";\n    var thirdDataPoint = \"\";\n    var table = \"\";\n    var chart = \"\";\n\n    firstDataPoint = React.createElement(\n      CardDatapoint,\n      { theme: this.props.theme, unit: this.props.nls.resolve(\"DataToday\") },\n      this.state.dataTrafficUsageToday\n    );\n\n    if (this.props.wrapper.height == 1) {\n      style = Object.assign({}, style, { paddingTop: \"15px\" });\n    } else {\n      style = Object.assign({}, style, { paddingTop: \"30px\" });\n    }\n    if (this.props.wrapper.height == 3) {\n      secondDataPoint = React.createElement(\n        CardDatapoint,\n        { theme: this.props.theme, minor: true, unit: this.props.nls.resolve(\"ThisMonth\") },\n        this.state.dataTrafficUsageThisMonth\n      );\n      thirdDataPoint = React.createElement(\n        CardDatapoint,\n        { theme: this.props.theme, minor: true, unit: this.props.nls.resolve(\"PreviousMonth\") },\n        this.state.dataTrafficUsageLastMonth\n      );\n    } else if (this.props.wrapper.width == 3) {\n      var data = [];\n      var details = this.state.details;\n      for (var i = details.length - 1; i >= 0 && i > details.length - 6; i--) {\n        var line = details[i];\n        var entry = [line.date, line.total.toFixed(1) + \" MB\"];\n        data.push(entry);\n      }\n      table = React.createElement(CardTable, {\n        theme: this.props.theme,\n        data: data,\n        header: [this.props.nls.resolve(\"Time\"), this.props.nls.resolve(\"DataConsumed\")]\n      });\n    } else if (this.props.wrapper.width == 4) {\n      chart = React.createElement(CardLineChart, {\n        theme: this.props.theme,\n        data: this.state.details,\n        showRange: true,\n        unit: 'MB'\n      });\n    }\n\n    return React.createElement(\n      'div',\n      { style: style },\n      firstDataPoint,\n      secondDataPoint,\n      thirdDataPoint,\n      table,\n      chart\n    );\n  }\n});\n\nmodule.exports = UsageDataCard;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/CardDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardDatapoint.jsx\",\"../../common/components/CardFooter.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooter.jsx\",\"../../common/components/CardFooterDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooterDatapoint.jsx\",\"../../common/components/CardLineChart.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardLineChart.jsx\",\"../../common/components/CardTable.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardTable.jsx\",\"../../common/stores/IoTFUsageStore.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFUsageStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/UsageDeviceCard.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar IoTFUsageStore = require('../../common/stores/IoTFUsageStore.js');\nvar CardDatapoint = require('../../common/components/CardDatapoint.jsx');\nvar CardFooter = require('../../common/components/CardFooter.jsx');\nvar CardFooterDatapoint = require('../../common/components/CardFooterDatapoint.jsx');\nvar CardLineChart = require('../../common/components/CardLineChart.jsx');\nvar CardTable = require('../../common/components/CardTable.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    padding: \"30px\"\n  }\n};\n\nvar UsageDeviceCard = React.createClass({\n  displayName: 'UsageDeviceCard',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    nls: RPT.object,\n    style: RPT.object\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      deviceCount: 0,\n      details: [],\n      devicesCreatedThisMonth: 0,\n      devicesCreatedPreviousMonth: 0\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFUsageStore.listen(this.onUpdate);\n    IoTFUsageStore.Actions.fetchDeviceCount();\n    IoTFUsageStore.Actions.fetchActiveDeviceUsage();\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var model = {};\n    if (payload.deviceCount) {\n      model.deviceCount = payload.deviceCount;\n    }\n    if (payload.activeDeviceUsageThisMonth) {\n      model.devicesCreatedThisMonth = payload.activeDeviceUsageThisMonth;\n    }\n    if (payload.activeDeviceUsageLastMonth) {\n      model.devicesCreatedPreviousMonth = payload.activeDeviceUsageLastMonth;\n    }\n    if (payload.activeDeviceUsageDetails) {\n      var details = payload.activeDeviceUsageDetails;\n      if (details.length > 0) {\n        var today = details[details.length - 1].total;\n        model.today = today;\n      }\n      model.details = details;\n    }\n\n    if (Object.keys(model).length > 0) {\n      this.setState(model);\n    }\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    var firstDataPoint = \"\";\n    var secondDataPoint = \"\";\n    var thirdDataPoint = \"\";\n    var table = \"\";\n    var chart = \"\";\n\n    firstDataPoint = React.createElement(\n      CardDatapoint,\n      { theme: this.props.theme, unit: this.props.nls.resolve(\"DevicesNow\") },\n      this.state.deviceCount\n    );\n\n    if (this.props.wrapper.height == 1) {\n      style = Object.assign({}, style, { paddingTop: \"15px\" });\n    } else {\n      style = Object.assign({}, style, { paddingTop: \"30px\" });\n    }\n    if (this.props.wrapper.height == 3) {\n      secondDataPoint = React.createElement(\n        CardDatapoint,\n        { theme: this.props.theme, minor: true, unit: this.props.nls.resolve(\"DevicesThisMonth\") },\n        this.state.devicesCreatedThisMonth\n      );\n      thirdDataPoint = React.createElement(\n        CardDatapoint,\n        { theme: this.props.theme, minor: true, unit: this.props.nls.resolve(\"DevicesPreviousMonth\") },\n        this.state.devicesCreatedPreviousMonth\n      );\n    } else if (this.props.wrapper.width == 3) {\n      var data = [];\n      var details = this.state.details;\n      for (var i = details.length - 1; i >= 0 && i > details.length - 6; i--) {\n        var line = details[i];\n        var entry = [line.date, line.total];\n        data.push(entry);\n      }\n      table = React.createElement(CardTable, {\n        theme: this.props.theme,\n        data: data,\n        header: [this.props.nls.resolve(\"Time\"), this.props.nls.resolve(\"DevicesConnected\")]\n      });\n    } else if (this.props.wrapper.width == 4) {\n      chart = React.createElement(CardLineChart, {\n        theme: this.props.theme,\n        data: this.state.details,\n        showRange: true,\n        unit: 'Devices'\n      });\n    }\n\n    return React.createElement(\n      'div',\n      { style: style },\n      firstDataPoint,\n      secondDataPoint,\n      thirdDataPoint,\n      table,\n      chart\n    );\n  }\n});\n\nmodule.exports = UsageDeviceCard;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/CardDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardDatapoint.jsx\",\"../../common/components/CardFooter.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooter.jsx\",\"../../common/components/CardFooterDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooterDatapoint.jsx\",\"../../common/components/CardLineChart.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardLineChart.jsx\",\"../../common/components/CardTable.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardTable.jsx\",\"../../common/stores/IoTFUsageStore.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFUsageStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/UsageStorageCard.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar IoTFUsageStore = require('../../common/stores/IoTFUsageStore.js');\nvar CardDatapoint = require('../../common/components/CardDatapoint.jsx');\nvar CardFooter = require('../../common/components/CardFooter.jsx');\nvar CardFooterDatapoint = require('../../common/components/CardFooterDatapoint.jsx');\nvar CardLineChart = require('../../common/components/CardLineChart.jsx');\nvar CardTable = require('../../common/components/CardTable.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    padding: \"30px\"\n  }\n};\n\nvar UsageStorageCard = React.createClass({\n  displayName: 'UsageStorageCard',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    nls: RPT.object,\n    style: RPT.object\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      dataUsageToday: 0,\n      details: [],\n      historicalDataUsageThisMonth: 0,\n      historicalDataUsageLastMonth: 0\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFUsageStore.listen(this.onUpdate);\n    IoTFUsageStore.Actions.fetchHistoricalDataUsage();\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var model = {};\n    if (payload.historicalDataUsageThisMonth) {\n      model.historicalDataUsageThisMonth = payload.historicalDataUsageThisMonth;\n    }\n    if (payload.historicalDataUsageLastMonth) {\n      model.historicalDataUsageLastMonth = payload.historicalDataUsageLastMonth;\n    }\n    if (payload.dataUsageToday) {\n      model.dataUsageToday = payload.dataUsageToday;\n    }\n    if (payload.historicalDataUsageDetails) {\n      model.details = payload.historicalDataUsageDetails;\n    }\n\n    if (Object.keys(model).length > 0) {\n      this.setState(model);\n    }\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    var firstDataPoint = \"\";\n    var secondDataPoint = \"\";\n    var thirdDataPoint = \"\";\n    var table = \"\";\n    var chart = \"\";\n\n    firstDataPoint = React.createElement(\n      CardDatapoint,\n      { theme: this.props.theme, unit: this.props.nls.resolve(\"StorageToday\") },\n      this.state.dataUsageToday\n    );\n\n    if (this.props.wrapper.height == 1) {\n      style = Object.assign({}, style, { paddingTop: \"15px\" });\n    } else {\n      style = Object.assign({}, style, { paddingTop: \"30px\" });\n    }\n    if (this.props.wrapper.height == 3) {\n      secondDataPoint = React.createElement(\n        CardDatapoint,\n        { theme: this.props.theme, minor: true, unit: this.props.nls.resolve(\"ThisMonth\") },\n        this.state.historicalDataUsageThisMonth\n      );\n      thirdDataPoint = React.createElement(\n        CardDatapoint,\n        { theme: this.props.theme, minor: true, unit: this.props.nls.resolve(\"PreviousMonth\") },\n        this.state.historicalDataUsageLastMonth\n      );\n    } else if (this.props.wrapper.width == 3) {\n      var data = [];\n      var details = this.state.details;\n      for (var i = details.length - 1; i >= 0 && i > details.length - 6; i--) {\n        var line = details[i];\n        var entry = [line.date, line.total + \" MB\"];\n        data.push(entry);\n      }\n      table = React.createElement(CardTable, {\n        theme: this.props.theme,\n        data: data,\n        header: [this.props.nls.resolve(\"Time\"), this.props.nls.resolve(\"StorageUsed\")]\n      });\n    } else if (this.props.wrapper.width == 4) {\n      chart = React.createElement(CardLineChart, {\n        theme: this.props.theme,\n        data: this.state.details,\n        showRange: true,\n        unit: 'MB'\n      });\n    }\n\n    return React.createElement(\n      'div',\n      { style: style },\n      firstDataPoint,\n      secondDataPoint,\n      thirdDataPoint,\n      table,\n      chart\n    );\n  }\n});\n\nmodule.exports = UsageStorageCard;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/CardDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardDatapoint.jsx\",\"../../common/components/CardFooter.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooter.jsx\",\"../../common/components/CardFooterDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooterDatapoint.jsx\",\"../../common/components/CardLineChart.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardLineChart.jsx\",\"../../common/components/CardTable.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardTable.jsx\",\"../../common/stores/IoTFUsageStore.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFUsageStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/Value.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar CardDatapoint = require('../../common/components/CardDatapoint.jsx');\nvar CardFooter = require('../../common/components/CardFooter.jsx');\nvar CardFooterDatapoint = require('../../common/components/CardFooterDatapoint.jsx');\nvar LineChart = require('../../common/components/LineChart.jsx');\nvar CardTable = require('../../common/components/CardTable.jsx');\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    padding: \"30px\"\n  },\n  empty: {\n    padding: \"20px\"\n  }\n};\n\nvar Value = React.createClass({\n  displayName: 'Value',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    demo: RPT.bool,\n    major: RPT.string,\n    plots: RPT.array\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      plots: [],\n      data: {}\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      value: null,\n      allData: []\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        IoTFDeviceStore.Actions.startPropertyWatch(plot.device, plot.event, plot.property);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  getPlot: function getPlot() {\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot.id == this.props.major) {\n        return plot;\n      }\n    }\n    // fallback\n    if (this.props.plots.length > 0) {\n      return this.props.plots[0];\n    } else {\n      return null;\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var major = this.getPlot();\n\n    var data = { timestamp: new Date().getTime() };\n    var found = false;\n    var count = 0;\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n          var property = IoTFDeviceStore.normalizeProperty(plot.property);\n          var obj = payload.deviceEvent.data[property];\n\n          if (obj !== undefined) {\n            data[plot.id] = obj;\n            found = true;\n          }\n        }\n      }\n    }\n    if (found) {\n      var model = Object.assign({}, data, { data: data });\n      if (data[major.id] !== undefined) {\n        var temp = {\n          timestamp: data.timestamp\n        };\n        temp[major.id] = data[major.id];\n        this.state.allData.push(temp);\n        model = Object.assign(model, { allData: this.state.allData });\n      }\n      this.setState(model);\n    }\n  },\n\n  render: function render() {\n    var plot = this.getPlot();\n    if (plot && this.state.data !== null) {\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n      var firstDataPoint = \"\";\n      var secondDataPoint = \"\";\n      var thirdDataPoint = \"\";\n      var table = \"\";\n      var chart = \"\";\n\n      if (this.state[plot.id] !== undefined) {\n        firstDataPoint = React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: plot.label },\n          plot.precision !== undefined ? this.state[plot.id].toFixed(plot.precision) : this.state[plot.id],\n          plot.unit ? \" \" + plot.unit : \"\"\n        );\n      }\n\n      if (this.props.wrapper.height == 1) {\n        style = Object.assign({}, style, { paddingTop: \"15px\" });\n      } else {\n        style = Object.assign({}, style, { paddingTop: \"30px\" });\n      }\n      if (this.props.wrapper.height == 3) {\n        var second = null;\n        var third = null;\n        for (var i in this.props.plots) {\n          var temp = this.props.plots[i];\n          if (temp != plot) {\n            if (!second) {\n              second = temp;\n            } else if (!third) {\n              third = temp;\n            } else {\n              break;\n            }\n          }\n        }\n        if (second && this.state[second.id] !== undefined) {\n          secondDataPoint = React.createElement(\n            CardDatapoint,\n            { theme: this.props.theme, unit: second.label },\n            second.precision !== undefined ? this.state[second.id].toFixed(second.precision) : this.state.value,\n            second.unit ? \" \" + second.unit : \"\"\n          );\n        }\n        if (third && this.state[third.id] !== undefined) {\n          thirdDataPoint = React.createElement(\n            CardDatapoint,\n            { theme: this.props.theme, unit: third.label },\n            third.precision !== undefined ? this.state[third.id].toFixed(third.precision) : this.state.value,\n            third.unit ? \" \" + third.unit : \"\"\n          );\n        }\n      } else if (this.props.wrapper.width == 3) {\n        var data = [];\n        var details = this.state.allData;\n        for (var j = details.length - 1; j >= 0 && j > details.length - 6; j--) {\n          var line = details[j];\n          var value = line[plot.id];\n          value = plot.precision !== undefined ? value.toFixed(plot.precision) : value;\n          var entry = [new Date(line.timestamp).toLocaleString(), value + \" \" + (plot.unit ? plot.unit : \"\")];\n          data.push(entry);\n        }\n        table = React.createElement(CardTable, {\n          theme: this.props.theme,\n          data: data,\n          header: [this.props.nls.resolve(\"Time\"), this.props.nls.resolve(\"Value\")]\n        });\n      } else if (this.props.wrapper.width == 4) {\n        if (this.state.data) {\n          chart = React.createElement(LineChart, {\n            theme: this.props.theme,\n            data: this.state.data\n            //initialData={this.state.data}\n            , plots: this.props.plots,\n            overview: true,\n            range: 60,\n            autoscroll: true,\n            stacked: false,\n            steps: false,\n            legend: false\n          });\n        }\n      }\n\n      return React.createElement(\n        'div',\n        { style: style },\n        firstDataPoint,\n        secondDataPoint,\n        thirdDataPoint,\n        table,\n        chart\n      );\n    } else {\n      if (!plot) {\n        return React.createElement(\n          'div',\n          { style: styles.empty },\n          'No data point defined'\n        );\n      } else {\n        return React.createElement(\n          'div',\n          { style: styles.empty },\n          React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n        );\n      }\n    }\n  }\n});\n\nmodule.exports = Value;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/CardDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardDatapoint.jsx\",\"../../common/components/CardFooter.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooter.jsx\",\"../../common/components/CardFooterDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooterDatapoint.jsx\",\"../../common/components/CardTable.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardTable.jsx\",\"../../common/components/LineChart.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LineChart.jsx\",\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/customization/BarChartProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar Utils = require('../dashboard/DashboardUtils.js');\nvar RPT = React.PropTypes;\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar Select = require('../../common/components/Select.jsx');\nvar SwitchBtn = require('../../common/components/SwitchBtn.jsx');\nvar Option = require('../../common/components/Option.jsx');\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n\n};\n\nvar BarChartProperties = React.createClass({\n  displayName: 'BarChartProperties',\n\n  propTypes: {\n    horizontal: RPT.bool,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      horizontal: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      horizontal: this.props.horizontal\n    };\n  },\n\n  onHorizontalChanged: function onHorizontalChanged(value) {\n    this.setState({\n      horizontal: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var updatedState = Object.assign({}, this.state, state);\n    this.setState(updatedState);\n  },\n\n  render: function render() {\n    var self = this;\n    var newProps = Object.assign({}, this.props, this.state);\n\n    return React.createElement(\n      'div',\n      { style: Object.assign({}, styles.container, this.props.style) },\n      React.createElement(\n        'table',\n        { style: styles.table },\n        React.createElement(\n          'tbody',\n          null,\n          React.createElement(\n            'tr',\n            null,\n            React.createElement(\n              'td',\n              null,\n              React.createElement(\n                Label,\n                { label: this.props.nls['Horizontal'], theme: this.props.theme },\n                React.createElement(SwitchBtn, { theme: this.props.theme, onChange: this.onHorizontalChanged, initialValue: !!this.state.horizontal, trueText: this.props.nls[\"Yes\"], falseText: this.props.nls[\"No\"] })\n              )\n            )\n          )\n        )\n      )\n    );\n  }\n});\n\nmodule.exports = BarChartProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\",\"../../common/components/SwitchBtn.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/SwitchBtn.jsx\",\"../dashboard/DashboardUtils.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/customization/GaugeProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar Utils = require('../dashboard/DashboardUtils.js');\nvar RPT = React.PropTypes;\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar Select = require('../../common/components/Select.jsx');\nvar Option = require('../../common/components/Option.jsx');\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  },\n\n  thresholdLabel: {\n    top: \"8px\",\n    position: \"relative\"\n  },\n  thresholdLabelLeft: {\n    position: \"relative\",\n    marginRight: \"10px\"\n  },\n  thresholdLabelRight: {\n    position: \"relative\",\n    marginLeft: \"10px\"\n  },\n  thresholdInput: {\n    display: \"inline-block\",\n    width: \"50px\",\n    height: \"24px\"\n  },\n  thresholdInputField: {\n    textAlign: \"right\"\n  },\n  tableData: {\n    verticalAlign: \"top\"\n  },\n  comboBoxCell: {\n    paddingTop: \"25px\"\n  }\n\n};\n\nvar GaugeProperties = React.createClass({\n  displayName: 'GaugeProperties',\n\n  propTypes: {\n    major: RPT.string,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  meanings: [\"NONE\", \"GOOD\", \"FAIR\", \"CRITICAL\"],\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      major: null,\n      lowerThresholdMeaning: \"NONE\",\n      middleThresholdMeaning: \"NONE\",\n      upperThresholdMeaning: \"NONE\"\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    var plot = this.getPlot();\n    if (plot) {\n      return {\n        major: plot ? plot.id : null,\n        lowerThresholdMeaning: this.props.lowerThresholdMeaning ? this.props.lowerThresholdMeaning : \"NONE\",\n        middleThresholdMeaning: this.props.middleThresholdMeaning ? this.props.middleThresholdMeaning : \"NONE\",\n        upperThresholdMeaning: this.props.upperThresholdMeaning ? this.props.upperThresholdMeaning : \"NONE\",\n        lowerThreshold: this.props.lowerThreshold !== undefined ? this.props.lowerThreshold : plot.min,\n        upperThreshold: this.props.upperThreshold !== undefined ? this.props.upperThreshold : plot.max\n      };\n    } else {\n      return {\n        major: null,\n        lowerThresholdMeaning: \"NONE\",\n        middleThresholdMeaning: \"NONE\",\n        upperThresholdMeaning: \"NONE\",\n        lowerThreshold: 0,\n        upperThreshold: 100\n      };\n    }\n  },\n\n  getPlot: function getPlot() {\n    if (this.state) {\n      for (var i in this.props.plots) {\n        var plot = this.props.plots[i];\n        if (plot.id == this.state.major) {\n          return plot;\n        }\n      }\n    }\n    // fallback\n    if (this.props.plots.length > 0) {\n      return this.props.plots[0];\n    } else {\n      return null;\n    }\n  },\n\n  initThresholds: function initThresholds(plotId) {\n    var plot = this.getPlot();\n    this.setState({\n      lowerThreshold: this.props.min,\n      upperThreshold: this.props.max,\n      lowerThresholdMeaning: this.props.lowerThresholdMeaning,\n      middleThresholdMeaning: this.props.middleThresholdMeaning,\n      upperThresholdMeaning: this.props.upperThresholdMeaning\n    });\n  },\n\n  onMajorChanged: function onMajorChanged(value) {\n    this.setState({\n      major: value\n    });\n    this.initThresholds();\n  },\n\n  onLowerThresholdChanged: function onLowerThresholdChanged(value) {\n    value = parseFloat(value);\n    this.setState({\n      lowerThreshold: value\n    });\n  },\n\n  onUpperThresholdChanged: function onUpperThresholdChanged(value) {\n    value = parseFloat(value);\n    this.setState({\n      upperThreshold: value\n    });\n  },\n\n  onLowerThresholdBlur: function onLowerThresholdBlur(value) {\n    value = parseFloat(value);\n    var plot = this.getPlot();\n    if (plot) {\n      if (value < plot.min) {\n        value = plot.min;\n      }\n      if (value > plot.max) {\n        value = plot.max;\n      }\n      if (value > this.state.upperThreshold) {\n        value = this.state.upperThreshold;\n      }\n      this.setState({\n        lowerThreshold: value\n      });\n    }\n  },\n\n  onUpperThresholdBlur: function onUpperThresholdBlur(value) {\n    value = parseFloat(value);\n    var plot = this.getPlot();\n    if (plot) {\n      if (value > plot.max) {\n        value = plot.max;\n      }\n      if (value < plot.min) {\n        value = plot.min;\n      }\n      if (value < this.state.lowerThreshold) {\n        value = this.state.lowerThreshold;\n      }\n      this.setState({\n        upperThreshold: value\n      });\n    }\n  },\n\n  onLowerThresholdMeaningChanged: function onLowerThresholdMeaningChanged(value) {\n    this.setState({\n      lowerThresholdMeaning: value\n    });\n  },\n\n  onMiddleThresholdMeaningChanged: function onMiddleThresholdMeaningChanged(value) {\n    this.setState({\n      middleThresholdMeaning: value\n    });\n  },\n\n  onUpperThresholdMeaningChanged: function onUpperThresholdMeaningChanged(value) {\n    this.setState({\n      upperThresholdMeaning: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var updatedState = Object.assign({}, this.state, state);\n    this.setState(updatedState);\n  },\n\n  render: function render() {\n    var self = this;\n\n    var newProps = Object.assign({}, this.props, this.state);\n    var range = parseInt(this.state.range, 10);\n    var plot = this.getPlot();\n\n    if (this.state && plot && plot.min !== undefined && plot.max !== undefined) {\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: this.props.nls['DataPoint'], theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onMajorChanged, value: plot.id },\n                    this.props.plots.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item.id, value: item.id, selected: plot.id == item.id },\n                        item.label\n                      );\n                    })\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { style: styles.tableData },\n                React.createElement(\n                  Label,\n                  { label: this.props.nls['LowerThreshold'], theme: this.props.theme },\n                  React.createElement(\n                    'span',\n                    { style: styles.thresholdLabelLeft },\n                    plot.min,\n                    ' ',\n                    plot.unit,\n                    ' to '\n                  ),\n                  React.createElement(\n                    'div',\n                    { style: styles.thresholdInput },\n                    React.createElement(InputField, { style: styles.thresholdInputField, theme: this.props.theme, type: 'number', min: plot.min, max: plot.max, onChange: this.onLowerThresholdChanged, onBlur: this.onLowerThresholdBlur, value: this.state.lowerThreshold, initialValue: this.state.lowerThreshold })\n                  ),\n                  React.createElement(\n                    'span',\n                    { style: styles.thresholdLabelRight },\n                    ' ',\n                    plot.unit\n                  )\n                )\n              ),\n              React.createElement(\n                'td',\n                { style: styles.comboBoxCell },\n                React.createElement(\n                  Select,\n                  { theme: this.props.theme, onChange: this.onLowerThresholdMeaningChanged, value: self.state.lowerThresholdMeaning },\n                  this.meanings.map(function (item) {\n                    return React.createElement(\n                      Option,\n                      { key: item, value: item, selected: self.state.lowerThresholdMeaning == item },\n                      self.props.nls.resolve(\"THRESHOLD_\" + item)\n                    );\n                  })\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { style: styles.tableData },\n                React.createElement(\n                  Label,\n                  { label: this.props.nls['Middle'], theme: this.props.theme },\n                  React.createElement(\n                    'span',\n                    { style: styles.thresholdLabel },\n                    this.state.lowerThreshold,\n                    ' ',\n                    plot.unit,\n                    ' to ',\n                    this.state.upperThreshold,\n                    ' ',\n                    plot.unit\n                  )\n                )\n              ),\n              React.createElement(\n                'td',\n                { style: styles.comboBoxCell },\n                React.createElement(\n                  Select,\n                  { theme: this.props.theme, onChange: this.onMiddleThresholdMeaningChanged, value: self.state.middleThresholdMeaning },\n                  this.meanings.map(function (item) {\n                    return React.createElement(\n                      Option,\n                      { key: item, value: item, selected: self.state.middleThresholdMeaning == item },\n                      self.props.nls.resolve(\"THRESHOLD_\" + item)\n                    );\n                  })\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { style: styles.tableData },\n                React.createElement(\n                  Label,\n                  { label: this.props.nls['UpperThreshold'], theme: this.props.theme },\n                  React.createElement(\n                    'div',\n                    { style: styles.thresholdInput },\n                    React.createElement(InputField, { style: styles.thresholdInputField, theme: this.props.theme, type: 'number', min: plot.min, max: plot.max, onChange: this.onUpperThresholdChanged, onBlur: this.onUpperThresholdBlur, value: this.state.upperThreshold, initialValue: this.state.upperThreshold })\n                  ),\n                  React.createElement(\n                    'span',\n                    { style: styles.thresholdLabelRight },\n                    ' ',\n                    plot.unit,\n                    ' to ',\n                    plot.max,\n                    ' ',\n                    plot.unit\n                  )\n                )\n              ),\n              React.createElement(\n                'td',\n                { style: styles.comboBoxCell },\n                React.createElement(\n                  Select,\n                  { theme: this.props.theme, onChange: this.onUpperThresholdMeaningChanged, value: self.state.upperThresholdMeaning },\n                  this.meanings.map(function (item) {\n                    return React.createElement(\n                      Option,\n                      { key: item, value: item, selected: self.state.upperThresholdMeaning == item },\n                      self.props.nls.resolve(\"THRESHOLD_\" + item)\n                    );\n                  })\n                )\n              )\n            )\n          )\n        )\n      );\n    } else if (plot) {\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: this.props.nls['DataPoint'], theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onMajorChanged, value: plot.id },\n                    this.props.plots.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item.id, value: item.id, selected: plot.id == item.id },\n                        item.label\n                      );\n                    })\n                  )\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = GaugeProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\",\"../dashboard/DashboardUtils.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/customization/RealTimeChartProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar Utils = require('../dashboard/DashboardUtils.js');\nvar RPT = React.PropTypes;\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar Select = require('../../common/components/Select.jsx');\nvar Option = require('../../common/components/Option.jsx');\nvar SwitchBtn = require('../../common/components/SwitchBtn.jsx');\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\",\n    borderCollapse: \"separate\",\n    borderSpacing: \"10px 0px\"\n  }\n\n};\n\nvar RealTimeChartProperties = React.createClass({\n  displayName: 'RealTimeChartProperties',\n\n  propTypes: {\n    range: RPT.number,\n    autoscroll: RPT.bool,\n    overview: RPT.bool,\n    stacked: RPT.bool,\n    steps: RPT.bool,\n    threshold: RPT.number,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      range: 60,\n      autoscroll: true,\n      overview: true,\n      stacked: false,\n      steps: false,\n      threshold: 300\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      range: this.props.range,\n      autoscroll: this.props.autoscroll,\n      overview: this.props.overview,\n      stacked: this.props.stacked,\n      steps: this.props.steps,\n      threshold: this.props.threshold\n    };\n  },\n\n  componentDidMount: function componentDidMount() {},\n\n  onRangeChanged: function onRangeChanged(value) {\n    this.setState({\n      range: value\n    });\n  },\n\n  onAutoscrollChanged: function onAutoscrollChanged(value) {\n    this.setState({\n      autoscroll: value\n    });\n  },\n\n  onOverviewChanged: function onOverviewChanged(value) {\n    this.setState({\n      overview: value\n    });\n  },\n\n  onStackedChanged: function onStackedChanged(value) {\n    this.setState({\n      stacked: value\n    });\n  },\n\n  onStepsChanged: function onStepsChanged(value) {\n    this.setState({\n      steps: value\n    });\n  },\n\n  onThresholdChanged: function onThresholdChanged(value) {\n    this.setState({\n      threshold: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var updatedState = Object.assign({}, this.state, state);\n    this.setState(updatedState);\n  },\n\n  render: function render() {\n    var self = this;\n    var newProps = Object.assign({}, this.props, this.state);\n    var range = parseInt(this.state.range, 10);\n    var threshold = parseInt(this.state.threshold, 10);\n\n    return React.createElement(\n      'div',\n      { style: Object.assign({}, styles.container, this.props.style) },\n      React.createElement(\n        'table',\n        { style: styles.table },\n        React.createElement(\n          'tbody',\n          null,\n          React.createElement(\n            'tr',\n            null,\n            React.createElement(\n              'td',\n              null,\n              React.createElement(\n                Label,\n                { label: this.props.nls['WindowSize'], theme: this.props.theme },\n                React.createElement(\n                  Select,\n                  { onChange: this.onRangeChanged, value: \"\" + range },\n                  React.createElement(\n                    Option,\n                    { value: '60', selected: range == 60 },\n                    '1 minute'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '300', selected: range == 300 },\n                    '5 minutes'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '600', selected: range == 600 },\n                    '10 minutes'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '900', selected: range == 900 },\n                    '15 minutes'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '1800', selected: range == 1800 },\n                    '30 minutes'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '3600', selected: range == 3600 },\n                    '60 minutes'\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'td',\n              null,\n              React.createElement(\n                Label,\n                { label: this.props.nls['KeepDataFor'], theme: this.props.theme },\n                React.createElement(\n                  Select,\n                  { onChange: this.onThresholdChanged, value: \"\" + threshold },\n                  React.createElement(\n                    Option,\n                    { value: '60', selected: threshold == 60 },\n                    '1 minute'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '300', selected: threshold == 300 },\n                    '5 minutes'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '600', selected: threshold == 600 },\n                    '10 minutes'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '900', selected: threshold == 900 },\n                    '15 minutes'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '1200', selected: threshold == 1200 },\n                    '20 minutes'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '1800', selected: threshold == 1800 },\n                    '30 minutes'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '2700', selected: threshold == 2700 },\n                    '40 minutes'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '3000', selected: threshold == 3000 },\n                    '50 minutes'\n                  ),\n                  React.createElement(\n                    Option,\n                    { value: '3600', selected: threshold == 3600 },\n                    '60 minutes'\n                  )\n                )\n              )\n            )\n          ),\n          React.createElement(\n            'tr',\n            null,\n            React.createElement(\n              'td',\n              null,\n              React.createElement(\n                Label,\n                { label: this.props.nls['Stacked'], theme: this.props.theme },\n                React.createElement(SwitchBtn, { theme: this.props.theme, onChange: this.onStackedChanged, initialValue: !!this.state.stacked, trueText: 'Yes', falseText: 'No' })\n              )\n            ),\n            React.createElement(\n              'td',\n              null,\n              React.createElement(\n                Label,\n                { label: this.props.nls['Steps'], theme: this.props.theme },\n                React.createElement(SwitchBtn, { theme: this.props.theme, onChange: this.onStepsChanged, initialValue: !!this.state.steps, trueText: 'Yes', falseText: 'No' })\n              )\n            )\n          ),\n          React.createElement(\n            'tr',\n            null,\n            React.createElement(\n              'td',\n              null,\n              React.createElement(\n                Label,\n                { label: this.props.nls['EnableAutoscroll'], theme: this.props.theme },\n                React.createElement(SwitchBtn, { theme: this.props.theme, onChange: this.onAutoscrollChanged, initialValue: !!this.state.autoscroll, trueText: 'Yes', falseText: 'No' })\n              )\n            ),\n            React.createElement(\n              'td',\n              null,\n              React.createElement(\n                Label,\n                { label: this.props.nls['ShowOverview'], theme: this.props.theme },\n                React.createElement(SwitchBtn, { theme: this.props.theme, onChange: this.onOverviewChanged, initialValue: !!this.state.overview, trueText: 'Yes', falseText: 'No' })\n              )\n            )\n          )\n        )\n      )\n    );\n  }\n});\n\nmodule.exports = RealTimeChartProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\",\"../../common/components/SwitchBtn.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/SwitchBtn.jsx\",\"../dashboard/DashboardUtils.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/customization/SingleValueProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar Utils = require('../dashboard/DashboardUtils.js');\nvar RPT = React.PropTypes;\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar Select = require('../../common/components/Select.jsx');\nvar Option = require('../../common/components/Option.jsx');\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n\n};\n\nvar SingleValueProperties = React.createClass({\n  displayName: 'SingleValueProperties',\n\n  propTypes: {\n    major: RPT.string,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      major: null\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      major: this.props.major\n    };\n  },\n\n  onMajorChanged: function onMajorChanged(value) {\n    this.setState({\n      major: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var updateState = Object.assign({}, this.state, state);\n    this.setState(updateState);\n  },\n\n  render: function render() {\n    var self = this;\n    var newProps = Object.assign({}, this.props, this.state);\n    var range = parseInt(this.state.range, 10);\n\n    return React.createElement(\n      'div',\n      { style: Object.assign({}, styles.container, this.props.style) },\n      React.createElement(\n        'table',\n        { style: styles.table },\n        React.createElement(\n          'tbody',\n          null,\n          React.createElement(\n            'tr',\n            null,\n            React.createElement(\n              'td',\n              null,\n              React.createElement(\n                Label,\n                { label: this.props.nls['DataPoint'], theme: this.props.theme },\n                React.createElement(\n                  Select,\n                  { onChange: this.onMajorChanged, value: self.props.major },\n                  this.props.plots.map(function (item) {\n                    return React.createElement(\n                      Option,\n                      { value: item.id, selected: self.props.major == item.id },\n                      item.label\n                    );\n                  })\n                )\n              )\n            ),\n            React.createElement('td', null)\n          )\n        )\n      )\n    );\n  }\n});\n\nmodule.exports = SingleValueProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\",\"../dashboard/DashboardUtils.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\n\nmodule.exports = Reflux.createActions(['loadConfig', 'loadDashboard', 'getComponents', 'storeLayouts', 'undo', 'expandCard', 'shrinkCard', 'setBreakpoint', 'customAction', 'addComponent', 'moveComponent', 'showDialogConfigSSO', 'showDialogSSOSignIn', 'showDialogAAAUserDetails', 'showDialogAddMember', 'showDialogLogin', 'submitSSOSignInData', 'submitAAAUserDetailsData', 'submitAddMemberData', 'submitLoginData', 'submitSSOData', 'showDialog', 'showConfigureComponent', 'configureComponent', 'getCategories', 'closeDialog', 'getComponent', 'deviceUpdated', 'removeComponent', 'notify', 'navigateRoute', 'addDashboard', 'removeDashboard', 'changeCardSize']);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/ComponentCustomization.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar DashboardStore = require('./DashboardStore');\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar Actions = require('./Actions.jsx');\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\nvar IconLink = require('../../common/components/IconLink.jsx');\nvar ColorSelection = require('../../common/components/ColorSelection.jsx');\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar CustomizationWizard = require('./CustomizationWizard.jsx');\n\nvar RPT = React.PropTypes;\n\nvar ComponentCustomization = React.createClass({\n  displayName: 'ComponentCustomization',\n\n  propTypes: {\n    id: RPT.string,\n    action: RPT.string,\n    type: RPT.string,\n    style: RPT.object,\n    nls: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      id: null,\n      type: name,\n      action: null\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {};\n  },\n\n  componentDidMount: function componentDidMount() {\n    DashboardStore.listen(this.onModelUpdate);\n    IoTFDeviceStore.listen(this.onModelUpdate);\n    IoTFDeviceStore.Actions.fetchDevices();\n    console.log(this.props.id, this.props.type);\n    Actions.getComponent({ id: this.props.id, type: this.props.type });\n    Actions.getCategories();\n  },\n\n  onModelUpdate: function onModelUpdate(payload) {\n    var model = {};\n    if (payload.component) {\n      model.component = payload.component;\n      if (!this.state.devices || this.state.devices.length === 0) {\n        model.devices = this.createDeviceListForPlots(payload.component);\n      }\n    }\n    if (payload.devices) {\n      var devices = this.setSelectionInDevices(payload.devices);\n      model.devices = devices;\n    }\n    if (payload.categories) {\n      model.categories = payload.categories;\n    }\n    if (Object.keys(model).length > 0) {\n      this.setState(model);\n    }\n  },\n\n  onChangeType: function onChangeType(type) {\n    Actions.getComponent({ id: this.props.id, type: type.name });\n  },\n\n  onSubmit: function onSubmit() {\n    var parameters = Object.assign({}, this.state.component.parameters, this.customElement.state);\n    var payload = {\n      id: this.props.id,\n      type: this.state.component.name,\n      parameters: parameters\n    };\n    console.log(\"WRAPPER PAYLOAD\", payload);\n    //Actions.configureComponent(payload);\n  },\n\n  onCustomMounted: function onCustomMounted(element) {\n    this.customElement = element;\n  },\n\n  setSelectionInDevices: function setSelectionInDevices(devices) {\n    var result = [];\n    var dataSets = this.state.component.parameters.plots ? this.state.component.parameters.plots : [];\n    for (var i in devices) {\n      var device = devices[i];\n      var found = false;\n      for (var t in dataSets) {\n        var dSet = dataSets[t];\n        if (dSet.device == device.deviceId) {\n          result.push({ id: device.deviceId, type: device.typeId, active: true });\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        result.push({ id: device.deviceId, type: device.typeId, active: false });\n      }\n    }\n    return result;\n  },\n\n  // create a device list before we have the result of the devices call\n  createDeviceListForPlots: function createDeviceListForPlots(component) {\n    if (!component) {\n      component = this.state.component;\n    }\n    var result = [];\n    var dataSets = component.parameters.plots ? component.parameters.plots : [];\n    var device;\n    var fnct = function fnct(item) {\n      return item.id == device.id;\n    };\n    for (var i in dataSets) {\n      device = dataSets[i];\n      var found = result.filter(fnct);\n      if (found.length === 0) {\n        result.push({ id: device.device, type: \"\", active: true });\n      }\n    }\n    return result;\n  },\n\n  render: function render() {\n\n    var self = this;\n    var component = null;\n    if (this.state.component) {\n      component = this.state.component;\n      var customization = \"\";\n\n      customization = CustomizationWizard;\n\n      customization = React.createElement(customization, Object.assign({}, { component: component }, { devices: this.state.devices, onChangeType: this.onChangeType, categories: this.state.categories, scheme: component.parameters.scheme, title: component.parameters.title, id: this.props.id, onSubmit: this.onSubmit, onCancel: this.onCancel, ref: this.onCustomMounted, nls: this.props.nls, theme: this.props.theme }));\n\n      return customization;\n    } else {\n      return React.createElement('div', null);\n      //return (<DashboardDialog theme={this.props.theme}>No components found</DashboardDialog>);\n    }\n  }\n});\n\nmodule.exports = ComponentCustomization;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/ColorSelection.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/ColorSelection.jsx\",\"../../common/components/IconLink.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/IconLink.jsx\",\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\",\"./Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"./CustomizationWizard.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/CustomizationWizard.jsx\",\"./DashboardStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/CustomizationWizard.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactWrapper = require('./ReactWrapper.jsx');\nvar Const = require('../util/Const');\nvar DashboardStore = require('./DashboardStore');\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar Actions = require('./Actions.jsx');\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\nvar IconLink = require('../../common/components/IconLink.jsx');\nvar DashboardDialog = require('../../Dialog/Dialog.jsx');\nvar Dialog = DashboardDialog.Dialog;\nvar DialogTab = DashboardDialog.DialogTab;\nvar ButtonTab = DashboardDialog.ButtonTab;\nvar DialogButtons = DashboardDialog.DialogButtons;\nvar ColorSelection = require('../../common/components/ColorSelection.jsx');\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar Select = require('../../common/components/Select.jsx');\nvar Option = require('../../common/components/Option.jsx');\nvar ComboBox = require('../../common/components/ComboBox.jsx');\nvar CheckBox = require('../../common/components/CheckBox.jsx');\nvar Utils = require('../util/Utils.js');\nvar SearchField = require('../../common/components/SearchField.jsx');\nvar Accordion = require('../../common/components/Accordion.jsx');\nvar GalleryAccordion = require('../../common/components/GalleryAccordion.jsx');\nvar CardGalleryItem = require('../../common/components/CardGalleryItem.jsx');\nvar Icon = require('../../common/components/Icon.jsx');\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  componentHeader: {\n    fontSize: '18px',\n    marginTop: '5px',\n    marginBottom: '5px',\n    float: 'left'\n  },\n  componentDescription: {\n    fontSize: '14px',\n    clear: 'left'\n  },\n  componentThumbnail: {\n    width: '120px',\n    marginBottom: '15px',\n    marginTop: '15px',\n    float: 'right',\n    marginLeft: '20px'\n  },\n  inlineButtons: {\n    clear: 'both',\n    marginBottom: '15px'\n  },\n  td: {\n    padding: '5px 30px 5px 5px'\n  },\n  th: {\n    padding: '5px 30px 5px 5px',\n    textAlign: 'left'\n  },\n  headerTr: {},\n  categoryTitle: {\n    clear: 'both',\n    fontWeight: '600'\n  },\n  twoFieldContainer: {\n    position: 'relative'\n  },\n  twoFieldsLeft: {\n    width: '45%'\n  },\n  twoFieldsRight: {\n    width: '45%',\n    position: 'absolute',\n    right: '0px',\n    top: '0px'\n  },\n  typeSelectionContainer: {\n    width: '100%',\n    height: '74px',\n    whiteSpace: 'nowrap',\n    overflowX: 'auto'\n  },\n  typeSelectionTile: {\n    width: '64px',\n    height: '64px',\n    position: 'relative',\n    padding: '16px',\n    display: 'inline-block',\n    boxSizing: 'border-box',\n    margin: '5px',\n    transition: 'background 0.3s ease',\n    cursor: 'pointer'\n  },\n  typeSelectionImage: {\n    width: '32px',\n    height: '32px',\n    display: 'block',\n    position: 'relative',\n    transition: 'background 0.3s ease'\n  },\n  typeSelectionMarker: {\n    position: 'relative',\n    bottom: '-3px',\n    transition: 'opacity 0.3s ease'\n  },\n  cardPreviewSeparator: {\n    borderTop: '3px solid blue',\n    width: '585px',\n    position: 'absolute',\n    left: '-35px',\n    height: '340px',\n    backgroundColor: 'whitesmoke'\n  },\n  cardPreview: {\n    width: '100%',\n    height: '265px',\n    position: 'relative',\n    overflow: 'hidden'\n  },\n  previewContainer: {\n    transformOrigin: '0% 0%',\n    position: 'relative',\n    outlineOffset: '20px'\n  },\n  previewCover: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    zIndex: 1,\n    top: 0,\n    left: 0\n  },\n  customFieldsContainer: {\n    width: '470px',\n    padding: '10px',\n    height: '100%',\n    overflowY: 'auto'\n  },\n  cardTabContainer: {\n    borderBottom: '1px solid silver',\n    fontSize: '16px',\n    margin: '10px 0px',\n    cursor: 'pointer',\n    position: 'relative'\n  },\n  cardTab: {\n    padding: '10px 20px',\n    display: 'inline-block'\n  },\n  cardTabSelected: {\n    borderBottom: '3px solid blue',\n    color: 'blue'\n  },\n  cardTabCheckmark: {\n    marginLeft: '10px'\n  }\n\n};\n\nvar CustomizationWizard = React.createClass({\n  displayName: 'CustomizationWizard',\n\n  propTypes: {\n    id: RPT.string,\n    component: RPT.object,\n    categories: RPT.object,\n    onSubmit: RPT.func,\n    onChangeType: RPT.func,\n    onUpdate: RPT.func,\n    scheme: RPT.number,\n    title: RPT.string,\n    style: RPT.object,\n    nls: RPT.object,\n    theme: RPT.object.isRequired,\n    devices: RPT.array\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      id: null,\n      title: '',\n      scheme: 1\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      title: this.props.title,\n      description: this.props.component.parameters.description,\n      color: this.props.component.parameters.color,\n      component: this.props.component,\n      plots: this.props.component.parameters.plots || [],\n      devices: this.props.devices ? this.props.devices : [],\n      categories: this.props.categories,\n      cardTab: '' + this.props.component.parameters.size[DashboardStore.getBreakpoint()], // only the preview tabs\n      visibleTab: '' + this.props.component.parameters.size[DashboardStore.getBreakpoint()] // all tabs including settings\n    };\n    this.startListeningToEvents();\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(props) {\n    console.log(\"componentWillReceiveProps----------------------------\", props);\n    if (props.devices) {\n      this.setState({ devices: props.devices });\n    }\n    if (props.categories) {\n      this.setState({ categories: props.categories });\n    }\n    var component = Object.assign({}, this.state.component);\n    // clear the customization\n    component.customization = undefined;\n    Object.assign(component, props.component);\n    component.parameters.plots = this.state.plots;\n\n    this.setState({\n      component: component,\n      cardTab: '' + component.parameters.size[DashboardStore.getBreakpoint()],\n      visibleTab: '' + component.parameters.size[DashboardStore.getBreakpoint()]\n    });\n    if (props.component.parameters.color) {\n      this.setState({ color: props.component.parameters.color });\n    }\n\n    this.startListeningToEvents();\n  },\n\n  onChangeType: function onChangeType(name) {\n    this.props.onChangeType(name);\n  },\n\n  startListeningToEvents: function startListeningToEvents() {\n    if (!this.listeningToDevices) {\n      this.listeningToDevices = [];\n    }\n    if (this.state && this.state.devices) {\n      for (var i in this.state.devices) {\n        var device = this.state.devices[i];\n        if (device.active && !this.alreadyListeningToDevice(device.id)) {\n          IoTFDeviceStore.Actions.startDeviceWatch(device.id);\n          this.listeningToDevices.push(device.id);\n        }\n      }\n    }\n  },\n\n  alreadyListeningToDevice: function alreadyListeningToDevice(id) {\n    return this.listeningToDevices.indexOf(id) > -1;\n  },\n\n  stopListeningToEvents: function stopListeningToEvents() {\n    if (this.listeningToDevices) {\n      for (var i in this.listeningToDevices) {\n        var device = this.listeningToDevices[i];\n        IoTFDeviceStore.Actions.stopDeviceWatch(device);\n      }\n    }\n  },\n\n  onSubmit: function onSubmit() {\n    this.stopListeningToEvents();\n\n    var parameters = Object.assign({}, this.state.component.parameters, { title: this.state.title, description: this.state.description, color: this.state.color, plots: this.state.plots });\n    if (this.customElement) {\n      parameters = Object.assign({}, parameters, this.customElement.state);\n    }\n    var size = 0;\n    if (parseInt(this.state.cardTab) > this.state.component.sizes.length - 1) {\n      size = 0;\n    } else {\n      size = parseInt(this.state.cardTab);\n    }\n    var payload = {\n      id: this.props.id,\n      type: parameters.component,\n      parameters: parameters,\n      size: size\n    };\n    if (this.props.id === null) {\n      Actions.addComponent(null, payload);\n    } else {\n      Actions.configureComponent(payload);\n    }\n  },\n\n  onCancel: function onCancel() {\n    this.stopListeningToEvents();\n  },\n\n  onParamUpdate: function onParamUpdate(update) {\n    var newParams = Object.assign({}, this.state.component.parameters, update);\n    var newComp = Object.assign({}, this.state.component, { parameters: newParams });\n    this.setState({ component: newComp });\n  },\n\n  onTitleChanged: function onTitleChanged(newTitle) {\n    this.onParamUpdate({ title: newTitle });\n    this.setState({\n      title: newTitle\n    });\n    if (this.props.onUpdate) {\n      this.props.onUpdate({ title: title });\n    }\n  },\n\n  onDescriptionChanged: function onDescriptionChanged(desc) {\n    this.onParamUpdate({ description: desc });\n    this.setState({\n      description: desc\n    });\n    if (this.props.onUpdate) {\n      this.props.onUpdate({ desc: desc });\n    }\n  },\n\n  onSchemeChanged: function onSchemeChanged(color) {\n    this.onParamUpdate({ color: color });\n    this.setState({\n      color: color\n    });\n    if (this.props.onUpdate) {\n      this.props.onUpdate({ color: color });\n    }\n  },\n\n  onCardTypeChanged: function onCardTypeChanged(newCompType) {\n    this.props.onChangeType(newCompType);\n    this.onParamUpdate({ component: newCompType.name });\n    if (this.props.onUpdate) {\n      this.props.onUpdate({ cardType: newCompType });\n    }\n  },\n\n  onDataSetChange: function onDataSetChange(payload) {\n    var dataSets = this.state.plots;\n    var newSets = [];\n    dataSets.forEach(function (dSet) {\n      if (dSet.id === payload.id) {\n        var newSet = Object.assign({}, dSet);\n        newSet[payload.type] = payload.value;\n        newSets.push(newSet);\n      } else {\n        newSets.push(dSet);\n      }\n    });\n    this.setState({ plots: newSets });\n  },\n\n  onAddPlot: function onAddPlot(type) {\n    var currPlots = this.state.plots;\n    var emptyPlot = {\n      'id': Utils.createUUID(),\n      'device': type,\n      'event': '',\n      'property': '',\n      'unit': '',\n      'type': 'string',\n      'label': 'New DataSet'\n    };\n    this.setState({\n      plots: currPlots.concat([emptyPlot]),\n      expandedDataPoint: emptyPlot.id,\n      expandedCardTypeCategory: ''\n    });\n  },\n\n  onRemovePlot: function onRemovePlot(id) {\n    var plots = this.state.plots;\n    for (var i = 0; i < plots.length; i++) {\n      var plot = plots[i];\n      if (plot.id == id) {\n        plots.splice(i, 1);\n        this.setState({\n          plots: plots\n        });\n      }\n    }\n  },\n\n  onDeviceSelection: function onDeviceSelection(dev) {\n    console.log('TODO', dev);\n  },\n\n  changeDeviceSourceStatus: function changeDeviceSourceStatus(name, val) {\n    var newSources = this.state.devices.map(function (dev) {\n      if (dev.id === name) {\n        dev.active = val;\n        return dev;\n      } else {\n        return dev;\n      }\n    });\n    this.setState({ devices: newSources });\n    var self = this;\n    setTimeout(function () {\n      self.startListeningToEvents();\n    }, 1);\n  },\n\n  onDataSourceSearchChanged: function onDataSourceSearchChanged(value) {\n    this.setState({\n      dataSetFilter: value\n    });\n  },\n\n  onExpand: function onExpand(id) {\n    this.setState({\n      expandedDataPoint: id\n    });\n  },\n\n  generatePreviewComponent: function generatePreviewComponent(size) {\n    var card = '';\n    if (this.state.component) {\n      var result = this.state.component;\n      var layout = {\n        width: size[0],\n        height: size[1]\n      };\n      card = React.createElement(ReactWrapper, { theme: this.props.theme, nls: this.props.nls, module: result.module, category: 'Devices', id: result.id, parameters: result.parameters, sticky: true, type: result.name, layout: 'lg', width: layout.width, height: layout.height });\n    }\n    return card;\n  },\n\n  onCustomMounted: function onCustomMounted(element) {\n    // Not a nice solution it would be better to get the change from inside the customization dialog\n    // this approach gets it from the outside\n    if (element !== null) {\n      this.customElement = element;\n      this.setState({ customElement: element });\n    } else {\n      this.setState({ customElement: this.customElement });\n    }\n  },\n\n  applyTheme: function applyTheme() {\n    var theme = this.props.theme;\n    Object.assign(styles.cardTabContainer, { borderBottomColor: theme.minor });\n    Object.assign(styles.cardTabSelected, { borderBottomColor: theme.accent }, { color: theme.accent });\n    Object.assign(styles.cardPreviewSeparator, { borderTopColor: theme.accent });\n  },\n\n  render: function render() {\n    this.applyTheme();\n    var self = this;\n    var cardTitle = this.state.title;\n    var cardDescription = this.state.description;\n    var description = '';\n    var plots = [{ id: 'No data points yet' }];\n    var cardType = '';\n    var colorScheme = this.state.color;\n\n    if (this.state.component) {\n      if (this.state.component.parameters) {\n        description = this.state.component.parameters.description;\n        plots = this.state.plots;\n        cardType = this.state.component.name;\n        colorScheme = this.state.component.parameters.color;\n        // make sure we have the plots assigend if this is a new card\n        this.state.component.parameters.plots = this.state.plots;\n      }\n\n      var cardTypes = [];\n      if (this.state.categories) {\n        cardTypes = this.state.categories.Devices;\n      }\n\n      var devices = this.state.devices;\n      var filteredDevices = this.state.devices.filter(function (item) {\n        return !self.state.dataSetFilter || item.id.toLowerCase().indexOf(self.state.dataSetFilter.toLowerCase()) > -1;\n      });\n\n      // handle custom fields per card type\n      var component = this.state.component;\n      var customization;\n      if (component.customization) {\n        var customization = null;\n        if (component.module) {\n          //  new way to specify the module instead of adding it to IoTCustomization object\n          customization = IoTFComponents[component.module];\n        }\n        if (!customization) {\n          // old way to add classes to IoTCustomization\n          customization = IoTCustomization;\n        }\n        var componentTokens = component.customization.split('.');\n        for (var i in componentTokens) {\n          customization = customization[componentTokens[i]];\n        }\n        if (customization) {\n          customization = React.createElement(customization, Object.assign({}, component.parameters, { key: 'SETTINGS', ref: this.onCustomMounted, nls: this.props.nls, theme: this.props.theme, style: styles.customFieldsContainer }, this.state.customElement ? this.state.customElement.state : {}));\n        } else {\n          customization = '';\n          this.customElement = undefined;\n        }\n      } else {\n        customization = '';\n        this.customElement = undefined;\n      }\n\n      var cardTabs = [];\n      if (customization) {\n        cardTabs.push({\n          id: '###SETTINGS###',\n          label: this.props.nls[\"Settings\"],\n          onClick: function onClick() {\n            self.setState({\n              visibleTab: '###SETTINGS###'\n            });\n          }\n        });\n      }\n      var availableSizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL', 'XXL'];\n      var counter = 1;\n      for (var i = 0; i < component.sizes.length; i++) {\n        var size = component.sizes[i];\n        var label = '';\n        if (size[1] == 1 && size[0] == 1) {\n          counter = 0;\n        }\n        label += availableSizes[counter];\n        counter++;\n\n        var getOnClick = function getOnClick(k) {\n          return function () {\n            self.setState({\n              cardTab: k,\n              visibleTab: k\n            });\n          };\n        };\n\n        cardTabs.push({\n          id: i,\n          label: label,\n          size: size,\n          onClick: getOnClick(i)\n        });\n      }\n\n      var highlight = component.parameters.size[DashboardStore.getBreakpoint()];\n\n      var categoryGallery = '';\n\n      if (this.props.categories) {\n        categoryGallery = React.createElement(\n          'div',\n          null,\n          Object.keys(self.props.categories).map(function (category) {\n            return React.createElement(\n              'div',\n              { key: category },\n              React.createElement(\n                GalleryAccordion,\n                { theme: self.props.theme, key: category, id: category, label: category, selected: self.state.component.name },\n                self.props.categories[category].map(function (cardTypeItem) {\n                  console.log(self.state.component.name);\n                  return React.createElement(CardGalleryItem, { key: cardTypeItem.name, item: cardTypeItem, nls: self.props.nls, theme: self.props.theme, selected: cardTypeItem.name === self.state.component.name, onClick: self.onCardTypeChanged });\n                })\n              )\n            );\n          })\n        );\n      };\n\n      //\n      // CARD SOURCE DATA TAB\n      //\n      var dataPointsTab = null;\n      var dataPointsSubTabs = null;\n      var availableSources = '';\n\n      // Check if devices are already available, if not show loading indicator\n      if (filteredDevices.length > 0) {\n        availableSources = React.createElement(\n          'table',\n          null,\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              { key: 'header' },\n              React.createElement('th', { key: 'h1', style: styles.th }),\n              React.createElement(\n                'th',\n                { key: 'h2', style: styles.th },\n                this.props.nls.resolve('DeviceID')\n              ),\n              React.createElement(\n                'th',\n                { key: 'h3', style: styles.th },\n                this.props.nls.resolve('DeviceType')\n              )\n            ),\n            filteredDevices.map(function (option) {\n              var updateSourceUse = function updateSourceUse(isUsed) {\n                if (isUsed) {\n                  self.changeDeviceSourceStatus(option.id, true);\n                } else {\n                  self.changeDeviceSourceStatus(option.id, false);\n                }\n              };\n              return React.createElement(\n                'tr',\n                { key: option.id },\n                React.createElement(\n                  'td',\n                  { key: 'd1', style: styles.td },\n                  React.createElement(CheckBox, { theme: self.props.theme, checked: option.active, onChange: updateSourceUse })\n                ),\n                React.createElement(\n                  'td',\n                  { key: 'd2', style: styles.td },\n                  option.id\n                ),\n                React.createElement(\n                  'td',\n                  { key: 'd3', style: styles.td },\n                  option.type\n                )\n              );\n            })\n          )\n        );\n      } else {\n        availableSources = React.createElement(LoadIndicator, { theme: this.props.theme });\n      }\n\n      if (this.state.component.cardType.indexOf(Const.NO_DATAPOINTS) === -1) {\n        dataPointsTab = React.createElement(\n          DialogTab,\n          { id: 'CardSourceData', key: 'CardSourceData', theme: self.props.theme, label: self.props.nls[\"SourceData\"], description: self.props.nls[\"SourceDataExpl\"], status: 'active' },\n          React.createElement(\n            Label,\n            { label: this.props.nls.resolve('SearchDataSource'), theme: this.props.theme },\n            React.createElement(SearchField, { theme: this.props.theme, onChange: this.onDataSourceSearchChanged })\n          ),\n          availableSources\n        );\n\n        dataPointsSubTabs = devices.map(function (dev) {\n          if (dev.active) {\n            var dSetCount = 0;\n            var onAddPlot = function onAddPlot() {\n              self.onAddPlot(dev.id);\n            };\n            return React.createElement(\n              DialogTab,\n              { subtab: 1, status: 'active', key: dev.id, id: dev.id, onRemove: self.onRemovePlot, theme: self.props.theme, nls: self.props.nls, label: dev.id, description: self.props.nls[\"ConnectDataSet\"] },\n              plots !== undefined ? plots.map(function (item) {\n                var name = item.label ? item.label : '';\n                var event = item.event ? item.event : '';\n                var property = item.property ? item.property : '';\n                var type = item.type ? item.type : 'string';\n                var unit = item.unit ? item.unit : '';\n                var minVal = item.min !== undefined ? item.min : '';\n                var maxVal = item.max !== undefined ? item.max : '';\n                var precision = item.precision ? item.precision : '';\n\n                // get some suggestions for event and property\n                var cache = IoTFDeviceStore.getCache();\n                var eventSuggestions = cache[dev.id];\n                var propertySuggestions = [];\n                if (eventSuggestions) {\n                  eventSuggestions = Object.keys(eventSuggestions);\n                  propertySuggestions = cache[dev.id][event];\n                  if (propertySuggestions) {\n                    propertySuggestions = Object.keys(propertySuggestions);\n                  } else {\n                    propertySuggestions = [];\n                  }\n                } else {\n                  eventSuggestions = [];\n                }\n\n                eventSuggestions.sort();\n                propertySuggestions.sort();\n\n                var onNameChange = function onNameChange(newVal) {\n                  self.onDataSetChange({ id: item.id, type: 'label', value: newVal });\n                };\n                var onEventChange = function onEventChange(newVal) {\n                  self.onDataSetChange({ id: item.id, type: 'event', value: newVal });\n                };\n                var onPropertyChange = function onPropertyChange(newVal) {\n                  self.onDataSetChange({ id: item.id, type: 'property', value: newVal });\n                };\n                var onTypeChange = function onTypeChange(newVal) {\n                  self.onDataSetChange({ id: item.id, type: 'type', value: newVal });\n                };\n                var onUnitChange = function onUnitChange(newVal) {\n                  self.onDataSetChange({ id: item.id, type: 'unit', value: newVal });\n                };\n                var onMinValChange = function onMinValChange(newVal) {\n                  self.onDataSetChange({ id: item.id, type: 'min', value: parseFloat(newVal) });\n                };\n                var onMaxValChange = function onMaxValChange(newVal) {\n                  self.onDataSetChange({ id: item.id, type: 'max', value: parseFloat(newVal) });\n                };\n                var onPrecisionChange = function onPrecisionChange(newVal) {\n                  self.onDataSetChange({ id: item.id, type: 'precision', value: parseInt(newVal, 10) });\n                };\n                if (dev.id === item.device) {\n                  var minMaxElement = '';\n                  var precisionElement = '';\n                  var unitElement = '';\n\n                  if (type == 'integer' || type == 'float') {\n                    minMaxElement = React.createElement(\n                      'div',\n                      { style: styles.twoFieldContainer },\n                      React.createElement(\n                        'div',\n                        { style: styles.twoFieldsLeft },\n                        React.createElement(\n                          Label,\n                          { style: styles.twoFields, label: self.props.nls.resolve('CUST_DATASET_minValue'), theme: self.props.theme },\n                          React.createElement(InputField, { type: 'number', theme: self.props.theme, onChange: onMinValChange, initialValue: minVal })\n                        )\n                      ),\n                      React.createElement(\n                        'div',\n                        { style: styles.twoFieldsRight },\n                        React.createElement(\n                          Label,\n                          { style: styles.twoFields, label: self.props.nls.resolve('CUST_DATASET_maxValue'), theme: self.props.theme },\n                          React.createElement(InputField, { type: 'number', theme: self.props.theme, onChange: onMaxValChange, initialValue: maxVal })\n                        )\n                      )\n                    );\n                  }\n                  if (type == 'float') {\n                    precisionElement = React.createElement(\n                      Label,\n                      { label: self.props.nls.resolve('CUST_DATASET_precision'), theme: self.props.theme },\n                      React.createElement(InputField, { type: 'number', theme: self.props.theme, onChange: onPrecisionChange, initialValue: precision })\n                    );\n                  }\n                  if (type != 'boolean') {\n                    unitElement = React.createElement(\n                      Label,\n                      { label: self.props.nls.resolve('CUST_DATASET_unit'), theme: self.props.theme },\n                      React.createElement(\n                        ComboBox,\n                        { theme: self.props.theme, onChange: onUnitChange, initialValue: unit },\n                        React.createElement(\n                          Option,\n                          { value: '°C', theme: self.props.theme },\n                          '°C'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: '°F', theme: self.props.theme },\n                          '°F'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: '%', theme: self.props.theme },\n                          '%'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'Hz', theme: self.props.theme },\n                          'Hz'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'A', theme: self.props.theme },\n                          'A'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'V', theme: self.props.theme },\n                          'V'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'W', theme: self.props.theme },\n                          'W'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'VA', theme: self.props.theme },\n                          'VA'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'Wh', theme: self.props.theme },\n                          'Wh'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'kWh', theme: self.props.theme },\n                          'kWh'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: '°', theme: self.props.theme },\n                          '°'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 's', theme: self.props.theme },\n                          's'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'min', theme: self.props.theme },\n                          'min'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'h', theme: self.props.theme },\n                          'h'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'd', theme: self.props.theme },\n                          'd'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'Ohm', theme: self.props.theme },\n                          'Ohm'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'lx', theme: self.props.theme },\n                          'lx'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'bar', theme: self.props.theme },\n                          'bar'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'm', theme: self.props.theme },\n                          'm'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'gallon', theme: self.props.theme },\n                          'gallon'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'rpm', theme: self.props.theme },\n                          'rpm'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'ppm', theme: self.props.theme },\n                          'ppm'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'km/h', theme: self.props.theme },\n                          'km/h'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'mbar', theme: self.props.theme },\n                          'mbar'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'mm', theme: self.props.theme },\n                          'mm'\n                        ),\n                        React.createElement(\n                          Option,\n                          { value: 'hPa', theme: self.props.theme },\n                          'hPa'\n                        )\n                      )\n                    );\n                  }\n                  return React.createElement(\n                    Accordion,\n                    { theme: self.props.theme, key: item.id, id: item.id, label: name, onRemove: self.onRemovePlot, onExpand: self.onExpand, expanded: self.state.expandedDataPoint == item.id },\n                    React.createElement(\n                      'div',\n                      null,\n                      React.createElement(\n                        Label,\n                        { label: self.props.nls.resolve('CUST_DATASET_name'), theme: self.props.theme },\n                        React.createElement(InputField, { theme: self.props.theme, onChange: onNameChange, initialValue: name })\n                      ),\n                      React.createElement(\n                        Label,\n                        { label: self.props.nls.resolve('CUST_DATASET_event'), theme: self.props.theme },\n                        React.createElement(\n                          ComboBox,\n                          { theme: self.props.theme, onChange: onEventChange, initialValue: event },\n                          eventSuggestions.map(function (item) {\n                            return React.createElement(\n                              Option,\n                              { key: item, value: item, theme: self.props.theme },\n                              item\n                            );\n                          })\n                        )\n                      ),\n                      self.state.component.cardType.indexOf(Const.EVENT_ONLY) === -1 ? React.createElement(\n                        'div',\n                        null,\n                        React.createElement(\n                          Label,\n                          { label: self.props.nls.resolve('CUST_DATASET_property'), theme: self.props.theme },\n                          React.createElement(\n                            ComboBox,\n                            { theme: self.props.theme, onChange: onPropertyChange, initialValue: property },\n                            propertySuggestions.map(function (item) {\n                              return React.createElement(\n                                Option,\n                                { key: item, value: item, theme: self.props.theme },\n                                item\n                              );\n                            })\n                          )\n                        ),\n                        React.createElement(\n                          'div',\n                          { style: styles.twoFieldContainer },\n                          React.createElement(\n                            'div',\n                            { style: styles.twoFieldsLeft },\n                            React.createElement(\n                              Label,\n                              { label: self.props.nls.resolve('CUST_DATASET_type'), theme: self.props.theme },\n                              React.createElement(\n                                Select,\n                                { theme: self.props.theme, onChange: onTypeChange, value: type },\n                                React.createElement(\n                                  Option,\n                                  { value: 'string' },\n                                  self.props.nls.resolve('type_string')\n                                ),\n                                React.createElement(\n                                  Option,\n                                  { value: 'integer' },\n                                  self.props.nls.resolve('type_integer')\n                                ),\n                                React.createElement(\n                                  Option,\n                                  { value: 'float' },\n                                  self.props.nls.resolve('type_float')\n                                ),\n                                React.createElement(\n                                  Option,\n                                  { value: 'boolean' },\n                                  self.props.nls.resolve('type_boolean')\n                                )\n                              )\n                            )\n                          ),\n                          React.createElement(\n                            'div',\n                            { style: styles.twoFieldsRight },\n                            unitElement\n                          )\n                        ),\n                        minMaxElement,\n                        React.createElement(\n                          'div',\n                          { style: styles.twoFieldsLeft },\n                          precisionElement\n                        )\n                      ) : React.createElement('div', null)\n                    )\n                  );\n                } else {\n                  return React.createElement('div', null);\n                }\n              }) : '',\n              React.createElement(\n                IconLink,\n                { id: self.props.nls[\"AddPlot\"], action: onAddPlot, theme: self.props.theme, color: self.props.theme.accent, icon: 'add-circle-outline' },\n                self.props.nls.resolve('CUST_DATASET_add')\n              )\n            );\n          } else {\n            return React.createElement('div', null);\n          }\n        });\n      };\n\n      var cardTypeSelection = '';\n      var borderTopStyle = {};\n\n      //only show the second card type selection when the selected component is from device catrgory\n      if (this.state.component.category === 'Devices') {\n        cardTypeSelection = React.createElement(\n          'div',\n          { style: styles.typeSelectionContainer },\n          cardTypes.map(function (item) {\n            return React.createElement(\n              'div',\n              { key: item.name, style: Object.assign({}, styles.typeSelectionTile, item.name == cardType ? { backgroundColor: self.props.theme.accent } : {}), onClick: function onClick() {\n                  self.onCardTypeChanged(item);\n                } },\n              React.createElement(Icon, { key: item.thumbnail, theme: self.props.theme, style: Object.assign({}, styles.typeSelectionImage), color: '#3C3C3B', icon: item.thumbnail }),\n              React.createElement(Icon, { style: Object.assign({}, styles.typeSelectionMarker, item.name == cardType ? { opacity: 1 } : { opacity: 0 }), icon: 'arrow-drop-up', size: 32, color: self.props.theme.accent, theme: self.props.theme })\n            );\n          })\n        );\n      } else {\n        borderTopStyle = { borderTop: 'none' };\n      }\n\n      // Render Dialog start\n      return React.createElement(\n        Dialog,\n        { theme: this.props.theme, title: this.state.component.id ? 'Edit card' : 'Create Card', nls: this.props.nls, active: 'General', onCancel: self.onCancel, onSubmit: self.onSubmit },\n        React.createElement(\n          DialogTab,\n          { isFirstTab: true, id: 'Card type', theme: self.props.theme, label: this.props.nls[\"Gallery\"], description: this.props.nls[\"GalleryExpl\"], status: 'active' },\n          React.createElement(\n            'div',\n            null,\n            React.createElement(\n              'div',\n              null,\n              categoryGallery\n            )\n          )\n        ),\n        dataPointsTab,\n        dataPointsSubTabs,\n        React.createElement(\n          DialogTab,\n          { id: 'CardType', theme: self.props.theme, label: this.props.nls[\"CardType\"], description: this.props.nls[\"CardTypeExpl\"], status: 'active' },\n          cardTypeSelection,\n          React.createElement('div', { style: Object.assign({}, styles.cardPreviewSeparator, borderTopStyle) }),\n          React.createElement(\n            'div',\n            { style: Object.assign({}, styles.cardTabContainer) },\n            cardTabs.map(function (tab) {\n              var checkmark = '';\n              if ('' + highlight == tab.id && tab.id != '###SETTINGS###') {\n                checkmark = React.createElement(Icon, { style: styles.cardTabCheckmark, icon: 'check', color: self.props.theme.accent, size: 16, theme: self.props.theme });\n              }\n              return React.createElement(\n                'div',\n                { key: tab.id, onClick: tab.onClick, style: Object.assign({}, styles.cardTab, self.state.visibleTab == tab.id ? styles.cardTabSelected : {}) },\n                tab.label,\n                checkmark\n              );\n            })\n          ),\n          React.createElement(\n            'div',\n            { style: Object.assign({}, styles.cardPreview, { borderColor: this.props.theme.accent }) },\n            cardTabs.map(function (tab) {\n              if (self.state.visibleTab == tab.id) {\n                if (tab.id == '###SETTINGS###') {\n                  if (customization) {\n                    return customization;\n                  }\n                } else {\n                  var sizeIndex = 0;\n                  if (parseInt(tab.id, 10) < component.sizes.length) {\n                    sizeIndex = tab.id;\n                  }\n                  var size = component.sizes[sizeIndex];\n                  var height = size[1] * 80 + (size[1] - 1) * 25;\n                  var width = size[0] * 137.5 + (size[0] - 1) * 25;\n                  var factor = Math.min(1, 450 / width);\n                  factor = Math.min(factor, 260 / height);\n                  var style = Object.assign({}, styles.previewContainer, { transform: 'scale(' + factor + ')', width: width + 'px', height: height + 'px' });\n\n                  if ('' + highlight == tab.id) {\n                    //style = Object.assign(style, {outline: '10px solid ' + self.props.theme.accent});\n                  } else {\n                      style = Object.assign(style, { outline: 'none' });\n                    }\n                  return React.createElement(\n                    'div',\n                    { key: tab.id, style: style },\n                    self.generatePreviewComponent(size),\n                    React.createElement('div', { style: styles.previewCover })\n                  );\n                }\n              }\n            })\n          )\n        ),\n        React.createElement(\n          DialogTab,\n          { isSubmitTab: true, id: 'General', theme: self.props.theme, label: this.props.nls[\"CardInformation\"], description: this.props.nls[\"CardInformationExpl\"], status: 'active' },\n          React.createElement(\n            Label,\n            { label: this.props.nls.resolve('CardTitle'), theme: this.props.theme },\n            React.createElement(InputField, { theme: this.props.theme, onChange: this.onTitleChanged, initialValue: cardTitle })\n          ),\n          React.createElement(\n            Label,\n            { label: this.props.nls.resolve('CardDescription'), theme: this.props.theme },\n            React.createElement(InputField, { theme: this.props.theme, onChange: this.onDescriptionChanged, initialValue: cardDescription })\n          ),\n          React.createElement(\n            Label,\n            { label: this.props.nls.resolve('ColorScheme'), theme: this.props.theme },\n            React.createElement(ColorSelection, { theme: this.props.theme, onChange: this.onSchemeChanged, initialSelection: colorScheme })\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = CustomizationWizard;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dialog/Dialog.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dialog/Dialog.jsx\",\"../../common/components/Accordion.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Accordion.jsx\",\"../../common/components/CardGalleryItem.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardGalleryItem.jsx\",\"../../common/components/CheckBox.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CheckBox.jsx\",\"../../common/components/ColorSelection.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/ColorSelection.jsx\",\"../../common/components/ComboBox.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/ComboBox.jsx\",\"../../common/components/GalleryAccordion.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/GalleryAccordion.jsx\",\"../../common/components/Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\",\"../../common/components/IconLink.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/IconLink.jsx\",\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/SearchField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/SearchField.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\",\"../util/Const\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/Const.js\",\"../util/Utils.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/Utils.js\",\"./Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"./DashboardStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardStore.js\",\"./ReactWrapper.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/ReactWrapper.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardCanvas.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ResponsiveReactGridLayout = (typeof window !== \"undefined\" ? window['ReactGridLayout'] : typeof global !== \"undefined\" ? global['ReactGridLayout'] : null).Responsive;\n\nvar DashboardStore = require('./DashboardStore');\nvar Utils = require('./DashboardUtils');\nvar ReactWrapper = require('./ReactWrapper.jsx');\nvar Actions = require('./Actions.jsx');\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\n\nvar RPT = React.PropTypes;\n\n/*\n *  Dashboard component\n *\n */\nvar styles = {\n  canvas: {\n    backgroundColor: \"#FFFFFF\",\n    fontSize: \"14px\",\n    fontFamily: '\"Helvetica Neue\",HelveticaNeue,Helvetica,\"Segoe UI\",Segoe,Calibri,Roboto,\"Droid Sans\",\"Arial Unicode MS\",Arial,sans-serif',\n    color: \"#EDEDED\"\n  },\n  container: {\n    backgroundColor: \"#0d1111\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  loading: {\n    fontSize: \"28px\",\n    fontFamily: '\"Helvetica Neue\",HelveticaNeue,Helvetica,\"Segoe UI\",Segoe,Calibri,Roboto,\"Droid Sans\",\"Arial Unicode MS\",Arial,sans-serif',\n    padding: \"20px\"\n  }\n};\n\nvar DashboardCanvas = React.createClass({\n  displayName: 'DashboardCanvas',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    nls: RPT.object\n  },\n\n  applyTheme: function applyTheme() {\n    var t = this.props.theme;\n    if (t) {\n      styles.canvas.fontFamily = t.font;\n      styles.canvas.color = t.major;\n      styles.canvas.backgroundColor = t.canvas;\n      styles.container.backgroundColor = t.canvas;\n      styles.loading.fontFamily = t.font;\n    }\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      config: null,\n      dashboard: null,\n      components: null,\n      layout: \"lg\"\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    var self = this;\n\n    this.breakpoints = Utils.getCapability(\"breakpoints\");\n    this.cols = Utils.getCapability(\"cols\");\n    this.rowHeight = Utils.getCapability(\"rowHeight\");\n    this.margin = Utils.getCapability(\"margin\");\n\n    DashboardStore.listen(this.onModelUpdate), Actions.loadConfig();\n    Actions.loadDashboard();\n  },\n\n  onModelUpdate: function onModelUpdate(payload) {\n    var model = {};\n\n    if (payload.dashboard) {\n      model.dashboard = payload.dashboard;\n    }\n    if (payload.components) {\n      model.components = payload.components;\n    }\n\n    if (Object.keys(model).length > 0) {\n      this.setState(model);\n    }\n  },\n\n  onBreakpointChange: function onBreakpointChange(breakpoint) {\n    console.log(\"Breakpoint changed: \" + breakpoint);\n    Actions.setBreakpoint(breakpoint);\n    this.setState({\n      layout: breakpoint\n    });\n  },\n\n  onLayoutChange: function onLayoutChange(currentLayout, allLayouts) {\n    console.log(\"Layout changed\");\n    Actions.storeLayouts(allLayouts);\n  },\n\n  onResizeStop: function onResizeStop(payload) {\n    console.log(\"Size changed\");\n    console.log(payload);\n  },\n\n  onGridMounted: function onGridMounted(grid) {\n    //Actions.setBreakpoint(grid.state.breakpoint);\n  },\n\n  mergeSchemeIntoTheme: function mergeSchemeIntoTheme(theme, schemeName) {\n    var scheme = {};\n    schemeName = schemeName ? schemeName : 0;\n    if (theme.schemes.length > schemeName) {\n      scheme = theme.schemes[schemeName];\n    }\n\n    return Object.assign({}, theme, scheme);\n  },\n\n  onDrag: function onDrag(layout, oldL, l, placeholder, e) {\n    // console.log(layout, oldL, l, placeholder, e);\n    // var x = e.layerX;\n    // var y = e.layerY;\n    //console.log(l);\n  },\n\n  onDragStart: function onDragStart(layout, oldL, l, placeholder, e) {\n    console.log(\"DRAG PAYLOAD\", layout, oldL, l, placeholder, e);\n    // console.log(layout, oldL, l, placeholder, e);\n    // var x = e.layerX;\n    // var y = e.layerY;\n    //console.log(l);\n    if (e.nativeEvent.type !== \"mousedown\") {\n      e.preventDefault();\n      $(document).bind('touchmove', this.mouseMoveScrolling);\n    }\n  },\n\n  mouseMoveScrolling: function mouseMoveScrolling(e) {\n    var h = $(window).height();\n    var pos = e.originalEvent.touches[0].clientY;\n    if (pos > h * 0.9 || pos < h * 0.1) {\n      var y = pos - h / 2;\n      $('html, body').scrollTop($(window).scrollTop() + y * 0.070);\n    }\n  },\n\n  onDragStop: function onDragStop(layout, oldL, l, placeholder, e) {\n    if (e.nativeEvent !== \"MouseEvent\") {\n      $(document).unbind('touchmove', this.mouseMoveScrolling);\n    }\n  },\n\n  render: function render() {\n    this.applyTheme();\n\n    var node = null;\n    var self = this;\n    if (this.state.components) {\n      var layouts = this.state.dashboard.layouts;\n\n      node = React.createElement(\n        ResponsiveReactGridLayout,\n        {\n          renderTrigger: Math.random(),\n          useCSSTransforms: true,\n          style: styles.canvas,\n          ref: this.onGridMounted,\n          breakpoints: this.breakpoints,\n          cols: this.cols,\n          className: 'layout',\n          layouts: layouts,\n          rowHeight: this.rowHeight,\n          margin: this.margin,\n          verticalCompact: true,\n          autoSize: true,\n          onBreakpointChange: this.onBreakpointChange,\n          onLayoutChange: this.onLayoutChange,\n          onResizeStop: this.onResizeStop,\n          isDraggable: true,\n          isResizable: false,\n          onDrag: this.onDrag,\n          onDragStart: this.onDragStart,\n          onDragStop: this.onDragStop,\n          draggableHandle: '.wrapper-title'\n        },\n        this.state.components.map(function (result) {\n          var layout = DashboardStore.getLayoutForElement(self.state.dashboard, self.state.layout, result.id);\n          // adapt the theme to reflect the color scheme of the card\n          var theme = self.mergeSchemeIntoTheme(self.props.theme, result.parameters.scheme);\n          return React.createElement(\n            'div',\n            {\n              id: result.id,\n              key: result.id,\n              style: styles.container },\n            React.createElement(ReactWrapper, {\n              theme: theme,\n              nls: self.props.nls,\n              id: result.id,\n              inbound: result.inbound,\n              outbound: result.outbound,\n              module: result.module,\n              parameters: result.parameters,\n              sticky: result.sticky,\n              showRefresh: result.showRefresh,\n              category: result.category,\n              type: result.name,\n              layout: self.state.layout,\n              width: layout.w,\n              height: layout.h })\n          );\n        })\n      );\n    } else {\n      node = React.createElement(\n        'div',\n        { style: styles.loading },\n        'Loading...'\n      );\n    }\n    return node;\n  }\n});\n\nmodule.exports = DashboardCanvas;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"./DashboardStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardStore.js\",\"./DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\",\"./ReactWrapper.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/ReactWrapper.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardControl.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar DashboardStore = require('./DashboardStore');\nvar Utils = require('./DashboardUtils');\nvar Actions = require('./Actions.jsx');\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\nvar IconLink = require('../../common/components/IconLink.jsx');\nvar Select = require('../../common/components/Select.jsx');\nvar Option = require('../../common/components/Option.jsx');\n\nvar RPT = React.PropTypes;\n\n/*\n *  Dashboard component\n *\n */\nvar styles = {\n  container: {\n    fontSize: \"14px\",\n    fontFamily: '\"Helvetica Neue\",HelveticaNeue,Helvetica,\"Segoe UI\",Segoe,Calibri,Roboto,\"Droid Sans\",\"Arial Unicode MS\",Arial,sans-serif',\n    color: \"#e0e0e0\",\n    backgroundColor: \"transparent\",\n    margin: \"10px 10px 0px 10px\",\n    padding: \"10px\",\n    position: \"relative\",\n    zIndex: \"10\"\n  },\n  containerMobile: {\n    margin: \"10px 50px 0px 20px\"\n  },\n\n  actions: {\n    float: \"right\",\n    marginLeft: \"20px\"\n  },\n\n  actionContainer: {\n    position: \"absolute\",\n    top: \"0px\",\n    right: \"10px\"\n  },\n  pageContainer: {\n    position: \"absolute\",\n    top: \"0px\",\n    left: \"10px\"\n  },\n\n  selection: {\n    width: \"300px\",\n    float: \"right\",\n    marginLeft: \"20px\",\n    position: \"relative\",\n    top: \"-10px\"\n  },\n\n  selectionMobile: {\n    marginLeft: \"0px\",\n    paddingRight: '20px'\n  },\n\n  actionsMobile: {}\n};\n\nvar DashboardControl = React.createClass({\n  displayName: 'DashboardControl',\n\n  propTypes: {\n    organization: RPT.string,\n    configurable: RPT.bool,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  applyTheme: function applyTheme() {\n    var t = this.props.theme;\n    if (t) {\n      styles.container.fontFamily = t.font;\n      styles.container.color = t.textOnCanvas;\n      styles.container.backgroundColor = t.canvas;\n    }\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      organization: \"Unkown\",\n      configurable: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      history: 0,\n      layout: DashboardStore.getBreakpoint()\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    DashboardStore.listen(this.onModelUpdate);\n  },\n\n  onModelUpdate: function onModelUpdate(payload) {\n    var model = {};\n    if (payload.history) {\n      model.history = payload.history;\n    }\n    if (payload.dashboard) {\n      model.dashboard = payload.dashboard;\n    }\n    if (Object.keys(model).length > 0) {\n      this.setState(model);\n    }\n  },\n\n  onUndo: function onUndo() {\n    Actions.undo();\n  },\n\n  onAddDashboard: function onAddDashboard() {\n    Actions.showDialog({\n      id: null,\n      action: 'modifyPage'\n    });\n  },\n\n  onRemoveDashboard: function onRemoveDashboard() {\n    Actions.removeDashboard();\n  },\n\n  onAdd: function onAdd() {\n    //Actions.addComponent();\n    Actions.showDialog({\n      id: null,\n      action: 'addCard'\n    });\n  },\n\n  onDashboardChange: function onDashboardChange(value) {\n    Actions.loadDashboard(value);\n    Actions.getComponents();\n  },\n\n  render: function render() {\n    var node = null;\n    var self = this;\n    var undo = \"\";\n    var configure = \"\";\n    var add = \"\";\n    var addDashboard = \"\";\n    var removeDashboard = \"\";\n    var selection = \"\";\n\n    var actionsStyle = this.state.layout === \"sm\" ? Object.assign({}, styles.actions, styles.actionsMobile) : styles.actions;\n    var selectionStyle = this.state.layout === \"sm\" ? Object.assign({}, styles.selection, styles.selectionMobile) : styles.selection;\n    var containerStyle = this.state.layout === \"sm\" ? Object.assign({}, styles.container, styles.containerMobile) : styles.container;\n\n    if (this.state.history > 1) {\n      undo = React.createElement(\n        IconLink,\n        { theme: this.props.theme, color: this.props.theme.textOnCanvas, icon: 'undo', size: 24, style: actionsStyle, action: this.onUndo },\n        'Undo'\n      );\n    }\n    if (this.props.configurable) {\n      configure = React.createElement(\n        IconLink,\n        { theme: this.props.theme, color: this.props.theme.textOnCanvas, icon: 'settings', size: 24, style: actionsStyle, action: this.onConfigure },\n        'Configure dashboard'\n      );\n      add = React.createElement(\n        IconLink,\n        { theme: this.props.theme, color: this.props.theme.textOnCanvas, icon: 'add-circle-outline', size: 24, style: actionsStyle, action: this.onAdd },\n        'Add card'\n      );\n    }\n\n    var dashboards = DashboardStore.getDashboards();\n    self = this;\n\n    if (Utils.getCapability(\"multiplePages\")) {\n      selection = React.createElement(\n        Select,\n        { theme: this.props.theme, onChange: this.onDashboardChange, dummy: self.state.dashboard, value: self.state.dashboard ? self.state.dashboard.name : null },\n        dashboards.map(function (option) {\n          return React.createElement(\n            Option,\n            { key: option.name, value: option.name },\n            option.label\n          );\n        })\n      );\n\n      addDashboard = React.createElement(\n        IconLink,\n        { theme: this.props.theme, color: this.props.theme.textOnCanvas, icon: 'add-circle-outline', size: 24, style: styles.actions, action: this.onAddDashboard },\n        'Add page'\n      );\n      if (dashboards.length > 1 && this.state.dashboard && DashboardStore.getSettings(\"defaultDashboard\") != this.state.dashboard.name) {\n        removeDashboard = React.createElement(\n          IconLink,\n          { theme: this.props.theme, color: this.props.theme.textOnCanvas, icon: 'delete', size: 24, style: actionsStyle, action: this.onRemoveDashboard },\n          'Remove page'\n        );\n      }\n    }\n\n    return React.createElement(\n      'div',\n      { style: styles.container },\n      React.createElement(\n        'div',\n        { style: styles.actionContainer },\n        undo,\n        add\n      ),\n      React.createElement(\n        'div',\n        { style: styles.pageContainer },\n        React.createElement(\n          'div',\n          { style: selectionStyle },\n          selection\n        ),\n        removeDashboard,\n        addDashboard\n      ),\n      this.props.children\n    );\n  }\n});\n\nmodule.exports = DashboardControl;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/IconLink.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/IconLink.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\",\"./Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"./DashboardStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardStore.js\",\"./DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardStore.js\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar Actions = require('./Actions.jsx');\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\nvar ReactGridLayout = (typeof window !== \"undefined\" ? window['ReactGridLayout'] : typeof global !== \"undefined\" ? global['ReactGridLayout'] : null);\nvar RGLUtil = (typeof window !== \"undefined\" ? window['ReactGridLayoutUtils'] : typeof global !== \"undefined\" ? global['ReactGridLayoutUtils'] : null);\nvar config = require('./config/DashboardConfig.json');\nvar defaultDashboards = require('./config/Dashboards.json');\n//var ConfigStore = require('../../common/stores/ConfigStore');\nvar Utils = require('./DashboardUtils');\n\n// TODO Dynamic require does not work currently because of browserify. We add all components here until\n// we have a solution\nwindow.IoTCards = {};\nwindow.IoTCustomization = {};\n\nIoTCards.Gauge = require('../cards/Gauge.jsx');\nIoTCards.UsageDeviceCard = require('../cards/UsageDeviceCard.jsx');\nIoTCards.UsageDataCard = require('../cards/UsageDataCard.jsx');\nIoTCards.UsageStorageCard = require('../cards/UsageStorageCard.jsx');\nIoTCards.DeviceTypes = require('../cards/DeviceTypes.jsx');\nIoTCards.BarChart = require('../cards/BarChart.jsx');\nIoTCards.DonutChart = require('../cards/DonutChart.jsx');\nIoTCards.Value = require('../cards/Value.jsx');\nIoTCards.RealTimeChart = require('../cards/RealTimeChart.jsx');\nIoTCards.HorizontalLine = require('../cards/HorizontalLine.jsx');\n\nIoTCustomization.RealTimeChartProperties = require('../customization/RealTimeChartProperties.jsx');\nIoTCustomization.BarChartProperties = require('../customization/BarChartProperties.jsx');\nIoTCustomization.GaugeProperties = require('../customization/GaugeProperties.jsx');\nIoTCustomization.SingleValueProperties = require('../customization/SingleValueProperties.jsx');\n\nvar DashboardStore = Reflux.createStore({\n  configName: \"MyDashboardConfig\",\n  config: null,\n  dashboard: null,\n  history: null,\n  breakpoint: \"lg\",\n  emptyDashboard: {\n    \"name\": \"NewDashboard\",\n    \"label\": \"New Dashboard\",\n    \"icon\": \"res/images/icons/smarterHome()/gs7.png\",\n    \"image\": \"res/images/groups/default.jpg\",\n    \"thumb\": \"res/images/groups/smarterHome()/g7.png\",\n    \"hidden\": false,\n    \"type\": \"TILE\",\n    \"locked\": false,\n    \"preset\": false,\n    \"layouts\": {\n      \"xxl\": [],\n      \"xl\": [],\n      \"lg\": [],\n      \"md\": [],\n      \"sm\": []\n    },\n    \"components\": []\n  },\n\n  getBreakpoint: function getBreakpoint() {\n    return this.breakpoint;\n  },\n\n  setDashboardConfig: function setDashboardConfig(temp) {\n    config = temp;\n  },\n\n  setDefaultDashboard: function setDefaultDashboard(temp) {\n    defaultDashboards = temp;\n  },\n\n  setEmitter: function setEmitter(emitter) {\n    this.externalEmitter = emitter;\n  },\n\n  getConfig: function getConfig() {\n    return config;\n  },\n\n  init: function init() {\n    this.history = [];\n\n    // listen to config store\n    //ConfigStore.listen(this.onRemoteConfig);\n\n    // listen to actions\n    this.listenTo(Actions.loadConfig, this.onLoadConfig);\n    this.listenTo(Actions.loadDashboard, this.onLoadDashboard);\n    this.listenTo(Actions.getComponents, this.onGetComponents);\n    this.listenTo(Actions.storeLayouts, this.onStoreLayouts);\n    this.listenTo(Actions.undo, this.onUndo);\n    this.listenTo(Actions.expandCard, this.onExpandCard);\n    this.listenTo(Actions.shrinkCard, this.onShrinkCard);\n    this.listenTo(Actions.setBreakpoint, this.onSetBreakpoint);\n    this.listenTo(Actions.customAction, this.onCustomAction);\n    this.listenTo(Actions.addComponent, this.onAddComponent);\n    this.listenTo(Actions.moveComponent, this.onMoveComponent);\n    this.listenTo(Actions.showDialog, this.onShowDialog);\n    this.listenTo(Actions.configureComponent, this.onConfigureComponent);\n    this.listenTo(Actions.getCategories, this.onGetCategories);\n    this.listenTo(Actions.closeDialog, this.onCloseDialog);\n    this.listenTo(Actions.getComponent, this.onGetComponent);\n    this.listenTo(Actions.removeComponent, this.onRemoveComponent);\n    this.listenTo(Actions.notify, this.onNotify);\n    this.listenTo(Actions.navigateRoute, this.onNavigateRoute);\n    this.listenTo(Actions.addDashboard, this.onAddDashboard);\n    this.listenTo(Actions.removeDashboard, this.onRemoveDashboard);\n    this.listenTo(Actions.changeCardSize, this.onChangeCardSize);\n\n    this.listenTo(Actions.submitSSOData, this.onSubmitSSOData);\n\n    this.listenTo(Actions.showDialogAAAUserDetails, this.onShowDialogAAAUserDetails);\n    this.listenTo(Actions.showDialogAddMember, this.onShowDialogAddMember);\n\n    // set initial experimental mode\n    this.experimental = false;\n  },\n\n  isExperimentalMode: function isExperimentalMode() {\n    return this.experimental;\n  },\n\n  setExperimentalMode: function setExperimentalMode(mode) {\n    this.experimental = mode;\n  },\n\n  getTheme: function getTheme() {\n    return config.theme;\n  },\n\n  getDashboards: function getDashboards() {\n    var list = [];\n    if (this.dashboards) {\n      list = this.dashboards.dashboards;\n    }\n    return list;\n  },\n\n  getDashboard: function getDashboard() {\n    return this.dashboard;\n  },\n\n  getSettings: function getSettings(key) {\n    if (this.dashboards && this.dashboards.settings) {\n      return this.dashboards.settings[key];\n    } else {\n      return null;\n    }\n  },\n\n  getMainSettings: function getMainSettings(name) {\n    var settings = this.config.settings;\n    if (settings) {\n      var value = settings[name];\n      return value;\n    }\n  },\n\n  getEmptyDashboard: function getEmptyDashboard() {\n    return Object.assign({}, JSON.parse(JSON.stringify(this.emptyDashboard)), { name: this.createUUID() });\n  },\n\n  getLayoutForElement: function getLayoutForElement(dashboard, layout, id) {\n    //if (!dashboard || !layout || !id) throw new Error(\"Error\");\n    var temp = dashboard.layouts[layout];\n    for (var i in temp) {\n      var item = temp[i];\n      if (item.i == id) {\n        return item;\n      }\n    }\n  },\n\n  onCustomAction: function onCustomAction(payload) {\n    alert(payload);\n  },\n\n  onNotify: function onNotify(payload) {\n    if (this.externalEmitter) {\n      this.externalEmitter.emit(\"Dashboard.notification\", payload);\n    }\n    this.trigger({ notification: payload });\n  },\n\n  onNavigateRoute: function onNavigateRoute(payload) {\n    alert(\"Routing to: \" + payload);\n  },\n\n  onLoadConfig: function onLoadConfig() {\n    if (!this.config) {\n      this.config = config;\n    }\n\n    // Get config name from config file\n    var newConfigName = this.getMainSettings(\"configName\");\n    if (newConfigName) {\n      this.configName = newConfigName;\n    }\n\n    // Get version name from config file\n    var configVersion = this.getMainSettings(\"configVersion\");\n    if (configVersion !== undefined) {\n      this.configName = this.configName + \"#\" + configVersion;\n    }\n\n    this.trigger({ config: this.config });\n  },\n\n  onLoadDashboard: function onLoadDashboard(target) {\n    this.cleanup();\n\n    // Load the full set of dashboards\n    if (!this.dashboards) {\n      if (global.localStorage) {\n        try {\n          this.dashboards = JSON.parse(global.localStorage.getItem('Dashboard_' + this.configName));\n        } catch (e) {}\n      }\n      if (this.dashboards) {\n        // if there is a new default dashboard, take it\n        if (defaultDashboards.configTimestamp > this.dashboards.configTimestamp) {\n          this.dashboards = null;\n        }\n      }\n      if (!this.dashboards) {\n        this.dashboards = defaultDashboards;\n      }\n\n      // Start with the local dashboard but check if there is a new remote dashboard\n      /*\n        ConfigStore.Actions.getConfig({\n          name: this.configName, // hardcoded name for the time being\n          data: this.dashboards,\n          lastChange: this.dashboards?this.dashboards.configTimestamp:0\n        });\n      */\n    }\n\n    var dashboard = this.dashboards.dashboards[0];\n\n    // Find the right dashboard\n    var name = null;\n    if (target) {\n      name = target;\n    } else if (!name && this.dashboards.settings && this.dashboards.settings.defaultDashboard) {\n      name = this.dashboards.settings.defaultDashboard;\n    }\n\n    if (name) {\n      var temp = this.getDashboardByName(name);\n      if (temp) {\n        dashboard = temp;\n      }\n    }\n\n    this.dashboard = dashboard;\n\n    this.trigger({ components: this.getComponents(), dashboard: this.dashboard });\n  },\n\n  onRemoteConfig: function onRemoteConfig(payload) {\n    if (payload.error) {\n      console.log(\"Error loading remote config: \" + payload.error);\n    } else if (payload.configs) {} else if (payload.config) {\n      // current dashboard name\n      var target = this.dashboard ? this.dashboard.name : null;\n\n      // HACK: Disable this to overwrite the remote dashboard with the local copy\n      if (false) {\n        this.dashboards = payload.config;\n        this.dashboard = this.dashboards[0];\n      } else {\n        this.dashboards.configTimestamp = payload.config.configTimestamp;\n      }\n\n      var name = null;\n\n      if (target) {\n        name = target;\n      } else if (!name && this.dashboards.settings && this.dashboards.settings.defaultDashboard) {\n        name = this.dashboards.settings.defaultDashboard;\n      }\n\n      if (name) {\n        var temp = this.getDashboardByName(name);\n        if (temp) {\n          dashboard = temp;\n        }\n      }\n\n      this.dashboard = dashboard;\n\n      this.trigger({ components: this.getComponents(), dashboard: this.dashboard });\n    }\n  },\n\n  onUndo: function onUndo() {\n    if (this.history.length > 1) {\n      this.history.pop();\n      this.dashboard = JSON.parse(this.history[this.history.length - 1]);\n      this.storeDashboard();\n      this.trigger({ components: this.getComponents(), dashboard: this.dashboard, history: this.history.length });\n    }\n  },\n\n  onSave: function onSave() {\n    // FLM: No longer needed since we have auto-save\n    //this.persistDashboard();\n  },\n\n  onAddDashboard: function onAddDashboard(payload) {\n    this.addDashboard(payload.dashboard);\n    this.dashboard = payload.dashboard;\n    this.onCloseDialog();\n    this.onLoadDashboard(this.dashboard.name);\n    this.onAddComponent(null, { type: \"Value\", params: {\n        \"component\": \"Value\",\n        \"title\": \"New Card\",\n        \"size\": {\n          \"sm\": 0,\n          \"md\": 0,\n          \"lg\": 0,\n          \"xl\": 0,\n          \"xxl\": 0\n        }\n\n      } });\n    this.storeDashboard();\n  },\n\n  onRemoveDashboard: function onRemoveDashboard() {\n    this.removeDashboardByName(this.dashboard.name);\n    this.dashboard = this.dashboards.dashboards[0];\n    this.onLoadDashboard(this.dashboard.name);\n    this.storeDashboard();\n  },\n\n  getComponent: function getComponent(id) {\n    for (var i in this.dashboard.components) {\n      var component = this.dashboard.components[i];\n      if (component.id == id) {\n        return component;\n      }\n    }\n    return null;\n  },\n\n  onMoveComponent: function onMoveComponent(payload) {\n    var layouts,\n        components,\n        container = null;\n\n    var elementLayout = this.getLayoutForElement(this.dashboard, 'sm', payload.id);\n\n    var layout = this.dashboard.layouts['sm'];\n\n    var successor = {};\n    var predecessor = {};\n    var targetOffset = 0;\n    var elementPositions = {};\n\n    for (var componentKey in layout) {\n      var component = layout[componentKey];\n      elementPositions[component.i] = componentKey;\n      if (component.y - elementLayout.y > 0) {\n        if (successor.y === undefined || component.y < successor.y) {\n          successor = component;\n        }\n      } else if (component.y - elementLayout.y < 0) {\n        if (predecessor.y === undefined || component.y > predecessor.y) {\n          predecessor = component;\n        }\n      }\n    }\n\n    if (predecessor.y !== undefined && payload.direction === 'up') {\n      layout[elementPositions[payload.id]].y = predecessor.y;\n      layout[elementPositions[predecessor.i]].y = layout[elementPositions[payload.id]].y + elementLayout.h;\n    }\n    if (successor.y !== undefined && payload.direction === 'down') {\n      layout[elementPositions[successor.i]].y = elementLayout.y;\n      layout[elementPositions[payload.id]].y = layout[elementPositions[successor.i]].y + successor.h;\n    }\n\n    var cardGap = 25; // look in react grid layout\n    targetOffset = payload.direction === 'up' ? $('#' + predecessor.i).outerHeight() * -1 - cardGap : $('#' + successor.i).outerHeight() + cardGap;\n\n    var docMiddle = $(window).height() / 4;\n\n    console.log('targetOffset', $('#' + predecessor.i));\n\n    this.dashboard.layouts['sm'] = layout;\n\n    this.trigger({ components: this.getComponents(), dashboard: this.dashboard });\n\n    $('html, body').animate({\n      scrollTop: $('#' + payload.id).offset().top + targetOffset - docMiddle\n    }, 500);\n  },\n\n  onAddComponent: function onAddComponent(parent, payload) {\n    var layouts,\n        components,\n        container = null;\n\n    if (parent) {\n      container = this.getComponent(parent);\n      components = container.parameters.components;\n      layouts = container.parameters.layouts;\n    } else {\n      layouts = this.dashboard.layouts;\n      components = this.dashboard.components;\n    }\n\n    // get empty component\n    var definition = this.getComponentDefinitionForType(payload.type);\n\n    var uuid = this.createUUID();\n    // add component to all layouts\n    for (var breakpoint in layouts) {\n      var layout = layouts[breakpoint];\n      if (layout) {\n        var newEntry = {};\n        newEntry.w = definition.sizes[0][0];\n        newEntry.h = definition.sizes[0][1];\n        newEntry.x = 0;\n        newEntry.y = 0;\n        newEntry.i = uuid;\n        layout.unshift(newEntry);\n        layout = RGLUtil.compact(layout, true);\n        layouts[breakpoint] = layout;\n      }\n    }\n\n    var compParams = Object.assign({}, {\n      \"size\": {\n        \"sm\": 0,\n        \"md\": 0,\n        \"lg\": 0,\n        \"xl\": 0,\n        \"xxl\": 0\n      }\n    }, payload.parameters);\n    // add component to dashboard\n    var entry = {\n      \"id\": uuid,\n      \"type\": definition.name,\n      \"parameters\": compParams\n    };\n    components.unshift(entry);\n\n    // handle size preset\n    if (payload.size) {\n      entry.parameters.size[this.breakpoint] = payload.size;\n      var size = definition.sizes[payload.size];\n      var layoutEntry = this.getLayoutForElement(this.dashboard, this.breakpoint, entry.id);\n      layoutEntry.w = size[0];\n      layoutEntry.h = size[1];\n\n      var layout = this.dashboard.layouts[this.breakpoint];\n      layout = RGLUtil.compact(layout, true);\n      this.dashboard.layouts[this.breakpoint] = layout;\n    }\n\n    this.trigger({ components: this.getComponents(), dashboard: this.dashboard, history: this.history.length, dialog: 'none' });\n  },\n\n  onShowDialog: function onShowDialog(payload) {\n    if (payload.action == \"addPage\") {\n      this.trigger({ dialog: {\n          dialog: \"PageCustomization\",\n          id: null\n        } });\n    } else if (payload.action == \"modifyPage\") {\n      this.trigger({ dialog: {\n          dialog: \"PageCustomization\",\n          id: payload.id\n        } });\n    } else if (payload.action == \"modifyCard\" && payload.type) {\n      console.log(payload.type);\n      this.trigger({ dialog: {\n          dialog: \"ComponentCustomization\",\n          type: payload.type,\n          action: payload.action,\n          id: payload.id\n        } });\n    } else if (payload.action == \"addCard\" || payload.action == \"modifyCard\" && !payload.type) {\n      this.trigger({ dialog: {\n          dialog: \"ComponentCustomization\",\n          type: 'Value',\n          action: payload.action,\n          id: payload.id\n        } });\n    }\n  },\n\n  /////////  AAA UI Part Start /////////\n\n  onShowDialogAddMember: function onShowDialogAddMember(payload) {\n    this.trigger({ dialog: {\n        dialog: \"DialogAddMember\",\n        type: payload.type,\n        action: payload.action,\n        id: payload.id\n      } });\n  },\n\n  onSubmitAddMemberData: function onSubmitAddMemberData(dataAddMember) {\n    console.log(dataAddMember, \"AddMember\");\n    console.log(\"you have submit the AddMember\");\n  },\n\n  onShowDialogAAAUserDetails: function onShowDialogAAAUserDetails(payload) {\n    this.trigger({ dialog: {\n        dialog: \"DialogAAAUserDetails\",\n        type: payload.type,\n        action: payload.action,\n        id: payload.id\n      } });\n  },\n\n  onSubmitAAAUserDetailsData: function onSubmitAAAUserDetailsData(dataAAAUserDetails) {\n    console.log(dataAAAUserDetails, \"AAAUserDetails\");\n    console.log(\"you have submit the AAAUserDetails\");\n  },\n\n  /////////  AAA UI Part End /////////\n\n  onConfigureComponent: function onConfigureComponent(payload) {\n    var components = this.dashboard.components;\n    for (var i in components) {\n      var component = components[i];\n      if (component.id == payload.id) {\n        if (payload.type) {\n          var oldType = component.type;\n          component.type = payload.type;\n          if (payload.parameters) {\n            if (payload.noReplace) {\n              // only slight changes without full knowledge of the parameters block\n              component.parameters = Object.assign(component.parameters, payload.parameters);\n            } else {\n              // full replacement (default)\n              component.parameters = payload.parameters;\n            }\n          }\n          var definition = this.getComponentDefinitionForType(payload.type);\n          var layout;\n\n          // reset to default sizes when type changes\n          if (oldType != payload.type) {\n            for (var breakpoint in this.dashboard.layouts) {\n              layout = this.dashboard.layouts[breakpoint];\n              if (layout) {\n                for (var j in layout) {\n                  var model = layout[j];\n                  if (model.j == payload.id) {\n                    model.w = definition.sizes[0][0];\n                    model.h = definition.sizes[0][1];\n                    break;\n                  }\n                }\n                layout = RGLUtil.compact(layout, true);\n                this.dashboard.layouts[breakpoint] = layout;\n              }\n            }\n            component.parameters.size = {\n              \"sm\": 0,\n              \"md\": 0,\n              \"lg\": 0,\n              \"xl\": 0,\n              \"xxl\": 0\n            };\n          }\n\n          if (payload.size !== undefined) {\n            component.parameters.size[this.breakpoint] = payload.size;\n            var size = definition.sizes[payload.size];\n            var layoutEntry = this.getLayoutForElement(this.dashboard, this.breakpoint, component.id);\n            layoutEntry.w = size[0];\n            layoutEntry.h = size[1];\n            layout = this.dashboard.layouts[this.breakpoint];\n            layout = RGLUtil.compact(layout, true);\n            this.dashboard.layouts[this.breakpoint] = layout;\n          }\n        }\n      }\n    }\n\n    this.trigger({ components: this.getComponents(), dashboard: this.dashboard, history: this.history.length, dialog: 'none' });\n    this.storeDashboard();\n  },\n\n  onSetBreakpoint: function onSetBreakpoint(breakpoint) {\n    this.breakpoint = breakpoint;\n    this.cleanup();\n  },\n\n  onChangeCardSize: function onChangeCardSize(id, dimensions) {\n    var layout = this.dashboard.layouts[this.breakpoint];\n    var model;\n    for (var i in layout) {\n      model = layout[i];\n      if (model.i == id) {\n        layout.splice(i, 1);\n        layout.unshift(model);\n        break;\n      }\n    }\n\n    if (dimensions.width) {\n      model.w = dimensions.width;\n    }\n    if (dimensions.height) {\n      model.h = dimensions.height;\n    }\n\n    layout = RGLUtil.compact(layout, true);\n    this.dashboard.layouts[this.breakpoint] = layout;\n\n    this.trigger({ dashboard: this.dashboard });\n    this.storeDashboard();\n  },\n\n  changeSize: function changeSize(id, wrap, dir) {\n    var layout = this.dashboard.layouts[this.breakpoint];\n    var model = null;\n    for (var i in layout) {\n      model = layout[i];\n      if (model.i == id) {\n        break;\n      }\n    }\n\n    var component = this.getComponent(id);\n    var definition = this.getComponentDefinitionForType(component.type);\n\n    if (!component.parameters.size || component.parameters.size.lg === undefined) {\n      component.parameters.size = {\n        \"sm\": 0,\n        \"md\": 0,\n        \"lg\": 0,\n        \"xl\": 0,\n        \"xxl\": 0\n      };\n    }\n    var size = component.parameters.size[this.breakpoint];\n    size = size + dir;\n    if (size >= definition.sizes.length) {\n      if (wrap) {\n        size = 0;\n      } else {\n        return;\n      }\n    }\n    if (size < 0) {\n      if (wrap) {\n        size = definition.sizes.length - 1;\n      } else {\n        return;\n      }\n    }\n    var tupel = definition.sizes[size];\n\n    model.w = tupel[0];\n    model.h = tupel[1];\n    var maxWidth = Utils.getCapability(\"cols\")[this.breakpoint];\n    if (model.w > maxWidth) {\n      size = 0;\n      tupel = definition.sizes[size];\n      model.w = tupel[0];\n      model.h = tupel[1];\n    }\n    if (model.x + model.w > maxWidth) {\n      model.x = maxWidth - model.w;\n    }\n\n    component.parameters.size[this.breakpoint] = size;\n\n    layout = RGLUtil.compact(layout, true);\n    this.dashboard.layouts[this.breakpoint] = layout;\n\n    this.trigger({ dashboard: this.dashboard });\n    this.storeDashboard();\n  },\n\n  onExpandCard: function onExpandCard(id, wrap) {\n    this.changeSize(id, wrap, 1);\n  },\n\n  onShrinkCard: function onShrinkCard(id, wrap) {\n    this.changeSize(id, wrap, -1);\n  },\n\n  persistDashboard: function persistDashboard() {\n    //   console.log(\"persist dashboard\");\n    //   var text = JSON.stringify(this.dashboards);\n\n    //   if (global.localStorage) {\n    //     global.localStorage.setItem('Dashboard_' + this.configName, text);\n    //   }\n\n    //   // store the config in the remote store\n    // /*\n    //   ConfigStore.Actions.updateConfig({\n    //     name: this.configName, // hardcoded name for the time being\n    //     data: this.dashboards,\n    //     lastChange: this.dashboards?this.dashboards.configTimestamp:0\n    //   });\n    // */\n\n    //   this.cleanup();\n    //   this.history.push(text);\n\n    //   this.trigger({history: this.history.length});\n  },\n\n  getDashboardByName: function getDashboardByName(name) {\n    var dashboard = null;\n    if (this.dashboards) {\n      for (var i = 0; i < this.dashboards.dashboards.length; i++) {\n        var temp = this.dashboards.dashboards[i];\n        if (temp.name == name) {\n          dashboard = temp;\n          break;\n        }\n      }\n    }\n\n    return dashboard;\n  },\n\n  removeDashboardByName: function removeDashboardByName(name) {\n    if (this.dashboards) {\n      for (var i = 0; i < this.dashboards.dashboards.length; i++) {\n        var temp = this.dashboards.dashboards[i];\n        if (temp.name == name) {\n          this.dashboards.dashboards.splice(i, 1);\n          break;\n        }\n      }\n    }\n  },\n\n  addDashboard: function addDashboard(dashboard) {\n    this.dashboards.dashboards.push(dashboard);\n  },\n\n  cleanup: function cleanup() {\n    this.history = [];\n  },\n\n  storeDashboard: function storeDashboard() {\n    console.log(\"store dashboard\");\n    var text = JSON.stringify(this.dashboard);\n    var oldText = \"\";\n    if (this.history.length > 0) {\n      oldText = this.history[this.history.length - 1];\n    }\n    if (oldText != text) {\n      this.history.push(text);\n\n      this.trigger({ history: this.history.length });\n    }\n    // persist\n    if (global.localStorage) {\n      // make sure we have the changes in the set of dashboards\n      this.removeDashboardByName(this.dashboard.name);\n      this.addDashboard(this.dashboard);\n      var fullDashboard = JSON.stringify(this.dashboards);\n      global.localStorage.setItem('Dashboard_' + this.configName, fullDashboard);\n    }\n  },\n\n  onStoreLayouts: function onStoreLayouts(layouts) {\n    this.dashboard.layouts = layouts;\n    this.storeDashboard();\n\n    this.trigger({ dashboard: this.dashboard });\n  },\n\n  onGetComponents: function onGetComponents() {\n    var components = this.getComponents();\n    this.trigger({ components: components, dashboard: this.dashboard });\n  },\n\n  getComponents: function getComponents() {\n    var components = [];\n    if (this.config && this.dashboard) {\n      for (var i in this.dashboard.components) {\n        var compInDashboard = this.dashboard.components[i];\n        var definition = this.getComponentDefinitionForType(compInDashboard.type);\n        var component = this.prepareComponent(definition, compInDashboard);\n        components.push(component);\n      }\n    }\n\n    return components;\n  },\n\n  onRemoveComponent: function onRemoveComponent(payload) {\n    if (this.config && this.dashboard) {\n      for (var i in this.dashboard.components) {\n        var compInDashboard = this.dashboard.components[i];\n        if (compInDashboard.id == payload.id) {\n          // remove from components\n          this.dashboard.components.splice(i, 1);\n          // remove from layout\n          for (var breakpoint in this.dashboard.layouts) {\n            var layout = this.dashboard.layouts[breakpoint];\n            if (layout) {\n              for (var t in layout) {\n                var compInLayout = layout[t];\n                if (compInLayout.i == payload.id) {\n                  layout.splice(t, 1);\n                  break;\n                }\n              }\n              layout = RGLUtil.compact(layout, true);\n              this.dashboard.layouts[breakpoint] = layout;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    this.trigger({ components: this.getComponents(), dashboard: this.dashboard, history: this.history.length, dialog: \"none\" });\n  },\n\n  onGetComponent: function onGetComponent(payload) {\n    var id = payload.id;\n    var type = payload.type;\n    var component = this.getComponentDefinitionForType(type);\n\n    if (!id) {\n      // create empty component\n      var comp = {\n        type: \"Value\",\n        parameters: {\n          \"component\": \"Value\",\n          \"title\": \"New Card\",\n          \"size\": {\n            \"sm\": 0,\n            \"md\": 0,\n            \"lg\": 0,\n            \"xl\": 0,\n            \"xxl\": 0\n          }\n        }\n      };\n\n      component = this.prepareComponent(component, comp);\n      component.parameters.component = type;\n    } else {\n      // get component\n      if (this.config && this.dashboard) {\n        for (var i in this.dashboard.components) {\n          var compInDashboard = this.dashboard.components[i];\n          if (compInDashboard.id == id) {\n            component = this.prepareComponent(component, compInDashboard);\n            component.parameters.component = type;\n            break;\n          }\n        }\n      }\n    }\n\n    this.trigger({ component: component });\n  },\n\n  onGetCategories: function onGetCategories() {\n    var categories = {};\n    for (var i in this.config.components) {\n      var component = this.config.components[i];\n      if (component.extends) {\n        var parent = this.getComponentDefinitionForType(component.extends);\n        component = Object.assign({}, parent, component);\n      }\n      var category = component.category;\n      if (category != \"Hidden\") {\n        if (!categories[category]) {\n          categories[category] = [];\n        }\n        categories[category].push(component);\n        // TODO Check access authorization here\n      }\n    }\n    this.trigger({ categories: categories });\n  },\n\n  onCloseDialog: function onCloseDialog() {\n    this.trigger({ dialog: 'none' });\n  },\n\n  getComponentDefinitionForType: function getComponentDefinitionForType(type) {\n    if (this.config && type) {\n      var components = this.config.components;\n      for (var i in components) {\n        var component = components[i];\n        if (component.name == type) {\n          if (component.extends) {\n            var parent = this.getComponentDefinitionForType(component.extends);\n            component = Object.assign({}, parent, component);\n          }\n          return component;\n        }\n      }\n    } else {\n      return null;\n    }\n  },\n\n  /**\n  * Merges the component definition with the infromatReturns the layout information for a single component\n  * @param  {Object}  definition Component definition from the global DashboardConfig\n  * @param  {Object}  instance   Component from the dashboard instance\n  * @return {Object}  merged comopnent information\n  */\n  prepareComponent: function prepareComponent(definition, instance) {\n    var temp = {\n      \"parameters\": Object.assign({}, definition.parameters, instance.parameters),\n      \"id\": instance.id\n    };\n    return Object.assign({}, definition, temp);\n  },\n\n  // create a unique rfc4122 conform UUID\n  createUUID: function createUUID() {\n    var dec2hex = [];\n    for (var i = 0; i <= 15; i++) {\n      dec2hex[i] = i.toString(16);\n    }\n\n    var uuid = '';\n    for (var j = 1; j <= 36; j++) {\n      if (j === 9 || j === 14 || j === 19 || j === 24) {\n        uuid += '-';\n      } else if (j === 15) {\n        uuid += 4;\n      } else if (j === 20) {\n        uuid += dec2hex[Math.random() * 4 | 0 + 8];\n      } else {\n        uuid += dec2hex[Math.random() * 15 | 0];\n      }\n    }\n    return uuid;\n  }\n\n});\n\nmodule.exports = DashboardStore;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../cards/BarChart.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/BarChart.jsx\",\"../cards/DeviceTypes.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/DeviceTypes.jsx\",\"../cards/DonutChart.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/DonutChart.jsx\",\"../cards/Gauge.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/Gauge.jsx\",\"../cards/HorizontalLine.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/HorizontalLine.jsx\",\"../cards/RealTimeChart.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/RealTimeChart.jsx\",\"../cards/UsageDataCard.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/UsageDataCard.jsx\",\"../cards/UsageDeviceCard.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/UsageDeviceCard.jsx\",\"../cards/UsageStorageCard.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/UsageStorageCard.jsx\",\"../cards/Value.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/cards/Value.jsx\",\"../customization/BarChartProperties.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/customization/BarChartProperties.jsx\",\"../customization/GaugeProperties.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/customization/GaugeProperties.jsx\",\"../customization/RealTimeChartProperties.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/customization/RealTimeChartProperties.jsx\",\"../customization/SingleValueProperties.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/customization/SingleValueProperties.jsx\",\"./Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"./DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\",\"./config/DashboardConfig.json\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/config/DashboardConfig.json\",\"./config/Dashboards.json\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/config/Dashboards.json\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\":[function(require,module,exports){\n'use strict';\n\nvar config = require('./config/DashboardConfig.json');\n\nvar DashboardUtils = {\n\n  // create a unique rfc4122 conform UUID\n  createUUID: function createUUID() {\n    var dec2hex = [];\n    for (var i = 0; i <= 15; i++) {\n      dec2hex[i] = i.toString(16);\n    }\n\n    var uuid = '';\n    for (var j = 1; j <= 36; j++) {\n      if (j === 9 || j === 14 || j === 19 || j === 24) {\n        uuid += '-';\n      } else if (j === 15) {\n        uuid += 4;\n      } else if (j === 20) {\n        uuid += dec2hex[Math.random() * 4 | 0 + 8];\n      } else {\n        uuid += dec2hex[Math.random() * 15 | 0];\n      }\n    }\n    return uuid;\n  },\n\n  setDashboardConfig: function setDashboardConfig(temp) {\n    config = temp;\n  },\n\n  getCapability: function getCapability(name) {\n    var caps = config.capabilities;\n    if (caps) {\n      var value = caps[name];\n      if (value === undefined) {\n        // not set defaults to true\n        value = true;\n      }\n      return value;\n    }\n  },\n\n  getSettings: function getSettings(name) {\n    var settings = config.settings;\n    if (settings) {\n      var value = settings[name];\n      return value;\n    }\n  },\n\n  getDefaultChartColors: function getDefaultChartColors() {\n    var result = config.theme.palette;\n    return result;\n  }\n\n};\n\nmodule.exports = DashboardUtils;\n\n},{\"./config/DashboardConfig.json\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/config/DashboardConfig.json\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/PageCustomization.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar DashboardStore = require('./DashboardStore');\nvar Actions = require('./Actions.jsx');\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\nvar IconLink = require('../../common/components/IconLink.jsx');\nvar Button = require('../../common/components/Button.jsx');\nvar Dialog = require('../../Dialog/Dialog.jsx');\nvar DialogTab = Dialog.DialogTab;\nvar ColorSelection = require('../../common/components/ColorSelection.jsx');\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  category: {\n    marginTop: \"50px\",\n    marginBottom: \"40px\",\n    clear: \"both\"\n  },\n  categoryHeader: {\n    color: \"#152935\",\n    fontSize: \"40px\",\n    fontWeight: \"300\"\n  },\n  component: {\n    borderTop: \"4px solid #4983c6\",\n    marginTop: \"20px\",\n    marginLeft: \"40px\",\n    clear: \"both\"\n  },\n  componentHeader: {\n    fontSize: \"24px\",\n    marginTop: \"5px\",\n    marginBottom: \"5px\"\n  },\n  componentDescription: {\n    fontSize: \"16px\"\n  },\n  componentThumbnail: {\n    width: \"240px\",\n    marginBottom: \"30px\",\n    float: \"right\",\n    marginLeft: \"20px\"\n  },\n  componentButton: {\n    textAlign: \"center\",\n    color: \"#fff\",\n    backgroundColor: \"#1d3649\",\n    display: \"inline-block\",\n    padding: \"10px 40px\",\n    marginTop: \"20px\",\n    marginRight: \"20px\",\n    cursor: \"pointer\"\n  },\n  componentCustomization: {\n    clear: \"both\",\n    marginTop: \"50px\"\n  }\n};\n\nvar PageCustomization = React.createClass({\n  displayName: 'PageCustomization',\n\n  propTypes: {\n    id: RPT.string,\n    action: RPT.string,\n    style: RPT.object,\n    nls: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      id: null,\n      action: null\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      dashboard: null\n    };\n  },\n\n  componentWillMount: function componentWillMount() {\n    var dashboard = null;\n    if (this.props.id) {\n      dashboard = DashboardStore.getDashboard(this.props.id);\n    } else {\n      dashboard = DashboardStore.getEmptyDashboard();\n    }\n    this.setState({\n      dashboard: dashboard\n    });\n  },\n\n  onSelect: function onSelect(name) {\n    var payload = {\n      dashboard: this.state.dashboard\n    };\n    Actions.addDashboard(payload);\n  },\n\n  onTitleChanged: function onTitleChanged(name) {\n    this.state.dashboard.label = name;\n    this.setState({\n      dashboard: this.state.dashboard\n    });\n  },\n\n  render: function render() {\n\n    var self = this;\n    var component = null;\n    if (this.state.dashboard) {\n      var dashboard = this.state.dashboard;\n\n      return React.createElement(\n        Dialog,\n        { theme: this.props.theme },\n        React.createElement(\n          DialogTab,\n          { id: 'Page customization', theme: self.props.theme, label: 'Page customization', cancel: self.props.nls.resolve('Cancel'), submit: self.props.nls.resolve('Submit'), key: 'Page customization' },\n          React.createElement('div', { style: styles.categoryHeader }),\n          React.createElement(\n            'div',\n            { style: styles.component },\n            React.createElement(\n              'div',\n              { style: styles.componentHeader },\n              self.props.nls.resolve(\"CreateDashboardPage_TITLE\")\n            ),\n            React.createElement(\n              'div',\n              { style: styles.componentDescription },\n              self.props.nls.resolve(\"CreateDashboardPage_DESC\")\n            ),\n            React.createElement(Button, { text: self.props.nls.resolve('Create'), isPrimary: true, onClick: function onClick() {\n                self.onSelect();\n              } }),\n            React.createElement(\n              'div',\n              { style: styles.componentCustomization },\n              React.createElement(\n                Label,\n                { label: Messages.resolve('DashboardTitle'), theme: this.props.theme },\n                React.createElement(InputField, { theme: this.props.theme, onChange: this.onTitleChanged, initialValue: dashboard.label })\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement(\n        Dialog,\n        { theme: this.props.theme },\n        'No dashboard found'\n      );\n    }\n  }\n});\n\nmodule.exports = PageCustomization;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dialog/Dialog.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dialog/Dialog.jsx\",\"../../common/components/Button.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Button.jsx\",\"../../common/components/ColorSelection.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/ColorSelection.jsx\",\"../../common/components/IconLink.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/IconLink.jsx\",\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"./Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"./DashboardStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/ReactWrapper.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar WrapperTitle = require('./WrapperTitle.jsx');\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    fontSize: \"14px\",\n    fontFamily: '\"Helvetica Neue\",HelveticaNeue,Helvetica,\"Segoe UI\",Segoe,Calibri,Roboto,\"Droid Sans\",\"Arial Unicode MS\",Arial,sans-serif',\n    backgroundColor: \"white\",\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    borderWidth: \"2px\",\n    borderStyle: \"solid\",\n    position: \"relative\"\n  }\n};\n\n// Documentation link:\n// https://github.ibm.com/IoT/dashboard-component/wiki/React-card-wrapper\n//\n\nvar ReactWrapper = React.createClass({\n  displayName: 'ReactWrapper',\n\n  propTypes: {\n    id: RPT.string,\n    inbound: RPT.array,\n    outbound: RPT.array,\n    module: RPT.string,\n    sticky: RPT.bool,\n    type: RPT.string,\n    category: RPT.string,\n    parameters: RPT.object.isRequired,\n    layout: RPT.string,\n    width: RPT.number,\n    height: RPT.number,\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    nls: RPT.object\n  },\n\n  applyTheme: function applyTheme() {\n    var t = this.props.theme;\n    if (t) {\n      styles.container.fontFamily = t.font;\n      styles.container.color = t.major;\n      styles.container.backgroundColor = t.content;\n      styles.container.borderColor = t.border;\n    }\n  },\n\n  applySchema: function applySchema() {\n    if (this.props.parameters.color !== undefined) {\n      var scheme = this.props.theme.schemes[this.props.parameters.color % this.props.theme.schemes.length];\n      return Object.assign({}, this.props.theme, scheme);\n    }\n    return this.props.theme;\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      width: 0,\n      height: 0\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    window.addEventListener(\"resize\", this.determineDimensions);\n    this.determineDimensions();\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.determineDimensions);\n  },\n\n  componentDidUpdate: function componentDidUpdate() {\n    this.determineDimensions();\n  },\n\n  determineDimensions: function determineDimensions() {\n    var self = this;\n    setTimeout(function () {\n      try {\n        var node = ReactDOM.findDOMNode(self);\n        var width = node.offsetWidth;\n        var height = node.offsetHeight;\n        if (self.state.width != width || self.state.height != height) {\n          self.setState({\n            width: width,\n            height: height\n          });\n        }\n      } catch (e) {\n        // can happen if component is already removed\n      }\n    }, 2);\n  },\n\n  render: function render() {\n\n    this.applyTheme();\n    var theme = this.applySchema();\n\n    var element = null;\n    var style = styles.container;\n\n    var component = null;\n    if (this.props.module) {\n      // new way to get the cards by searching in the module\n      component = IoTFComponents[this.props.module];\n    }\n    if (!component) {\n      // old way to load cards from global IoTCards object\n      component = IoTCards;\n    }\n\n    var componentTokens = this.props.parameters.component.split(\".\");\n    for (var i in componentTokens) {\n      component = component[componentTokens[i]];\n    }\n\n    var title = this.props.parameters.title ? this.props.parameters.title : \"\";\n    if (!this.props.type || !component) {\n      element = React.DOM.div(null, \"Loading\");\n    } else {\n      if (this.props.theme) {\n        style = {};\n        Object.assign(style, styles.container);\n      }\n      var props = {};\n      var height = 52;\n      if (this.props.parameters.component == \"HorizontalLine\") {\n        height = 120;\n        Object.assign(style, styles.container, { \"backgroundColor\": this.props.theme.background, \"borderStyle\": \"none\" });\n      }\n      if (this.props.parameters.component == \"Container\") {\n        height = 120;\n        Object.assign(style, styles.container, { \"backgroundColor\": this.props.theme.background, \"borderStyle\": \"none\" });\n      }\n      Object.assign(props, this.props.parameters, {\n        wrapper: {\n          id: this.props.id,\n          width: this.props.width,\n          height: this.props.height,\n          layout: this.props.layout,\n          realHeight: this.state.height - height,\n          realWidth: this.state.width\n        },\n        theme: theme,\n        nls: this.props.nls,\n        style: {\n          height: this.state.height - height + \"px\",\n          width: this.state.width + \"px\"\n        }\n      });\n\n      element = React.createElement(component, props);\n\n      var dragClass = '';\n\n      if (this.props.layout == 'sm') {\n        dragClass = '';\n        $('#' + this.props.id).css('touch-action', 'auto');\n      } else {\n        dragClass = 'react-draggable-active';\n        $('#' + this.props.id).css('touch-action', 'none');\n      }\n    }\n\n    return React.createElement(\n      'div',\n      { style: style,\n        className: dragClass },\n      React.createElement(WrapperTitle, {\n        id: this.props.id,\n        type: this.props.type,\n        theme: theme,\n        nls: this.props.nls,\n        sticky: this.props.sticky,\n        fullSize: this.props.parameters.component == \"HorizontalLine\" || this.props.parameters.component == \"Container\",\n        mobile: this.props.layout == 'sm',\n        container: this.props.parameters.component == \"Container\",\n        category: this.props.category,\n        showRefresh: this.props.showRefresh,\n        title: title,\n        minimize: this.props.height == 1 && this.props.parameters.component != \"HorizontalLine\"\n      }),\n      element\n    );\n  }\n});\n\nmodule.exports = ReactWrapper;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./WrapperTitle.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/WrapperTitle.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/WrapperTitle.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;\nvar Actions = require('./Actions.jsx');\nvar Icon = require('../../common/components/Icon.jsx');\nvar IconLink = require('../../common/components/IconLink.jsx');\nvar InputField = require('../../common/components/InputField.jsx');\nvar DashboardStore = require('./DashboardStore.js');\nvar RPT = React.PropTypes;\n\nvar styles = {\n  title: {\n    fontSize: \"16px\",\n    backgroundColor: \"white\",\n    color: \"#323232\",\n    paddingLeft: \"70px\",\n    height: \"50px\",\n    lineHeight: \"50px\",\n    letterSpacing: \"0.5px\",\n    textTransform: \"uppercase\",\n    fontWeight: \"500\",\n    overflow: \"hidden\",\n    transition: \"background-color 0.3s ease, height 0.3s ease\",\n    cursor: \"move\"\n  },\n  fullSize: {\n    height: '80px',\n    lineHeight: '80px',\n    fontSize: '40px',\n    fontWeight: '200',\n    color: '#ededed',\n    backgroundColor: '#FFFFFF',\n    borderBottom: '5px solid white',\n    marginBottom: '35px'\n  },\n  actions: {\n    float: 'right',\n    marginLeft: '20px',\n    fontSize: '14px'\n  },\n  actionBox: {\n    whiteSpace: 'nowrap',\n    position: 'relative',\n    float: 'right',\n    marginRight: '30px',\n    marginTop: '13px',\n    lineHeight: '0px'\n  },\n  icon: {\n    marginLeft: '3px',\n    opacity: '1',\n    MozTransition: 'all 0.25s ease',\n    WebkitTransition: 'all 0.25s ease',\n    OTransition: 'all 0.25s ease',\n    transition: 'all 0.25s ease'\n  },\n  actionIcon: {\n    marginLeft: '3px'\n  },\n  anchor: {\n    outline: 'none'\n  },\n  input: {\n    position: 'absolute',\n    backgroundColor: 'silver',\n    fontWeight: '200',\n    color: '#ededed',\n    top: 0,\n    height: \"80px\",\n    lineHeight: \"80px\",\n    fontSize: \"40px\"\n  },\n  categoryIcon: {\n    position: \"relative\",\n    top: \"9px\",\n    left: \"9px\"\n\n  },\n  categoryContainer: {\n    width: \"50px\",\n    position: \"absolute\",\n    height: \"50px\",\n    top: \"0px\",\n    left: \"0px\",\n    transition: \"height 0.3s ease\",\n    overflow: \"hidden\",\n    lineHeight: '0px'\n\n  },\n  expandIcon: {\n    position: \"absolute\",\n    right: \"5px\",\n    top: \"10px\",\n    cursor: \"pointer\",\n    zIndex: 1,\n    overflow: \"hidden\"\n  }\n};\n\nvar WrapperTitle = React.createClass({\n  displayName: 'WrapperTitle',\n\n  propTypes: {\n    title: RPT.string,\n    id: RPT.string,\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    fullSize: RPT.bool,\n    container: RPT.bool,\n    category: RPT.string,\n    sticky: RPT.bool,\n    showRefresh: RPT.bool,\n    minimize: RPT.bool\n  },\n\n  applyTheme: function applyTheme() {\n    var t = this.props.theme;\n    if (t) {\n      styles.title.backgroundColor = t.normal;\n      styles.title.color = t.titleText;\n      styles.fullSize.color = t.textOnCanvas;\n      styles.fullSize.borderBottom = \"5px solid \" + t.textOnCanvas;\n      styles.fullSize.backgroundColor = t.canvas;\n      styles.categoryContainer.backgroundColor = t.light;\n      styles.input.color = t.textOnCanvas;\n    }\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      fullSize: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      showAction: false,\n      maximized: false\n    };\n  },\n\n  onAdd: function onAdd() {\n    Actions.addComponent(this.props.id);\n  },\n\n  toggleActions: function toggleActions() {\n    this.closeActionsLater();\n    this.setState({\n      showActions: !this.state.showActions,\n      maximized: !this.state.showActions\n    });\n  },\n\n  hideActions: function hideActions() {\n    this.setState({\n      showActions: false,\n      maximized: false\n\n    });\n  },\n\n  closeActionsLater: function closeActionsLater() {\n    if (this.closeTimer) {\n      clearTimeout(this.closeTimer);\n      this.closeTimer = null;\n    }\n    var self = this;\n    this.closeTimer = setTimeout(function () {\n      self.hideActions();\n      self.closeTimer = null;\n    }, 3000);\n  },\n\n  handleSettings: function handleSettings() {\n    this.hideActions();\n    if (this.props.fullSize) {\n      // edit a horizontal separator directly\n      this.setState({\n        editFullSize: true\n      });\n    } else {\n      Actions.showDialog({\n        id: this.props.id,\n        type: this.props.type == 'EmptyComponent' ? undefined : this.props.type,\n        action: 'modifyCard'\n      });\n    }\n  },\n\n  handleRemove: function handleRemove() {\n    this.hideActions();\n    Actions.removeComponent({\n      id: this.props.id\n    });\n  },\n\n  handleToggleSize: function handleToggleSize() {\n    this.closeActionsLater();\n    Actions.expandCard(this.props.id, true);\n  },\n\n  handleMoveUp: function handleMoveUp() {\n    this.closeActionsLater();\n    Actions.moveComponent({ direction: 'up', id: this.props.id });\n  },\n\n  handleMoveDown: function handleMoveDown() {\n    this.closeActionsLater();\n    Actions.moveComponent({ direction: 'down', id: this.props.id });\n  },\n\n  onTitleChanged: function onTitleChanged(value) {\n    this.setState({\n      editFullSize: false\n    });\n\n    var payload = {\n      id: this.props.id,\n      type: this.props.type,\n      parameters: {\n        title: value\n      },\n      noReplace: true // just add the value to the component since we do not have the parameters reference\n    };\n    Actions.configureComponent(payload);\n  },\n\n  onExpand: function onExpand() {\n    this.closeActionsLater();\n    this.setState({\n      maximized: true\n    });\n  },\n\n  getDelayForButtonStyle: function getDelayForButtonStyle() {\n    // TODO This does not work since the animation is done with React means.\n    // We want the action pop in one after the other\n    // var delay = {\n    //    MozTransitionDelay: this.buttonDelayCounter + 's',\n    //    WebkitTransitionDelay: this.buttonDelayCounter + 's',\n    //    OTransitionDelay: this.buttonDelayCounter + 's',\n    //    transitionDelay: this.buttonDelayCounter + 's'\n    // }\n    // this.buttonDelayCounter += 1;\n    // return Object.assign({}, styles.icon, delay);\n    return styles.actionButton;\n  },\n\n  render: function render() {\n    this.buttonDelayCounter = 0;\n    this.applyTheme();\n\n    var title = styles.title;\n\n    var add = '';\n    var element = '';\n\n    if (this.props.title === undefined) {\n      element = 'Loading...';\n    } else {\n      if (this.props.fullSize) {\n        title = styles.fullSize;\n      }\n      if (this.props.container) {\n        add = React.createElement(\n          IconLink,\n          { theme: this.props.theme, color: this.props.fullSize ? this.props.theme.textOnCanvas : this.props.theme.content, icon: 'add-circle-outline', size: '24', style: styles.actions, action: this.onAdd },\n          'Add card'\n        );\n      }\n      if (this.state.editFullSize) {\n        element = React.createElement(InputField, { style: styles.input, theme: this.props.theme, onSubmit: this.onTitleChanged, initialValue: this.props.title });\n      } else {\n        element = this.props.title;\n      }\n    }\n\n    var maximizeIcon = this.state.maximized ? 'fullscreen-exit' : 'fullscreen';\n\n    var actionIconClosed = Object.assign({}, styles.actionIcon, {\n      display: 'none'\n    });\n\n    var actionsAnchorOpen = Object.assign({}, styles.icon, {\n      opacity: '0.3',\n      MozTransform: 'rotate(-90deg)',\n      WebkitTransform: 'rotate(-90deg)',\n      OTransform: 'rotate(-90deg)',\n      transform: 'rotate(-90deg)'\n    });\n\n    var classNames = '';\n    var settings = '';\n    var remove = '';\n    var actionsAnchor = '';\n    var sizeAnchor = '';\n    var refreshAnchor = '';\n    var moveUpAnchor = '';\n    var moveDownAnchor = '';\n    var actionBtns = [];\n    var titleContainer = [];\n\n    if (!this.props.mobile) {\n      classNames = 'wrapper-title react-draggable-active';\n    }\n\n    console.log(\"WRAPPER EXPERIMENTAL\", DashboardStore.isExperimentalMode());\n\n    if (!this.props.mobile) {\n      if ((!this.props.sticky || this.props.fullSize) && DashboardStore.isExperimentalMode()) {\n        settings = React.createElement(Icon, { key: 'settings', theme: this.props.theme, style: this.getDelayForButtonStyle(), color: this.props.fullSize ? this.props.theme.textOnCanvas : this.props.theme.content, icon: 'settings', onClick: this.handleSettings });\n        if (this.state.showActions) {\n          actionBtns.push(settings);\n        }\n      }\n      if (!this.props.sticky && DashboardStore.isExperimentalMode()) {\n        remove = React.createElement(Icon, { key: 'delete', theme: this.props.theme, style: this.getDelayForButtonStyle(), color: this.props.fullSize ? this.props.theme.textOnCanvas : this.props.theme.content, icon: 'delete', onClick: this.handleRemove });\n        if (this.state.showActions) {\n          actionBtns.push(remove);\n        }\n      }\n    }\n\n    if (this.props.mobile && this.state.showActions) {\n      moveUpAnchor = React.createElement(Icon, { key: 'moveUp', theme: this.props.theme, style: this.getDelayForButtonStyle(), color: this.props.fullSize ? this.props.theme.textOnCanvas : this.props.theme.content, icon: 'arrow-up', onClick: this.handleMoveUp });\n      moveDownAnchor = React.createElement(Icon, { key: 'moveDown', theme: this.props.theme, style: this.getDelayForButtonStyle(), color: this.props.fullSize ? this.props.theme.textOnCanvas : this.props.theme.content, icon: 'arrow-down', onClick: this.handleMoveDown });\n      actionBtns.push(moveUpAnchor);\n      actionBtns.push(moveDownAnchor);\n    }\n\n    actionsAnchor = React.createElement(\n      'a',\n      { key: 'dots', style: styles.anchor, tabIndex: '1', onBlur: this.closeActionLater, href: 'javascript:void(0)' },\n      React.createElement(Icon, { theme: this.props.theme, style: this.state.showActions ? actionsAnchorOpen : styles.icon, color: this.props.fullSize ? this.props.theme.textOnCanvas : this.props.theme.content, icon: 'dots', onClick: this.toggleActions })\n    );\n    sizeAnchor = React.createElement(Icon, { key: 'sizeAnchor', theme: this.props.theme, style: this.getDelayForButtonStyle(), color: this.props.fullSize ? this.props.theme.textOnCanvas : this.props.theme.content, icon: maximizeIcon, onClick: this.handleToggleSize });\n    if (this.state.showActions) {\n      actionBtns.push(sizeAnchor);\n    }\n\n    if (this.state.showActions && this.props.showRefresh) {\n      refreshAnchor = React.createElement(Icon, { key: 'refresh', theme: this.props.theme, style: this.getDelayForButtonStyle(), color: this.props.fullSize ? this.props.theme.textOnCanvas : this.props.theme.content, icon: 'refresh' });\n      actionBtns.push(refreshAnchor);\n    }\n\n    if (!this.state.showActions) {\n      titleContainer.push(React.createElement(\n        'span',\n        { key: 'titlecontainer', style: styles.text, className: classNames },\n        !this.state.showActions ? element : ''\n      ));\n    }\n\n    // assign an icon for the category\n    var validCategories = [\"Basic\", \"Alert\", \"Devices\", \"Test\", \"Custom\", \"Usage\", \"Sample\"];\n    var iconName = this.props.category;\n\n    if (!iconName || validCategories.indexOf(iconName) == -1) {\n      iconName = \"Test\";\n    }\n\n    var expandIcon = \"\";\n    var categoryContainer = styles.categoryContainer;\n    if (this.props.minimize && !this.state.maximized) {\n      title = Object.assign({}, title, { height: \"5px\" });\n      categoryContainer = Object.assign({}, styles.categoryContainer, { height: \"5px\" });\n      expandIcon = React.createElement(\n        'a',\n        { style: styles.expandIcon, tabIndex: '1', href: 'javascript:void(0)' },\n        React.createElement(Icon, { theme: this.props.theme, style: styles.expand, color: this.props.theme.major, icon: 'dots', onClick: this.onExpand })\n      );\n    }\n\n    var category = \"\";\n    if (!this.props.fullSize) {\n      category = React.createElement(\n        'div',\n        {\n          key: 'category',\n          style: categoryContainer,\n          theme: this.props.theme\n        },\n        React.createElement(Icon, { theme: this.props.theme, style: styles.categoryIcon, size: 32, color: this.props.fullSize ? this.props.theme.textOnCanvas : this.props.theme.content, icon: iconName })\n      );\n    }\n\n    return React.createElement(\n      'div',\n      {\n        style: title\n        //onMouseOut={this.hideActions}\n        , className: classNames\n      },\n      category,\n      React.createElement(\n        'div',\n        { style: styles.actionBox },\n        React.createElement(\n          ReactCSSTransitionGroup,\n          { transitionName: 'actionIcons', transitionEnterTimeout: 500, transitionLeaveTimeout: 500 },\n          actionBtns\n        ),\n        actionsAnchor\n      ),\n      add,\n      React.createElement(\n        ReactCSSTransitionGroup,\n        { transitionName: 'wrapperTitle', transitionEnterTimeout: 500, transitionLeaveTimeout: 500 },\n        titleContainer\n      ),\n      expandIcon\n    );\n  }\n});\n\nmodule.exports = WrapperTitle;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\",\"../../common/components/IconLink.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/IconLink.jsx\",\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"./Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"./DashboardStore.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/config/DashboardConfig.json\":[function(require,module,exports){\nmodule.exports={\n  \"theme\": {\n    \"canvas\": \"#142a36\",\n    \"lightText\": \"#F7F7F7\",\n    \"border\": \"#142a36\",\n    \"title\": \"#E6E6E6\",\n    \"titleText\": \"#F7F7F7\",\n    \"textOnCanvas\": \"#F7F7F7\",\n    \"content\": \"#FDFDFD\",\n    \"major\": \"#2E3636\",\n    \"minor\": \"#899399\",\n    \"least\": \"#a9acac\",\n    \"accent\": \"#4581E0\",\n    \"GOOD\": \"#8CD210\",\n    \"FAIR\": \"#899399\",\n    \"CRITICAL\": \"#FF5050\",\n    \"font\": \"'Helvetica Neue',HelveticxfaNeue,Helvetica,'Segoe UI',Segoe,Calibri,Roboto,'Droid Sans','Arial Unicode MS',Arial,sans-serif\",\n    \"logo\": \"/assets/dashboard/iot.jpg\",\n\n    \"light\": \"#c7c7c7\",\n    \"normal\": \"#959595\",\n    \"dark\": \"#5a5a5a\",\n\n    \"palette\": [\"#5596E6\", \"#4178BE\", \"#325C80\", \"#264A60\", \"#1D3649\", \"#323c3c\", \"#3c4646\", \"#5a6464\", \"#6d7777\", \"#959f9f\"],\n\n    \"schemes\": [\n      {\n        \"name\": 0,\n        \"light\": \"#9855D4\",\n        \"normal\": \"#704199\",\n        \"dark\": \"#311a41\",\n        \"palette\": [\"#ba8FF7\", \"#9855D4\", \"#734098\", \"#562f72\", \"#412356\", \"#311a41\"]\n      },\n      {\n        \"name\": 1,\n        \"light\": \"#db2780\",\n        \"normal\": \"#9e215f\",\n        \"dark\": \"#3a0B2E\",\n        \"palette\": [\"#ff3ca0\", \"#db2780\", \"#a6266e\", \"#7c1c58\", \"#601146\", \"#3a0B2E\"]\n      },\n      {\n        \"name\": 2,\n        \"light\": \"#00bfa0\",\n        \"normal\": \"#068375\",\n        \"dark\": \"#012b22\",\n        \"palette\": [\"#41d6c3\", \"#00b4a0\", \"#008571\", \"#006d5d\", \"#005448\", \"#012b22\"]\n      },\n      {\n        \"name\": 3,\n        \"light\": \"#4178be\",\n        \"normal\": \"#33598a\",\n        \"dark\": \"#152935\",\n        \"palette\": [\"#5596e6\", \"#4178be\", \"#325c80\", \"#264a60\", \"#1d3649\", \"#152935\"]\n      },\n      {\n        \"name\": 4,\n        \"light\": \"#00aec9\",\n        \"normal\": \"#067f92\",\n        \"dark\": \"#002e36\",\n        \"palette\": [\"#00b3cf\", \"#00aec9\", \"#007182\", \"#005b69\", \"#00454f\", \"#002e36\"]\n      }\n    ]\n  },\n\n  \"capabilities\": {\n    \"multipleDashboards\": false,\n    \"multiplePages\": false,\n    \"useOldDialogs\": false,\n    \"showControls\": false,\n    \"breakpoints\": {\"xxl\": 1649, \"xl\": 1324, \"lg\": 999, \"md\": 674, \"sm\": 349},\n    \"cols\": {\"xxl\": 10, \"xl\": 8, \"lg\": 6, \"md\": 4, \"sm\": 2},\n    \"rowHeight\": 105,\n    \"margin\": [25,25]\n  },\n\n  \"settings\": {\n    \"configRepositoryURL\": \"http://configrepositoryservice.mybluemix.net/rest\",\n    \"configRepositoryUser\": \"admin\",\n    \"configRepositoryPassword\": \"admin\",\n    \"configName\": \"MyDashboardConfig\"\n  },\n\n  \"components\": [\n    {\n      \"name\": \"DeviceTypes\",\n      \"displayName\": \"COMP_TITLE_DeviceTypes\",\n      \"description\": \"COMP_DESC_DeviceTypes\",\n      \"category\": \"Usage\",\n      \"cardType\": \"NO_DATAPOINTS\",\n      \"thumbnail\": \"device-types\",\n      \"require\": [\"../cards/DeviceTypes.jsx\"],\n      \"wrapper\": \"ReactWrapper\",\n      \"sizes\": [[2,3],[2,4],[4,3],[4,4]],\n      \"sticky\": false,\n      \"showRefresh\": true,\n      \"parameters\" : {\n        \"component\": \"DeviceTypes\",\n        \"title\": \"Device types\"\n      }\n    },\n    {\n      \"name\": \"UsageDeviceCard\",\n      \"displayName\": \"COMP_TITLE_UsageDevice\",\n      \"description\": \"COMP_DESC_UsageDevice\",\n      \"category\": \"Usage\",\n      \"cardType\": \"NO_DATAPOINTS\",\n      \"thumbnail\": \"connected-devices\",\n      \"require\": [\"../cards/UsageDeviceCard.jsx\"],\n      \"wrapper\": \"ReactWrapper\",\n      \"sizes\": [[2,1],[2,2],[2,3],[3,4],[4,4]],\n      \"sticky\": false,\n      \"showRefresh\": true,\n      \"parameters\" : {\n        \"component\": \"UsageDeviceCard\",\n        \"title\": \"Device connections\"\n      }\n    },\n    {\n      \"name\": \"UsageDataCard\",\n      \"displayName\": \"COMP_TITLE_UsageData\",\n      \"description\": \"COMP_DESC_UsageData\",\n      \"category\": \"Usage\",\n      \"cardType\": \"NO_DATAPOINTS\",\n      \"thumbnail\": \"traffic-consumption\",\n      \"require\": [\"../cards/UsageDataCard.jsx\"],\n      \"wrapper\": \"ReactWrapper\",\n      \"sizes\": [[2,1],[2,2],[2,3],[3,4],[4,4]],\n      \"sticky\": false,\n      \"showRefresh\": true,\n      \"parameters\" : {\n        \"component\": \"UsageDataCard\",\n        \"title\": \"Data consumed\"\n      }\n    },\n    {\n      \"name\": \"UsageStorageCard\",\n      \"displayName\": \"COMP_TITLE_UsageStorage\",\n      \"description\": \"COMP_DESC_UsageStorage\",\n      \"category\": \"Usage\",\n      \"cardType\": \"NO_DATAPOINTS\",\n      \"thumbnail\": \"storage-consumption\",\n      \"require\": [\"../cards/UsageStorageCard.jsx\"],\n      \"wrapper\": \"ReactWrapper\",\n      \"sizes\": [[2,1],[2,2],[2,3],[3,4],[4,4]],\n      \"sticky\": false,\n      \"showRefresh\": true,\n      \"parameters\" : {\n        \"component\": \"UsageStorageCard\",\n        \"title\": \"Storage consumed\"\n      }\n    },\n    {\n      \"name\": \"HorizontalLine\",\n      \"displayName\": \"COMP_TITLE_HorizontalLine\",\n      \"description\": \"COMP_DESC_HorizontalLine\",\n      \"category\": \"Basic\",\n      \"cardType\": \"NO_DATAPOINTS\",\n      \"thumbnail\": \"horizontal-seperator\",\n      \"require\": [\"../cards/HorizontalLine.jsx\"],\n      \"wrapper\": \"ReactWrapper\",\n      \"sizes\": [[2,1],[3,1],[4,1],[6,1],[8,1]],\n      \"sticky\": false,\n      \"parameters\" : {\n        \"component\": \"HorizontalLine\",\n        \"title\": \"Separator\"\n      }\n    },\n\n    {\n      \"name\": \"RealTimeChart\",\n      \"displayName\": \"COMP_TITLE_RealTimeChart\",\n      \"description\": \"COMP_DESC_RealTimeChart\",\n      \"thumbnail\" : \"line-chart\",\n      \"category\": \"Devices\",\n      \"cardType\": \"\",\n      \"require\": [\"../cards/RealTimeChart.jsx\", \"../customization/RealTimeChartProperties.jsx\"],\n      \"wrapper\": \"ReactWrapper\",\n      \"sizes\": [[2,3],[2,4],[3,4],[4,4]],\n      \"parameters\" : {\n        \"component\": \"RealTimeChart\",\n        \"title\": \"Real time chart\",\n        \"autoscroll\": true\n      },\n      \"customization\": \"RealTimeChartProperties\"\n    },\n    {\n      \"name\": \"BarChart\",\n      \"displayName\": \"COMP_TITLE_BarChart\",\n      \"description\": \"COMP_DESC_BarChart\",\n      \"thumbnail\" : \"bar-chart\",\n      \"category\": \"Devices\",\n      \"cardType\": \"\",\n      \"require\": [\"../cards/BarChart.jsx\", \"../customization/BarChartProperties.jsx\"],\n      \"wrapper\": \"ReactWrapper\",\n      \"sizes\": [[2,3],[3,3],[4,4]],\n      \"parameters\" : {\n       \"title\":\"\",\n        \"component\": \"BarChart\",\n        \"title\": \"Bar chart\"\n      },\n      \"customization\": \"BarChartProperties\"\n    },\n    {\n      \"name\": \"DonutChart\",\n      \"displayName\": \"COMP_TITLE_DonutChart\",\n      \"description\": \"COMP_DESC_DonutChart\",\n      \"thumbnail\" : \"pie-chart\",\n      \"category\": \"Devices\",\n      \"cardType\": \"\",\n      \"require\": [\"../cards/DonutChart.jsx\"],\n      \"wrapper\": \"ReactWrapper\",\n      \"sizes\": [[2,3],[2,4],[4,3],[4,4]],\n      \"parameters\" : {\n       \"title\":\"\",\n        \"component\": \"DonutChart\",\n        \"title\": \"Donut chart\"\n      }\n    },\n    {\n      \"name\": \"Value\",\n      \"displayName\": \"COMP_TITLE_Value\",\n      \"description\": \"COMP_DESC_Value\",\n      \"thumbnail\" : \"text-based\",\n      \"category\": \"Devices\",\n      \"cardType\": \"\",\n      \"require\": [\"../cards/Value.jsx\", \"../customization/GaugeProperties.jsx\"],\n      \"wrapper\": \"ReactWrapper\",\n      \"sizes\": [[2,1],[2,2],[2,3],[3,4],[4,4]],\n      \"parameters\" : {\n       \"title\":\"\",\n        \"component\": \"Value\",\n        \"title\": \"Value\"\n      },\n      \"customization\": \"SingleValueProperties\"\n    },\n    {\n      \"name\": \"Gauge\",\n      \"displayName\": \"COMP_TITLE_Gauge\",\n      \"description\": \"COMP_DESC_Gauge\",\n      \"thumbnail\" : \"gauge\",\n      \"category\": \"Devices\",\n      \"cardType\": \"\",\n      \"require\": [\"../cards/Gauge.jsx\", \"../customization/GaugeProperties.jsx\"],\n      \"wrapper\": \"ReactWrapper\",\n      \"sizes\": [[2,1],[2,4],[4,4]],\n      \"parameters\" : {\n        \"component\": \"Gauge\",\n        \"title\": \"Gauge\"\n      },\n      \"customization\": \"GaugeProperties\"\n    }\n\n  ]}\n\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/config/Dashboards.json\":[function(require,module,exports){\nmodule.exports={\n  \"settings\": {\n    \"defaultDashboard\": \"a4027b91-b2b7-4211-a3e1-ad1c472b568a\"\n  },\n  \"dashboards\": [\n    {\n      \"name\": \"a4027b91-b2b7-4211-a3e1-ad1c472b568a\",\n      \"label\": \"Overview\",\n      \"icon\": \"res/images/icons/smarterHome()/gs7.png\",\n      \"image\": \"res/images/groups/default.jpg\",\n      \"thumb\": \"res/images/groups/smarterHome()/g7.png\",\n      \"hidden\": false,\n      \"type\": \"TILE\",\n      \"locked\": false,\n      \"preset\": false,\n      \"layouts\": {\n        \"xxl\": [\n          {\n            \"w\": 6,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 12,\n            \"i\": \"c9ad2d50-9685-4a32-9558-a6bb754cc1c7\"\n          },\n          {\n            \"w\": 6,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 0,\n            \"i\": \"570e15b4-9942-4c64-887d-cca423135ed0\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 3,\n            \"x\": 0,\n            \"y\": 1,\n            \"i\": \"aae20d34-a862-467c-95be-76a6eaacab8e\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 4,\n            \"y\": 4,\n            \"i\": \"c0909ede-4a19-418a-9caa-e7b84a833da4\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 4,\n            \"x\": 0,\n            \"y\": 4,\n            \"i\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d9d\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 4,\n            \"x\": 0,\n            \"y\": 8,\n            \"i\": \"5d707e57-4edd-461a-bd72-115d52285488\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 4,\n            \"y\": 7,\n            \"i\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d90\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 4,\n            \"y\": 1,\n            \"i\": \"5d707e57-4edd-461a-bd72-115d52285489\"\n          }\n        ],\n        \"xl\": [\n          {\n            \"w\": 6,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 12,\n            \"i\": \"c9ad2d50-9685-4a32-9558-a6bb754cc1c7\"\n          },\n          {\n            \"w\": 6,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 0,\n            \"i\": \"570e15b4-9942-4c64-887d-cca423135ed0\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 3,\n            \"x\": 0,\n            \"y\": 1,\n            \"i\": \"aae20d34-a862-467c-95be-76a6eaacab8e\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 4,\n            \"y\": 4,\n            \"i\": \"c0909ede-4a19-418a-9caa-e7b84a833da4\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 4,\n            \"x\": 0,\n            \"y\": 4,\n            \"i\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d9d\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 4,\n            \"x\": 0,\n            \"y\": 8,\n            \"i\": \"5d707e57-4edd-461a-bd72-115d52285488\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 4,\n            \"y\": 7,\n            \"i\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d90\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 4,\n            \"y\": 1,\n            \"i\": \"5d707e57-4edd-461a-bd72-115d52285489\"\n          }\n        ],\n        \"lg\": [\n          {\n            \"w\": 6,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 12,\n            \"i\": \"c9ad2d50-9685-4a32-9558-a6bb754cc1c7\"\n          },\n          {\n            \"w\": 6,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 0,\n            \"i\": \"570e15b4-9942-4c64-887d-cca423135ed0\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 3,\n            \"x\": 0,\n            \"y\": 1,\n            \"i\": \"aae20d34-a862-467c-95be-76a6eaacab8e\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 4,\n            \"y\": 4,\n            \"i\": \"c0909ede-4a19-418a-9caa-e7b84a833da4\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 4,\n            \"x\": 0,\n            \"y\": 4,\n            \"i\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d9d\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 4,\n            \"x\": 0,\n            \"y\": 8,\n            \"i\": \"5d707e57-4edd-461a-bd72-115d52285488\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 4,\n            \"y\": 7,\n            \"i\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d90\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 4,\n            \"y\": 1,\n            \"i\": \"5d707e57-4edd-461a-bd72-115d52285489\"\n          }\n        ],\n        \"md\": [\n          {\n            \"w\": 4,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 14,\n            \"i\": \"c9ad2d50-9685-4a32-9558-a6bb754cc1c7\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 0,\n            \"i\": \"570e15b4-9942-4c64-887d-cca423135ed0\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 4,\n            \"x\": 0,\n            \"y\": 1,\n            \"i\": \"aae20d34-a862-467c-95be-76a6eaacab8e\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 2,\n            \"y\": 1,\n            \"i\": \"c0909ede-4a19-418a-9caa-e7b84a833da4\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 4,\n            \"x\": 0,\n            \"y\": 6,\n            \"i\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d9d\"\n          },\n          {\n            \"w\": 4,\n            \"h\": 4,\n            \"x\": 0,\n            \"y\": 10,\n            \"i\": \"5d707e57-4edd-461a-bd72-115d52285488\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 5,\n            \"i\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d90\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 2,\n            \"x\": 2,\n            \"y\": 4,\n            \"i\": \"5d707e57-4edd-461a-bd72-115d52285489\"\n          }\n        ],\n        \"sm\": [\n          {\n            \"w\": 2,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 15,\n            \"i\": \"c9ad2d50-9685-4a32-9558-a6bb754cc1c7\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 0,\n            \"i\": \"570e15b4-9942-4c64-887d-cca423135ed0\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 0,\n            \"y\": 1,\n            \"i\": \"aae20d34-a862-467c-95be-76a6eaacab8e\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 0,\n            \"y\": 4,\n            \"i\": \"c0909ede-4a19-418a-9caa-e7b84a833da4\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 14,\n            \"i\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d9d\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 1,\n            \"x\": 0,\n            \"y\": 13,\n            \"i\": \"5d707e57-4edd-461a-bd72-115d52285488\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 0,\n            \"y\": 10,\n            \"i\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d90\"\n          },\n          {\n            \"w\": 2,\n            \"h\": 3,\n            \"x\": 0,\n            \"y\": 7,\n            \"i\": \"5d707e57-4edd-461a-bd72-115d52285489\"\n          }\n        ]\n      },\n      \"components\": [\n        {\n          \"id\": \"aae20d34-a862-467c-95be-76a6eaacab8e\",\n          \"type\": \"DeviceTypes\",\n          \"parameters\": {\n            \"title\": \"Device types\",\n            \"component\": \"DeviceTypes\",\n            \"color\": 3,\n            \"size\": {\n              \"sd\": 0,\n              \"md\": 1,\n              \"lg\": 2,\n              \"xl\": 1,\n              \"xxl\": 2\n            }\n          }\n        },\n        {\n          \"id\": \"c0909ede-4a19-418a-9caa-e7b84a833da4\",\n          \"type\": \"UsageDeviceCard\",\n          \"parameters\": {\n            \"component\": \"UsageDeviceCard\",\n            \"title\": \"Device connections\",\n            \"color\": 3,\n            \"size\": {\n              \"sd\": 0,\n              \"md\": 0,\n              \"lg\": 2,\n              \"xl\": 2,\n              \"xxl\": 2\n            }\n          }\n        },\n        {\n          \"id\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d9d\",\n          \"type\": \"UsageDataCard\",\n          \"parameters\": {\n            \"component\": \"UsageDataCard\",\n            \"title\": \"Data consumed\",\n            \"color\": 3,\n            \"size\": {\n              \"sd\": 0,\n              \"md\": 0,\n              \"lg\": 2,\n              \"xl\": 4,\n              \"xxl\": 2\n            }\n          }\n        },\n        {\n          \"id\": \"5d707e57-4edd-461a-bd72-115d52285488\",\n          \"type\": \"UsageStorageCard\",\n          \"parameters\": {\n            \"component\": \"UsageStorageCard\",\n            \"title\": \"Storage consumed\",\n            \"color\": 3,\n            \"size\": {\n              \"sd\": 0,\n              \"md\": 0,\n              \"lg\": 4,\n              \"xl\": 4,\n              \"xxl\": 4\n            }\n          }\n        },\n        {\n          \"id\": \"34c03b0d-29ae-4d50-8d2c-3d34a07b8d90\",\n          \"type\": \"UsageDataCard\",\n          \"parameters\": {\n            \"component\": \"UsageDataCard\",\n            \"title\": \"Data consumed\",\n            \"color\": 3,\n            \"size\": {\n              \"sd\": 0,\n              \"md\": 0,\n              \"lg\": 2,\n              \"xl\": 4,\n              \"xxl\": 2\n            }\n          }\n        },\n        {\n          \"id\": \"5d707e57-4edd-461a-bd72-115d52285489\",\n          \"type\": \"UsageStorageCard\",\n          \"parameters\": {\n            \"component\": \"UsageStorageCard\",\n            \"title\": \"Storage consumed\",\n            \"color\": 3,\n            \"size\": {\n              \"sd\": 0,\n              \"md\": 1,\n              \"lg\": 2,\n              \"xl\": 4,\n              \"xxl\": 4\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"configTimestamp\": 1450867418073\n}\n\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/Const.js\":[function(require,module,exports){\n\"use strict\";\n\nvar Const = {\n  \"CONNECTED\": \"CONNECTED\",\n  \"DISCONNECTED\": \"DISCONNECTED\",\n  \"PAUSED\": \"PAUSED\",\n\n  // card type tags (use as comma separated list)\n  \"NO_DATAPOINTS\": \"NO_DATAPOINTS\", // Do not show data set definition (e.g. usage cards)\n  \"SINGLE_DATAPOINT\": \"SINGLE_DATAPOINT\", // Only one data point can be defined (not used yet)\n  \"EVENT_ONLY\": \"EVENT_ONLY\", // Do not show property field in data point definition (e.g. weather service)\n  \"SPECIFIC\": \"SPECIFIC\" // Select properties with a special meaning (e.g. elevator)\n};\n\nmodule.exports = Const;\n\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/Utils.js\":[function(require,module,exports){\n'use strict';\n\nvar Utils = {\n\n  // create a unique rfc4122 conform UUID\n  createUUID: function createUUID() {\n    var dec2hex = [];\n    for (var i = 0; i <= 15; i++) {\n      dec2hex[i] = i.toString(16);\n    }\n\n    var uuid = '';\n    for (var j = 1; j <= 36; j++) {\n      if (j === 9 || j === 14 || j === 19 || j === 24) {\n        uuid += '-';\n      } else if (j === 15) {\n        uuid += 4;\n      } else if (j === 20) {\n        uuid += dec2hex[Math.random() * 4 | 0 + 8];\n      } else {\n        uuid += dec2hex[Math.random() * 15 | 0];\n      }\n    }\n    return uuid;\n  }\n\n};\n\nmodule.exports = Utils;\n\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/regex-email.js\":[function(require,module,exports){\n\"use strict\";\n\n//\n// Regular Expression for URL validation\n//\n// Author: Diego Perini\n// Updated: 2010/12/05\n// License: MIT\n//\n// Copyright (c) 2010-2013 Diego Perini (http://www.iport.it)\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation\n// files (the \"Software\"), to deal in the Software without\n// restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the\n// Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n// OTHER DEALINGS IN THE SOFTWARE.\n//\n// the regular expression composed & commented\n// could be easily tweaked for RFC compliance,\n// it was expressly modified to fit & satisfy\n// these test for an URL shortener:\n//\n//   http://mathiasbynens.be/demo/url-regex\n//\n// Notes on possible differences from a standard/generic validation:\n//\n// - utf-8 char class take in consideration the full Unicode range\n// - TLDs have been made mandatory so single names like \"localhost\" fails\n// - protocols have been restricted to ftp, http and https only as requested\n//\n// Changes:\n//\n// - IP address dotted notation validation, range: 1.0.0.0 - 223.255.255.255\n//   first and last IP address of each class is considered invalid\n//   (since they are broadcast/network addresses)\n//\n// - Added exclusion of private, reserved and/or local networks ranges\n//\n// - Made starting path slash optional (http://example.com?foo=bar)\n//\n// - Allow a dot (.) at the end of hostnames (http://example.com.)\n//\n// Compressed one-line versions:\n//\n// Javascript version\n//\n// /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i\n//\n// PHP version\n//\n// _^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\x{00a1}-\\x{ffff}0-9]-*)*[a-z\\x{00a1}-\\x{ffff}0-9]+)(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}0-9]-*)*[a-z\\x{00a1}-\\x{ffff}0-9]+)*(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$_iuS\n//\nvar re_weburl = new RegExp(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/);\n\nmodule.exports = re_weburl;\n\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/regex-weburl.js\":[function(require,module,exports){\n\"use strict\";\n\n//\n// Regular Expression for URL validation\n//\n// Author: Diego Perini\n// Updated: 2010/12/05\n// License: MIT\n//\n// Copyright (c) 2010-2013 Diego Perini (http://www.iport.it)\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation\n// files (the \"Software\"), to deal in the Software without\n// restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the\n// Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n// OTHER DEALINGS IN THE SOFTWARE.\n//\n// the regular expression composed & commented\n// could be easily tweaked for RFC compliance,\n// it was expressly modified to fit & satisfy\n// these test for an URL shortener:\n//\n//   http://mathiasbynens.be/demo/url-regex\n//\n// Notes on possible differences from a standard/generic validation:\n//\n// - utf-8 char class take in consideration the full Unicode range\n// - TLDs have been made mandatory so single names like \"localhost\" fails\n// - protocols have been restricted to ftp, http and https only as requested\n//\n// Changes:\n//\n// - IP address dotted notation validation, range: 1.0.0.0 - 223.255.255.255\n//   first and last IP address of each class is considered invalid\n//   (since they are broadcast/network addresses)\n//\n// - Added exclusion of private, reserved and/or local networks ranges\n//\n// - Made starting path slash optional (http://example.com?foo=bar)\n//\n// - Allow a dot (.) at the end of hostnames (http://example.com.)\n//\n// Compressed one-line versions:\n//\n// Javascript version\n//\n// /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i\n//\n// PHP version\n//\n// _^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\x{00a1}-\\x{ffff}0-9]-*)*[a-z\\x{00a1}-\\x{ffff}0-9]+)(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}0-9]-*)*[a-z\\x{00a1}-\\x{ffff}0-9]+)*(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$_iuS\n//\nvar re_weburl = new RegExp(\"^\" +\n// protocol identifier\n\"(?:(?:https?|ftp)://)\" +\n// user:pass authentication\n\"(?:\\\\S+(?::\\\\S*)?@)?\" + \"(?:\" +\n// IP address exclusion\n// private & local networks\n\"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" + \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" + \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\" +\n// IP address dotted notation octets\n// excludes loopback network 0.0.0.0\n// excludes reserved space >= 224.0.0.0\n// excludes network & broacast addresses\n// (first & last IP address of each class)\n\"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" + \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" + \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" + \"|\" +\n// host name\n\"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)\" +\n// domain name\n\"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*\" +\n// TLD identifier\n\"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\" +\n// TLD may end with dot\n\"\\\\.?\" + \")\" +\n// port number\n\"(?::\\\\d{2,5})?\" +\n// resource path\n\"(?:[/?#]\\\\S*)?\" + \"$\", \"i\");\n\nmodule.exports = re_weburl;\n\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/DeviceMap/DeviceMap.jsx\":[function(require,module,exports){\n'use strict';\n\nvar DeviceMap = {};\nDeviceMap.DeviceMap = require('./cards/DeviceMap.jsx');\nDeviceMap.DeviceMapProperties = require('./customization/DeviceMapProperties.jsx');\n\nmodule.exports = DeviceMap;\n\n},{\"./cards/DeviceMap.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/DeviceMap/cards/DeviceMap.jsx\",\"./customization/DeviceMapProperties.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/DeviceMap/customization/DeviceMapProperties.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/DeviceMap/cards/DeviceMap.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\nvar Map = require('../components/MapView.jsx');\nvar MapPin = require('../components/MapPin.jsx');\n\n/**\n* Map to show device location\n*/\nvar styles = {\n  container: {\n    height: \"100%\",\n    width: \"100%\"\n  }\n};\n\nvar DeviceMap = React.createClass({\n  displayName: 'DeviceMap',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    showMyLocation: RPT.bool,\n    type: RPT.string,\n    maxZoom: RPT.number,\n    longitude: RPT.string,\n    latitude: RPT.string,\n    plots: RPT.array,\n    demo: RPT.bool\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      showMyLocation: true,\n      maxZoom: 18,\n      type: \"osm\",\n      plots: []\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      model: []\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        IoTFDeviceStore.Actions.startEventWatch(plot.device, plot.event);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var model = this.state.model;\n\n    if (this.props.longitude && this.props.latitude) {\n      var found = false;\n      for (var i in this.props.plots) {\n        var point = {};\n        var plot = this.props.plots[i];\n        if (plot) {\n          if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n            var obj = Object.assign({}, payload.deviceEvent.data);\n\n            point.lng = this.resolvePropertyPayload(obj, this.props.longitude);\n            point.lat = this.resolvePropertyPayload(obj, this.props.latitude);\n            point.id = plot.id;\n            point.label = plot.label;\n            found = true;\n            if (point.lng && point.lat) {\n              // remove old point\n              for (var t in model) {\n                if (point.id == model[t].id) {\n                  model.splice(t, 1);\n                  break;\n                }\n              }\n              model.push(point);\n            }\n          }\n        }\n      }\n      if (found) {\n        this.setState({\n          model: model\n        });\n      }\n    }\n  },\n\n  resolvePropertyPayload: function resolvePropertyPayload(obj, property) {\n    var property = IoTFDeviceStore.normalizeProperty(property);\n    var obj = obj[property];\n\n    if (obj !== undefined) {\n      return obj;\n    } else {\n      return undefined;\n    }\n  },\n\n  onClick: function onClick(payload) {\n    console.log(\"clicked: \" + payload);\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n    var self = this;\n    return React.createElement(\n      'div',\n      { style: style },\n      React.createElement(\n        Map,\n        { theme: this.props.theme, width: this.props.wrapper.realWidth, height: this.props.wrapper.realHeight, onClick: this.onClick, maxZoom: this.props.maxZoom, type: this.props.type, showMyLocation: this.props.showMyLocation },\n        this.state.model.map(function (pin) {\n          return React.createElement(MapPin, { key: pin.id, theme: self.props.theme, lng: pin.lng, lat: pin.lat, id: pin.id, payload: { id: pin.id } });\n        })\n      )\n    );\n  }\n});\n\nmodule.exports = DeviceMap;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\",\"../components/MapPin.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/DeviceMap/components/MapPin.jsx\",\"../components/MapView.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/DeviceMap/components/MapView.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/DeviceMap/components/MapPin.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\n//var ol = require('openlayers');\n\n/**\n* Pin in a map\n*/\nvar styles = {\n\tcontainer: {\n\t\theight: \"100%\",\n\t\twidth: \"100%\"\n\t}\n};\n\nvar MapPin = React.createClass({\n\tdisplayName: \"MapPin\",\n\n\tpropTypes: {\n\t\ttheme: RPT.object.isRequired,\n\t\tstyle: RPT.object,\n\t\ticon: RPT.string,\n\t\tid: RPT.string,\n\t\tlng: RPT.number,\n\t\tlat: RPT.number,\n\t\tpayload: RPT.object\n\t},\n\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\ticon: \"../resources/images/LocationGrey-30px.png\"\n\t\t};\n\t},\n\n\trender: function render() {\n\t\tvar style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\t\treturn React.createElement(\"div\", { style: style });\n\t}\n});\n\nmodule.exports = MapPin;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/DeviceMap/components/MapView.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar RPT = React.PropTypes;\nvar ol = window.ol; //require('openlayers');\n\n/**\n* Generic map to show pins\n*/\nvar styles = {\n  container: {\n    height: \"100%\",\n    width: \"100%\"\n  }\n};\n\nvar MapView = React.createClass({\n  displayName: 'MapView',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    showMyLocation: RPT.bool,\n    lat: RPT.number,\n    lng: RPT.number,\n    zoom: RPT.number,\n    minZoom: RPT.number,\n    maxZoom: RPT.number,\n    type: RPT.string,\n    homeIcon: RPT.string,\n    onClick: RPT.func,\n    width: RPT.number,\n    height: RPT.number\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      showMyLocation: true,\n      lng: 11.575642,\n      lat: 48.137294,\n      zoom: 18,\n      minZoom: 0,\n      maxZoom: 20,\n      type: \"osm\",\n      homeIcon: \"../resources/images/Location-Red_30px.png\"\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.createMap();\n  },\n\n  createMap: function createMap() {\n    this.destroyMap();\n\n    var dom = ReactDOM.findDOMNode(this);\n\n    var layer = null;\n    if (this.props.type == \"road\") {\n      layer = new ol.layer.Tile({\n        source: new ol.source.MapQuest({ layer: 'osm' })\n      });\n    } else if (this.props.type == \"sat\") {\n      layer = new ol.layer.Tile({\n        source: new ol.source.MapQuest({ layer: 'sat' })\n      });\n    } else if (this.props.type == \"hyb\") {\n      layer = new ol.layer.Group({\n        layers: [new ol.layer.Tile({\n          source: new ol.source.MapQuest({ layer: 'sat' })\n        }), new ol.layer.Tile({\n          source: new ol.source.MapQuest({ layer: 'hyb' })\n        })]\n      });\n    } else if (this.props.type == \"osm\") {\n      layer = new ol.layer.Tile({\n        source: new ol.source.MapQuest({ layer: 'osm' })\n      });\n    } else {\n      layer = new ol.layer.Tile({\n        source: new ol.source.OSM()\n      });\n    }\n\n    var zoom = this.props.zoom;\n    if (zoom < this.props.minZoom) {\n      zoom = this.props.minZoom;\n    }\n    if (zoom > this.props.maxZoom) {\n      zoom = this.props.maxZoom;\n    }\n    this.map = new ol.Map({\n      layers: [layer],\n      target: dom,\n      view: new ol.View({\n        zoom: zoom,\n        minZoom: this.props.minZoom,\n        maxZoom: this.props.maxZoom\n      })\n    });\n\n    this.map.getView().setCenter(ol.proj.transform([this.props.lng, this.props.lat], 'EPSG:4326', 'EPSG:3857'));\n\n    this.markers = [];\n\n    if (this.props.showMyLocation) {\n      this.getMyLocation();\n    } else {\n      if (this.props.lat !== undefined && this.props.lng != undefined) {\n        this.myPosition = {\n          lng: this.props.lng,\n          lat: this.props.lat\n        };\n      }\n    }\n    this.updateMap();\n  },\n\n  initEvents: function initEvents() {\n    var element = document.getElementById('popup');\n\n    var popup = new ol.Overlay({\n      element: element,\n      positioning: 'bottom-center',\n      stopEvent: false\n    });\n    this.map.addOverlay(popup);\n\n    this.map.on('click', function (evt) {\n      var feature = this.map.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {\n        return feature;\n      });\n      if (feature) {\n        var geometry = feature.getGeometry();\n        var coord = geometry.getCoordinates();\n        popup.setPosition(coord);\n        $(element).popover({\n          'placement': 'top',\n          'html': true,\n          'content': feature.get('name')\n        });\n        $(element).popover('show');\n      } else {\n        $(element).popover('destroy');\n      }\n    });\n\n    // change mouse cursor when over marker\n    this.map.on('pointermove', function (e) {\n      if (e.dragging) {\n        $(element).popover('destroy');\n        return;\n      }\n      var pixel = this.map.getEventPixel(e.originalEvent);\n      var hit = this.map.hasFeatureAtPixel(pixel);\n      this.map.getTarget().style.cursor = hit ? 'pointer' : '';\n    });\n  },\n\n  destroyMap: function destroyMap() {\n    if (this.map) {\n      this.map.setTarget(null);\n      this.map = null;\n    }\n  },\n\n  getMyLocation: function getMyLocation() {\n    var self = this;\n    navigator.geolocation.getCurrentPosition(function (position) {\n      self.myPosition = {\n        lng: position.coords.longitude,\n        lat: position.coords.latitude\n      };\n      self.updateMap();\n    }, function () {\n      console.log(\"Cannot determine location\");\n    });\n  },\n\n  updateMap: function updateMap() {\n    this.cleanupMarkers();\n\n    if (this.map && this.myPosition) {\n      if (!this.myMarker) {\n        var icon = $('<img src=\"' + this.props.homeIcon + '\">')[0];\n        this.myMarker = new ol.Overlay({\n          position: ol.proj.transform([this.myPosition.lng, this.myPosition.lat], 'EPSG:4326', 'EPSG:3857'),\n          offset: [-15, -30],\n          element: icon\n        });\n        this.map.addOverlay(this.myMarker);\n      }\n\n      //this.myMarker.setPosition([this.myPosition.lng, this.myPosition.lat]);\n    }\n\n    if (this.props.children && this.props.children.length > 0) {\n      this.showPins();\n    } else {\n      var self = this;\n      if (this.myPosition) {\n        self.map.getView().setCenter(ol.proj.transform([self.myPosition.lng, self.myPosition.lat], 'EPSG:4326', 'EPSG:3857'));\n      }\n    }\n  },\n\n  showPins: function showPins() {\n    var self = this;\n\n    var pins = this.props.children;\n    var trigger = function trigger(pin) {\n      return function () {\n        if (self.props.onClick) {\n          self.props.onClick(pin.props.payload);\n        }\n      };\n    };\n    for (var i = 0; i < pins.length; i++) {\n      var pin = pins[i];\n      var icon = pin.props.icon ? pin.props.icon : this.props.icon;\n      var lng = pin.props.lng;\n      var lat = pin.props.lat;\n      if (lng && lat) {\n        var iconNode = $('<img src=\"' + icon + '\">')[0];\n        var marker = new ol.Overlay({\n          position: ol.proj.transform([lng, lat], 'EPSG:4326', 'EPSG:3857'),\n          offset: [-15, -30],\n          element: iconNode\n        });\n        iconNode.addEventListener('click', trigger(pin));\n        this.map.addOverlay(marker);\n\n        this.assignMarker(marker, pin);\n        this.markers.push(marker);\n      }\n    }\n\n    this.focusMarker();\n  },\n\n  assignMarker: function assignMarker(marker, item) {\n    marker.userObject = item;\n  },\n\n  cleanupMarkers: function cleanupMarkers() {\n    for (var i in this.markers) {\n      var marker = this.markers[i];\n      if (marker) {\n        this.map.removeOverlay(marker);\n      }\n    }\n    this.markers = [];\n  },\n\n  focusMarker: function focusMarker() {\n    var coordinates = [];\n    if (this.myPosition && this.markers) {\n      for (var i = 0; i < this.markers.length; i++) {\n        var position = ol.proj.transform(this.markers[i].getPosition(), 'EPSG:3857', 'EPSG:4326');\n        coordinates.push(position);\n      }\n      coordinates.push(ol.proj.transform(this.myMarker.getPosition(), 'EPSG:3857', 'EPSG:4326'));\n\n      var extent = ol.extent.boundingExtent(coordinates);\n      //extent = [8.018633106257766, 48.01862738258205, 8.96175012551248, 48.99163315445185];\n      var size = this.map.getSize();\n      var view = this.map.getView();\n      view.fitExtent(ol.proj.transformExtent(extent, 'EPSG:4326', 'EPSG:3857'), size);\n      var zoomLevel = this.map.getView().getZoom();\n      this.map.getView().setZoom(zoomLevel - 0.5);\n    }\n  },\n\n  selectMarker: function selectMarker(marker, type, item) {\n    // TODO\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this.destroyMap();\n  },\n\n  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n    var self = this;\n    if (nextProps.width != this.props.width || nextProps.height != this.props.height || nextProps.showMyLocation != this.props.showMyLocation || nextProps.maxZoom != this.props.maxZoom || nextProps.type != this.props.type) {\n      setTimeout(function () {\n        self.createMap();\n      }, 1);\n    } else {\n      setTimeout(function () {\n        self.updateMap();\n      }, 1);\n    }\n\n    return false;\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n    return React.createElement('div', { style: style });\n  }\n});\n\nmodule.exports = MapView;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/DeviceMap/customization/DeviceMapProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar Label = require('../../common/components/Label.jsx');\nvar ComboBox = require('../../common/components/ComboBox.jsx');\nvar Option = require('../../common/components/Option.jsx');\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar Select = require('../../common/components/Select.jsx');\nvar SwitchBtn = require('../../common/components/SwitchBtn.jsx');\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\",\n    borderCollapse: \"separate\",\n    borderSpacing: \"10px 0px\"\n  }\n\n};\n\nvar DeviceMapProperties = React.createClass({\n  displayName: 'DeviceMapProperties',\n\n  propTypes: {\n    longitude: RPT.string,\n    latitude: RPT.string,\n    showMyLocation: RPT.bool,\n    maxZoom: RPT.number,\n    type: RPT.string,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      longitude: \"\",\n      latitude: \"\",\n      showMyLocation: true,\n      maxZoom: 18,\n      type: \"osm\"\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      longitude: this.props.longitude,\n      latitude: this.props.latitude,\n      showMyLocation: this.props.showMyLocation,\n      maxZoom: this.props.maxZoom,\n      type: this.props.type\n    };\n  },\n\n  onLongitudeChanged: function onLongitudeChanged(value) {\n    this.setState({\n      longitude: value\n    });\n  },\n\n  onLatitudeChanged: function onLatitudeChanged(value) {\n    this.setState({\n      latitude: value\n    });\n  },\n\n  onMaxZoomChanged: function onMaxZoomChanged(value) {\n    this.setState({\n      maxZoom: parseInt(value)\n    });\n  },\n\n  onShowMyLocationChanged: function onShowMyLocationChanged(value) {\n    this.setState({\n      showMyLocation: value\n    });\n  },\n\n  onTypeChanged: function onTypeChanged(value) {\n    this.setState({\n      type: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state && this.props.plots && this.props.plots.length > 0) {\n      var cache = IoTFDeviceStore.getCache();\n      var propertySuggestions = [];\n\n      for (var i in this.props.plots) {\n        var plot = this.props.plots[i];\n        var device = cache[plot.device];\n        if (device) {\n          var props = device[plot.event];\n          if (props) {\n            var propKeys = Object.keys(props);\n            propertySuggestions = propertySuggestions.concat(propKeys);\n          }\n        }\n      }\n\n      propertySuggestions.sort();\n\n      var maxZoom = this.state.maxZoom;\n      var type = this.state.type;\n\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                null,\n                React.createElement(\n                  Label,\n                  { label: 'Longitude property name', theme: this.props.theme },\n                  React.createElement(\n                    ComboBox,\n                    { theme: self.props.theme, onChange: this.onLongitudeChanged, initialValue: self.state.longitude },\n                    propertySuggestions.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item, value: item, theme: self.props.theme },\n                        item\n                      );\n                    })\n                  )\n                )\n              ),\n              React.createElement(\n                'td',\n                null,\n                React.createElement(\n                  Label,\n                  { label: 'Latitude property name', theme: this.props.theme },\n                  React.createElement(\n                    ComboBox,\n                    { theme: self.props.theme, onChange: this.onLatitudeChanged, initialValue: self.state.latitude },\n                    propertySuggestions.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item, value: item, theme: self.props.theme },\n                        item\n                      );\n                    })\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                null,\n                React.createElement(\n                  Label,\n                  { label: 'Max zoom level', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onMaxZoomChanged, value: \"\" + maxZoom },\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: '20', selected: maxZoom == 20 },\n                      'House'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: '16', selected: maxZoom == 16 },\n                      'Street'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: '14', selected: maxZoom == 14 },\n                      'City'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: '10', selected: maxZoom == 10 },\n                      'Area'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: '6', selected: maxZoom == 6 },\n                      'Country'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: '4', selected: maxZoom == 4 },\n                      'Continent'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: '2', selected: maxZoom == 2 },\n                      'World'\n                    )\n                  )\n                )\n              ),\n              React.createElement(\n                'td',\n                null,\n                React.createElement(\n                  Label,\n                  { label: 'Card type', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onTypeChanged, value: \"\" + type },\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'osm', selected: type == \"osm\" },\n                      'Open Street Map'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'road', selected: type == \"road\" },\n                      'Road'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'sat', selected: type == \"sat\" },\n                      'Aearial'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'hyb', selected: type == \"hyb\" },\n                      'Hybrid'\n                    )\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Show my location', theme: this.props.theme },\n                  React.createElement(SwitchBtn, { theme: this.props.theme, onChange: this.onShowMyLocationChanged, initialValue: !!this.state.showMyLocation, trueText: 'Yes', falseText: 'No' })\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement(\n        'div',\n        null,\n        'No datapoints defined'\n      );\n    }\n  }\n});\n\nmodule.exports = DeviceMapProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/ComboBox.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/ComboBox.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\",\"../../common/components/SwitchBtn.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/SwitchBtn.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Dialog/Dialog.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar Actions = require('../Dashboard/dashboard/Actions.jsx');\nvar DashboardUtils = require('../Dashboard/dashboard/DashboardUtils');\nvar Utils = require('../Dashboard/util/Utils.js');\nvar Icon = require('../common/components/Icon.jsx');\nvar Section = require('../common/components/Section.jsx');\nvar Button = require('../common/components/Button.jsx');\nvar Portal = require('../common/components/Portal.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  backdrop: {\n    backgroundColor: 'rgba(21,41,53,0.3)',\n    width: '100%',\n    height: '100%',\n    position: 'fixed',\n    top: '0px',\n    left: '0px',\n    zIndex: '2000',\n    overflowY: 'auto',\n    overflowX: 'auto'\n  },\n  container: {\n    width: '800px',\n    height: '700px',\n    fontSize: '14px',\n    fontFamily: '\"Helvetica Neue\",HelveticaNeue,Helvetica,\"Segoe UI\",Segoe,Calibri,Roboto,\"Droid Sans\",\"Arial Unicode MS\",Arial,sans-serif',\n    color: '#333333',\n    background: 'white',\n    margin: '0 auto',\n    top: '40px',\n    position: 'relative',\n    overflow: 'hidden'\n  },\n  content: {\n    width: '480px',\n    height: '100%',\n    float: 'right',\n    marginRight: '35px',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative'\n  },\n  navigationContainer: {\n    width: '250px',\n    height: '100%',\n    backgroundColor: 'whitesmoke',\n    float: 'left',\n    paddingTop: '50px',\n    overflowY: 'scroll'\n  },\n  tabs: {\n    width: '250px',\n    height: '100%',\n    backgroundColor: 'whitesmoke',\n    float: 'left',\n    paddingTop: '50px',\n    overflowY: 'auto'\n  },\n  header: {\n    width: '100%',\n    paddingTop: '50px',\n    paddingBottom: '20px'\n  },\n  title: {\n    fontSize: '28px'\n  },\n  description: {\n    fontSize: '12px',\n    color: 'silver'\n  },\n  canvas: {\n    width: '100%',\n    overflowY: 'auto',\n    marginBottom: '100px'\n  },\n  buttons: {\n    width: '100%',\n    height: '100px',\n    bottom: '0px',\n    position: 'absolute',\n    textAlign: 'right'\n  },\n  cancel: {\n    position: 'absolute',\n    right: '30px',\n    top: '20px',\n    zIndex: 1\n  },\n  tabContainer: {\n    marginBottom: '40px'\n  },\n  tab: {\n    padding: '20px 20px',\n    fontSize: '14px',\n    fontWeight: '700',\n    borderLeft: '2px solid transparent',\n    cursor: 'pointer',\n    transition: 'all 0.3s ease',\n    position: 'relative',\n    color: '#637888'\n  },\n  subTab: {\n    fontWeight: '200',\n    margin: '20px 0px',\n    fontSize: '12px'\n  },\n  tabText: {\n    marginRight: '24px'\n  },\n  tabCancel: {},\n  activeTab: {\n    borderLeft: \"8px solid #4581e0\",\n    color: \"#4581e0\"\n  },\n  closeBtnContainer: {\n    position: 'absolute',\n    top: '15px',\n    right: '-15px'\n\n  },\n  wizTabContainer: {},\n  wizTab: {\n    color: '#0D1111', // Cool Grey 90\n    padding: '20px 20px 20px 20px',\n    fontWeight: '500',\n    fontSize: '14px',\n    textDecoration: 'none',\n    background: '0 0',\n    borderLeft: '8px solid transparent',\n    outline: '0',\n    display: 'inline-block',\n    cursor: 'pointer'\n  },\n  wizTabIcon: {\n    display: 'inline-block',\n    fill: '#AEB8B8' // Cool Grey 30\n  },\n  wizTabDisabled: {\n    cursor: 'no-drop'\n  },\n  wizControlContainer: {\n    boxSizing: 'border-box',\n    bottom: '0',\n    width: '15%',\n    padding: '40px 0 40px 0',\n    position: 'fixed'\n  },\n  horizontalLine: {\n    borderTop: '2px solid #FFF',\n    marginTop: '20px',\n    marginBottom: '20px'\n  },\n  wizBtn: {\n    color: '#FFF',\n    padding: '4px 20px 4px 20px',\n    fontWeight: '700',\n    fontSize: '13px',\n    textDecoration: 'none',\n    background: '0 0',\n    border: 'none',\n    outline: '0',\n    cursor: 'pointer',\n    display: 'inline-block'\n  },\n  wizBtnRight: {\n    float: 'right'\n  },\n  wizBtnDisabled: {\n    color: '#637888',\n    cursor: 'no-drop'\n  },\n  tabTitle: {\n    fontSize: \"18px\",\n    fontWeight: \"500\",\n    borderBottom: \"1px solid silver\",\n    paddingBottom: \"20px\",\n    marginBottom: \"20px\"\n  },\n  tabDescription: {\n    fontSize: \"13px\"\n  },\n  disabledTab: {\n    color: 'silver',\n    cursor: 'default'\n  }\n};\n\nvar stylesOld = {\n  backdrop: {\n    backgroundColor: 'rgba(21,41,53,.6);',\n    width: '100%',\n    height: '100%',\n    position: 'fixed',\n    top: '0px',\n    left: '0px',\n    border: '1px solid rgba(0,0,0,.2)'\n  },\n  dialoglFade: {\n    WebkitTransform: 'translate(0,-25%)',\n    MsTransform: 'translate(0,-25%)',\n    transform: 'translate(0,-25%)',\n    WebkitTransition: '-webkit-transform .3s ease-out',\n    MozTransition: '-moz-transform .3s ease-out',\n    Otransition: '-o-transform .3s ease-out',\n    transition: 'transform .3s ease-out'\n  },\n  outerContainer: {\n    backgroundColor: 'rgba(21,41,53,.9)',\n    height: '100%',\n    overflow: 'auto',\n    fontFamily: '\"Helvetica Neue\",HelveticaNeue,Helvetica,\"Segoe UI\",Segoe,Calibri,Roboto,\"Droid Sans\",\"Arial Unicode MS\",Arial,sans-serif'\n  },\n  innerContainer: {\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    paddingLeft: '15px',\n    paddingRight: '15px',\n    width: '1300px',\n    boxSizing: 'border-box'\n  },\n  columnContainer: {\n    position: 'relative',\n    minHeight: '1px',\n    paddingLeft: '15px',\n    paddingRight: '15px',\n    float: 'left',\n    width: '100%',\n    boxSizing: 'border-box'\n  },\n  mainContentContainer: {\n    width: '66.66666667%',\n    float: 'left',\n    position: 'relative',\n    minHeight: '1px',\n    paddingLeft: '15px',\n    paddingRight: '15px',\n    boxSizing: 'border-box'\n  },\n  navigationContainer: {\n    width: '16.66666667%',\n    float: 'left',\n    position: 'relative',\n    minHeight: '1px',\n    paddingLeft: '15px',\n    paddingRight: '15px',\n    boxSizing: 'border-box'\n  },\n  mainContent: {\n    background: '#F9F9F9 none repeat scroll 0 0',\n    paddingLeft: '50px',\n    paddingRight: '50px',\n    minHeight: '99vh',\n    height: 'auto!important',\n    position: 'relative',\n    boxSizing: 'border-box'\n  },\n  tabs: {\n    width: '250px',\n    height: '100%',\n    backgroundColor: 'whitesmoke',\n    float: 'left',\n    paddingTop: '50px',\n    overflowY: 'auto'\n  },\n  header: {\n    width: '100%',\n    paddingTop: '50px',\n    paddingBottom: '20px',\n    borderBottom: '2px solid lightgray'\n  },\n  title: {\n    fontSize: '20px'\n  },\n  description: {\n    fontSize: '12px',\n    color: 'silver'\n  },\n  canvas: {\n    width: '100%',\n    overflowY: 'auto',\n    marginBottom: '100px',\n    paddingTop: '20px',\n    height: '100%'\n  },\n  buttons: {\n    width: '100%',\n    height: '100px',\n    textAlign: 'right'\n  },\n  cancel: {\n    position: 'relative',\n    right: '0px',\n    top: '0px',\n    zIndex: 1\n  },\n  navigationTabContainer: {\n    top: '150px',\n    position: 'fixed'\n  },\n  tabContainer: {\n    marginBottom: '40px'\n  },\n  tab: {\n    padding: '4px 20px',\n    fontSize: '13px',\n    fontWeight: '700',\n    borderLeft: '2px solid transparent',\n    cursor: 'pointer',\n    transition: 'all 0.3s ease',\n    position: 'relative',\n    color: '#637888'\n  },\n  tabText: {\n    marginRight: '24px'\n  },\n  tabCancel: {},\n  activeTab: {\n    borderLeft: '2px solid #FFF',\n    color: '#FFF'\n  },\n  closeBtnContainer: {\n    position: 'fixed',\n    top: '50px'\n  },\n  wizTabContainer: {\n    marginBottom: '2rem'\n  },\n  wizTab: {\n    color: '#637888',\n    padding: '4px 20px 4px 20px',\n    fontWeight: '700',\n    fontSize: '13px',\n    textDecoration: 'none',\n    background: '0 0',\n    border: 'none',\n    outline: '0',\n    display: 'inline-block',\n    cursor: 'pointer'\n  },\n  wizTabIcon: {\n    display: 'inline-block',\n    fill: '#637888'\n  },\n  wizTabDisabled: {\n    cursor: 'no-drop'\n  },\n  wizControlContainer: {\n    boxSizing: 'border-box',\n    bottom: '0',\n    width: '15%',\n    padding: '40px 0 40px 0',\n    position: 'fixed'\n  },\n  horizontalLine: {\n    borderTop: '2px solid #FFF',\n    marginTop: '20px',\n    marginBottom: '20px'\n  },\n  wizBtn: {\n    color: '#FFF',\n    padding: '4px 20px 4px 20px',\n    fontWeight: '700',\n    fontSize: '13px',\n    textDecoration: 'none',\n    background: '0 0',\n    border: 'none',\n    outline: '0',\n    cursor: 'pointer',\n    display: 'inline-block'\n  },\n  wizBtnRight: {\n    float: 'right'\n  },\n  wizBtnDisabled: {\n    color: '#637888',\n    cursor: 'no-drop'\n  }\n};\n\nvar useOldDialog = DashboardUtils.getCapability('useOldDialogs');\n\nvar Dialog = {};\n\nvar Tab = React.createClass({\n  displayName: 'Tab',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    id: RPT.string,\n    active: RPT.bool,\n    onClick: RPT.func,\n    status: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      active: false,\n      id: Utils.createUUID()\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      hover: false,\n      status: this.props.status\n    };\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(props) {\n    this.setState({ status: props.status });\n  },\n\n  onClick: function onClick() {\n    if (this.props.onClick && this.state.status !== \"disabled\") {\n      this.props.onClick(this.props.id);\n    }\n  },\n\n  onRemove: function onRemove() {\n    if (this.props.onRemove) {\n      this.props.onRemove(this.props.id);\n    }\n  },\n\n  onMouseOver: function onMouseOver() {\n    this.setState({\n      hover: true\n    });\n  },\n\n  onMouseOut: function onMouseOut() {\n    this.setState({\n      hover: false\n    });\n  },\n\n  render: function render() {\n    var style = {};\n    var statusIcon = '';\n    var statusIconStyle = useOldDialog ? stylesOld.wizTabIcon : styles.wizTabIcon;\n    if (this.state.status) {\n      style = useOldDialog ? stylesOld.wizTab : styles.wizTab;\n      var wizTabStatusStyle = {};\n      var wizTabStatusStyleOld = {};\n      if (this.state.status === 'active') {\n        wizTabStatusStyle = styles.activeWizTab;\n        wizTabStatusStyleOld = stylesOld.activeWizTab;\n      }\n      if (this.state.status === 'complete') {\n        wizTabStatusStyle = styles.completeWizTab;\n        wizTabStatusStyleOld = stylesOld.completeWizTab;\n        statusIcon = React.createElement(Icon, { icon: \"check\", size: 15, theme: this.props.theme, style: statusIconStyle });\n      }\n      if (this.state.status === 'disabled') {\n        wizTabStatusStyle = styles.disabledWizTab;\n        wizTabStatusStyleOld = stylesOld.disabledWizTab;\n        var disableStyle = useOldDialog ? stylesOld.wizTabDisabled : styles.disabledTab;\n        statusIconStyle = Object.assign({}, statusIconStyle, disableStyle);\n        style = Object.assign({}, style, disableStyle);\n      }\n      if (useOldDialog) {\n        if (this.state.status !== 'disabled' && (this.props.active || this.state.hover)) {\n          style = Object.assign({}, style, wizTabStatusStyleOld, { color: '#0D1111' }); // Cool Grey 90\n        }\n      } else {\n          if (this.props.active) {\n            style = Object.assign({}, style, wizTabStatusStyle, styles.activeTab); // Cool Grey 90\n          }\n        }\n    } else {\n        style = useOldDialog ? stylesOld.tab : styles.tab;\n        if (useOldDialog) {\n          if (this.props.active || this.state.hover) {\n            style = Object.assign({}, style, stylesOld.activeTab);\n          }\n        } else {\n          if (this.props.active || this.state.hover) {\n            style = Object.assign({}, style, styles.activeTab);\n          }\n        }\n      }\n\n    var textStyle = {};\n    var remove = '';\n    // Check if it is a wizard tab\n    if (this.state.status) {\n      if (useOldDialog) {\n        return React.createElement(\n          'div',\n          { style: stylesOld.wizTabContainer },\n          React.createElement(\n            'div',\n            { style: style, key: this.props.id, onMouseOver: this.onMouseOver, onMouseOut: this.onMouseOut, onClick: this.onClick },\n            React.createElement(\n              'span',\n              { style: textStyle },\n              this.props.children\n            ),\n            statusIcon,\n            remove\n          )\n        );\n      } else {\n        var tabStyle = styles.wizTabContainer;\n        if (this.props.subtab) {\n          tabStyle = Object.assign({}, tabStyle, { marginTop: \"-20px\" });\n          style = Object.assign({}, style, styles.subTab, {\n            padding: '5px 0px 5px ' + (20 + 20 * this.props.subtab) + 'px'\n          });\n        }\n        return React.createElement(\n          'div',\n          { style: tabStyle },\n          React.createElement(\n            'div',\n            { style: style, key: this.props.id, onMouseOver: this.onMouseOver, onMouseOut: this.onMouseOut, onClick: this.onClick },\n            React.createElement(\n              'span',\n              { style: textStyle },\n              this.props.children\n            ),\n            statusIcon,\n            remove\n          )\n        );\n      }\n    } else {\n      if (this.props.onRemove) {\n        var iconStyle = styles.tabCancel;\n        if (this.state.hover) {\n          iconStyle = Object.assign({}, iconStyle, { opacity: 1 });\n        }\n        textStyle = styles.tabText;\n        remove = React.createElement(Icon, { icon: 'delete', style: iconStyle, onClick: this.onRemove, color: '#333333', size: '18', theme: this.props.theme });\n      }\n      if (useOldDialog) {\n        return React.createElement(\n          'div',\n          { style: stylesOld.tabContainer },\n          React.createElement(\n            'div',\n            { style: style, key: this.props.id, onMouseOver: this.onMouseOver, onMouseOut: this.onMouseOut, onClick: this.onClick },\n            React.createElement(\n              'span',\n              { style: textStyle },\n              this.props.children\n            ),\n            remove\n          )\n        );\n      } else {\n        return React.createElement(\n          'div',\n          { style: styles.tabContainer },\n          React.createElement(\n            'div',\n            { style: style, key: this.props.id, onMouseOver: this.onMouseOver, onMouseOut: this.onMouseOut, onClick: this.onClick },\n            React.createElement(\n              'span',\n              { style: textStyle },\n              this.props.children\n            ),\n            remove\n          )\n        );\n      }\n    }\n  }\n});\n\nvar ButtonsOld = React.createClass({\n  displayName: 'ButtonsOld',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object,\n    text: RPT.string,\n    cursor: RPT.string,\n    width: RPT.number,\n    disabled: RPT.bool,\n    onClick: RPT.func,\n    isPrimary: RPT.bool,\n\n    textColor: RPT.string,\n    textHoverActiveColor: RPT.string,\n    textPressColor: RPT.string,\n\n    bgColor: RPT.string,\n    bgHoverColor: RPT.string,\n    bgPressColor: RPT.string,\n\n    borderColor: RPT.string,\n    borderHoverColor: RPT.string,\n    borderPressColor: RPT.string\n  },\n\n  getInitialState: function getInitialState() {\n    return { hover: false };\n  },\n\n  mouseOver: function mouseOver() {\n    this.setState({ hover: true });\n  },\n\n  mouseOut: function mouseOut() {\n    this.setState({ hover: false });\n  },\n\n  mouseDown: function mouseDown() {\n    this.setState({ press: true });\n  },\n\n  mouseUp: function mouseUp() {\n    this.setState({ press: false });\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (nextProps.disabled !== undefined) {\n      this.setState({ disabled: true });\n    } else {\n      this.setState({ disabled: false });\n    }\n  },\n\n  componentWillMount: function componentWillMount() {\n    if (this.props.disabled) {\n      this.setState({ disabled: true });\n    } else {\n      this.setState({ disabled: false });\n    }\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      oldStyle: {\n        display: 'inline-block',\n        fontWeight: '400',\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        cursor: 'pointer',\n        backgroundImage: 'none',\n        whiteSpace: 'nowrap',\n        padding: '6px 12px',\n        fontSize: '14px',\n        lineHeight: '1.42857143',\n        WebkitUserSelect: 'none',\n        MozUserSelect: 'none',\n        MsUserSelect: 'none',\n        userSelect: 'none',\n        borderRadius: '2px',\n        border: '1px solid #152935',\n        background: '#fff',\n        color: '#152935',\n        paddingLeft: '30px',\n        paddingRight: '30px',\n        marginTop: '50px',\n        marginBottom: '50px'\n      }\n    };\n  },\n\n  onClick: function onClick() {\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  },\n\n  render: function render() {\n    var stateStyle = {};\n\n    stateStyle.width = this.props.width;\n\n    if (this.state.disabled) {\n      stateStyle.cursor = 'no-drop';\n      stateStyle.backgroundColor = '';\n      stateStyle.color = '#AEB8B8';\n      stateStyle.borderColor = '#f4f4f4';\n    }\n\n    styleBtn = Object.assign({}, this.props.oldStyle, stateStyle, this.props.style);\n    return React.createElement(\n      'a',\n      null,\n      ' ',\n      React.createElement(\n        'div',\n        { style: styleBtn, onClick: this.onClick, onMouseOver: this.mouseOver, onMouseOut: this.mouseOut, onMouseDown: this.mouseDown, onMouseUp: this.mouseUp },\n        this.props.text,\n        ' ',\n        this.props.disabled,\n        ' '\n      ),\n      ' '\n    );\n  }\n});\n\nvar ButtonTab = React.createClass({\n  displayName: 'ButtonTab',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    label: RPT.string,\n    onClick: RPT.func,\n    id: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      label: 'Label',\n      id: Utils.createUUID()\n    };\n  },\n\n  render: function render() {\n    return React.createElement(\n      'div',\n      { style: styles.tab, onClick: this.props.onClick },\n      this.props.children\n    );\n  }\n});\n\nvar DialogTab = React.createClass({\n  displayName: 'DialogTab',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    label: RPT.string,\n    description: RPT.string,\n    onClick: RPT.func,\n    selected: RPT.bool,\n    id: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      label: 'Label',\n      id: Utils.createUUID()\n    };\n  },\n\n  render: function render() {\n    var header = \"\";\n\n    if (this.props.label) {\n      var description = \"\";\n      if (this.props.description) {\n        description = React.createElement(\n          'div',\n          { style: Object.assign(styles.tabDescription, { color: this.props.theme.minor }) },\n          this.props.description\n        );\n      }\n      header = React.createElement(\n        'div',\n        { style: Object.assign(styles.tabTitle, { color: this.props.theme.major, borderColor: this.props.theme.minor }) },\n        this.props.label,\n        description\n      );\n    }\n    return React.createElement(\n      'div',\n      null,\n      header,\n      this.props.children\n    );\n  }\n});\n\nvar DialogButtons = React.createClass({\n  displayName: 'DialogButtons',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  render: function render() {\n    return React.createElement(\n      'div',\n      null,\n      this.props.children\n    );\n  }\n});\n\nvar Dialog = React.createClass({\n  displayName: 'Dialog',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    nls: RPT.object,\n    onSubmit: RPT.func,\n    onCancel: RPT.func\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  componentWillMount: function componentWillMount() {\n    var mql = window.matchMedia(\"(min-width: 800px)\");\n    mql.addListener(this.mediaQueryChanged);\n    this.setState({ mql: mql });\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this.state.mql.removeListener(this.mediaQueryChanged);\n  },\n\n  mediaQueryChanged: function mediaQueryChanged(payload) {\n    console.log('MediaQueryChanged', payload);\n  },\n\n  getInitialState: function getInitialState() {\n    var tabs = this.getTabs();\n    return {\n      activeTab: tabs.length > 0 ? tabs[0].props.id : null,\n      useOldDialog: DashboardUtils.getCapability('useOldDialogs')\n    };\n  },\n\n  onCancel: function onCancel() {\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n    Actions.closeDialog();\n  },\n\n  onTabClicked: function onTabClicked(id) {\n    this.setActiveTab(id);\n  },\n\n  setActiveTab: function setActiveTab(id) {\n    this.setState({\n      activeTab: id\n    });\n  },\n\n  activateNextTab: function activateNextTab() {\n    var self = this;\n    var setActive = false;\n    var nextID = null;\n    React.Children.forEach(this.props.children, function (child) {\n      if (child !== null) {\n        if (setActive && child.type.displayName === 'DialogTab') {\n          nextID = child.props.id;\n          setActive = false;\n        } else {\n          if (child.props.id === self.state.activeTab) {\n            setActive = true;\n          }\n        }\n      }\n    });\n    if (nextID !== null) {\n      self.setActiveTab(nextID);\n    }\n  },\n\n  activatePreviousTab: function activatePreviousTab() {\n    var self = this;\n    var foundID = false;\n    var previousID = null;\n    React.Children.forEach(this.props.children, function (child) {\n      if (child !== null) {\n        if (child.props.id === self.state.activeTab) {\n          foundID = true;\n        }\n        if (!foundID && child.type.displayName === 'DialogTab') {\n          previousID = child.props.id;\n        }\n      }\n    });\n    if (previousID !== null) {\n      self.setActiveTab(previousID);\n    }\n  },\n\n  getTabs: function getTabs() {\n    var dialogTabs = [];\n    var children = [];\n    React.Children.forEach(this.props.children, function (child) {\n      children.push(child);\n    });\n    for (var i in children) {\n      var tab = children[i];\n      if (tab !== null && (tab.type.displayName == 'DialogTab' || tab.type.displayName == 'WizardTab')) {\n        dialogTabs.push(tab);\n      }\n    }\n    return dialogTabs;\n  },\n\n  getButtonTabs: function getButtonTabs() {\n    var buttonTabs = [];\n    var children = [];\n    React.Children.forEach(this.props.children, function (child) {\n      children.push(child);\n    });\n    for (var i in children) {\n      var tab = children[i];\n      if (tab !== null && tab.type.displayName == 'ButtonTab') {\n        buttonTabs.push(tab);\n      }\n    }\n    return buttonTabs;\n  },\n\n  getButtons: function getButtons() {\n    var dialogButtons = null;\n    var children = [];\n    var newBtns = [];\n    var fnct = function fnct() {\n      var currBtn = React.createElement(ButtonsOld, btn.props);\n      newBtns.push(currBtn);\n    };\n    React.Children.forEach(this.props.children, function (child) {\n      children.push(child);\n    });\n    for (var i in children) {\n      var buttons = children[i];\n      if (buttons !== null && buttons.type.displayName == 'DialogButtons') {\n        if (useOldDialog) {\n          newBtns = [];\n          React.Children.forEach(buttons.props.children, fnct);\n          return newBtns;\n        } else {\n          return buttons;\n        }\n      }\n    }\n  },\n\n  onSubmit: function onSubmit() {\n    if (this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    //  find selected tab\n    var active = null;\n\n    React.Children.forEach(nextProps.children, function (child) {\n      if (child !== null && child.props.selected) {\n        active = child.props.id;\n      }\n    });\n\n    if (active) {\n      this.setState({\n        activeTab: active\n      });\n    }\n  },\n\n  render: function render() {\n    var self = this;\n    var isWizard = false;\n    var dialogTabs = this.getTabs();\n    var activeTab = this.state.activeTab;\n    // check if there is an empty plot -> focus it\n    for (var i in dialogTabs) {\n      tab = dialogTabs[i];\n      if (tab.props.selected) {\n        activeTab = tab.props.id;\n      }\n    }\n\n    // focus the selected\n    var tab = '';\n    for (var j in dialogTabs) {\n      tab = dialogTabs[j];\n      if (tab.props.id == activeTab) {\n        break;\n      }\n    }\n\n    var isSubmitTab = tab.props.isSubmitTab === true ? true : false;\n    var isFirstTab = tab.props.isFirstTab == true ? true : false;\n\n    var dialogButtons = this.getButtons();\n    var buttonTabs = this.getButtonTabs();\n    var wizController = '';\n    var dialogTabHandles;\n\n    if (this.state.useOldDialog) {\n      var btnRightStyle = Object.assign({}, stylesOld.wizBtn, stylesOld.wizBtnRight);\n      var nextBtn = React.createElement(\n        'div',\n        { style: btnRightStyle },\n        'Next'\n      );\n      var backBtn = React.createElement(\n        'div',\n        { style: stylesOld.wizBtn },\n        'Back'\n      );\n      var styleBackdrop = Object.assign({}, stylesOld.backdrop, stylesOld.dialogFade);\n      var tabSections = '';\n\n      dialogTabHandles = dialogTabs.map(function (tab) {\n        if (tab.props.status) {\n          isWizard = true;\n        }\n        return React.createElement(\n          Tab,\n          { key: tab.props.id, onRemove: tab.props.onRemove, subtab: tab.props.subtab, onClick: self.onTabClicked, active: tab.props.id == activeTab, theme: self.props.theme, id: tab.props.id, status: tab.props.status },\n          tab.props.label\n        );\n      });\n      if (isWizard) {\n        tab = React.createElement(\n          Section,\n          { headingSection: tab.props.label },\n          tab\n        );\n        wizController = React.createElement(\n          'div',\n          { style: stylesOld.wizControlContainer },\n          React.createElement('div', { style: stylesOld.horizontalLine }),\n          backBtn,\n          nextBtn\n        );\n      } else {\n        tab = '';\n        tabSections = dialogTabs.map(function (currtab) {\n          return React.createElement(\n            Section,\n            { headingSection: currtab.props.label },\n            currtab\n          );\n        });\n      }\n\n      return React.createElement(\n        'div',\n        { style: stylesOld.backdrop },\n        React.createElement(\n          'div',\n          { style: stylesOld.outerContainer },\n          React.createElement(\n            'div',\n            { style: stylesOld.innerContainer },\n            React.createElement(\n              'div',\n              { style: stylesOld.columnContainer },\n              React.createElement(\n                'div',\n                { style: stylesOld.navigationContainer },\n                React.createElement(\n                  'div',\n                  { style: stylesOld.navigationTabContainer },\n                  dialogTabHandles,\n                  buttonTabs.map(function (currTab) {\n                    return currTab;\n                  })\n                )\n              ),\n              React.createElement(\n                'div',\n                { style: stylesOld.mainContentContainer },\n                React.createElement(\n                  'div',\n                  { style: stylesOld.mainContent },\n                  React.createElement(\n                    'div',\n                    { style: styles.header },\n                    React.createElement(\n                      'div',\n                      { style: styles.title },\n                      this.props.title\n                    ),\n                    React.createElement(\n                      'div',\n                      { style: styles.description },\n                      this.props.description\n                    )\n                  ),\n                  React.createElement(\n                    'div',\n                    { style: styles.canvas },\n                    tab,\n                    tabSections\n                  ),\n                  React.createElement(\n                    'div',\n                    { style: stylesOld.buttons },\n                    dialogButtons\n                  )\n                )\n              ),\n              React.createElement(\n                'div',\n                { style: stylesOld.navigationContainer },\n                React.createElement(\n                  'div',\n                  { style: stylesOld.closeBtnContainer },\n                  React.createElement(Icon, { icon: 'highlight-remove', style: stylesOld.cancel, onClick: this.onCancel, color: '#FFF', size: '32', theme: this.props.theme })\n                ),\n                wizController\n              )\n            )\n          )\n        )\n      );\n    } else {\n      wizController = '';\n      dialogTabHandles = dialogTabs.map(function (tab) {\n        if (tab.props.status) {\n          isWizard = true;\n        }\n        return React.createElement(\n          Tab,\n          { key: tab.props.id, onRemove: tab.props.onRemove, subtab: tab.props.subtab, onClick: self.onTabClicked, active: tab.props.id == activeTab, theme: self.props.theme, id: tab.props.id, status: tab.props.status },\n          tab.props.label\n        );\n      });\n      if (isWizard) {\n        wizController = React.createElement(\n          'div',\n          null,\n          React.createElement(\n            DialogButtons,\n            { theme: this.props.theme },\n            isFirstTab ? React.createElement('span', null) : React.createElement(Button, { onClick: self.activatePreviousTab, text: self.props.nls.resolve('Back') }),\n            isSubmitTab ? React.createElement(Button, { isPrimary: true, onClick: self.onSubmit, text: self.props.nls.resolve('Submit') }) : React.createElement(Button, { isPrimary: true, onClick: self.activateNextTab, text: self.props.nls.resolve('Next') })\n          )\n        );\n      }\n      return React.createElement(\n        'div',\n        { style: styles.backdrop },\n        React.createElement(\n          'div',\n          null,\n          React.createElement(\n            'div',\n            null,\n            React.createElement(\n              'div',\n              { style: styles.container },\n              React.createElement(\n                'div',\n                { style: styles.navigationContainer },\n                React.createElement(\n                  'div',\n                  { style: styles.navigationTabContainer },\n                  dialogTabHandles,\n                  buttonTabs.map(function (currTab) {\n                    return currTab;\n                  })\n                )\n              ),\n              React.createElement(\n                'div',\n                { style: styles.content },\n                React.createElement(\n                  'div',\n                  { style: styles.closeBtnContainer },\n                  React.createElement(Icon, { icon: 'highlight-remove', style: stylesOld.cancel, onClick: this.onCancel, color: '#000', size: 25, theme: this.props.theme })\n                ),\n                React.createElement(\n                  'div',\n                  { style: styles.header },\n                  React.createElement(\n                    'div',\n                    { style: styles.title },\n                    this.props.title\n                  ),\n                  React.createElement(\n                    'div',\n                    { style: styles.description },\n                    this.props.description\n                  )\n                ),\n                React.createElement(\n                  'div',\n                  { style: styles.canvas },\n                  tab\n                ),\n                React.createElement(\n                  'div',\n                  { style: styles.buttons },\n                  wizController,\n                  dialogButtons\n                )\n              )\n            )\n          )\n        )\n      );\n    }\n  }\n});\n\nDialog.Dialog = Dialog;\nDialog.DialogTab = DialogTab;\nDialog.DialogButtons = DialogButtons;\nDialog.ButtonTab = ButtonTab;\n\nmodule.exports = Dialog;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../Dashboard/dashboard/Actions.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/Actions.jsx\",\"../Dashboard/dashboard/DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\",\"../Dashboard/util/Utils.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/Utils.js\",\"../common/components/Button.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Button.jsx\",\"../common/components/Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\",\"../common/components/Portal.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Portal.jsx\",\"../common/components/Section.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Section.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/ElevatorDemo/ElevatorDemo.jsx\":[function(require,module,exports){\n'use strict';\n\nvar ElevatorDemo = {};\nElevatorDemo.Elevator = require('./cards/Elevator.jsx');\nElevatorDemo.ElevatorProperties = require('./customization/ElevatorProperties.jsx');\n\nmodule.exports = ElevatorDemo;\n\n},{\"./cards/Elevator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/ElevatorDemo/cards/Elevator.jsx\",\"./customization/ElevatorProperties.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/ElevatorDemo/customization/ElevatorProperties.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/ElevatorDemo/cards/Elevator.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\"\n  },\n  empty: {\n    padding: \"20px\"\n  },\n  scroller: {\n    width: \"100%\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    transition: \"top 0.5s ease\"\n  },\n  floor: {\n    width: \"110px\",\n    fontSize: \"60px\",\n    fontWeight: 100,\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    lineHeight: \"120px\",\n    transition: \"fontSize 1s ease\"\n  },\n  highlight: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"120px\",\n    opacity: 0.5,\n    transition: \"bottom 1s ease\"\n  },\n  cabin: {\n    position: \"absolute\",\n    height: \"100px\",\n    width: \"60px\",\n    fontWeight: 200,\n    border: \"3px solid grey\",\n    backgroundColor: \"white\",\n    left: \"120px\",\n    transition: \"bottom 1s ease\",\n    verticalAlign: \"middle\",\n    textAlign: \"center\",\n    fontSize: \"24px\",\n    lineHeight: \"normal\",\n    paddingTop: \"20px\"\n  },\n  weightBar: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"0px\",\n    bottom: \"0px\",\n    left: \"0px\",\n    transition: \"height 1s ease\",\n    overflow: \"hidden\"\n  },\n  weightBarContainer: {\n    height: \"100px\",\n    width: \"100%\",\n    position: \"absolute\",\n    bottom: \"-2px\",\n    lineHeight: \"normal\",\n    paddingTop: \"20px\"\n  },\n  scale: {\n    position: \"absolute\",\n    top: \"60px\",\n    bottom: \"60px\",\n    width: \"20px\",\n    right: \"13px\"\n  },\n  scaleAxis: {\n    height: \"100%\",\n    position: \"absolute\",\n    left: \"9px\",\n    borderLeft: \"3px solid grey\"\n  },\n  tick: {\n    fontSize: \"20px\",\n    lineHeight: \"20px\",\n    backgroundColor: \"white\",\n    width: \"30px\",\n    position: \"absolute\",\n    padding: \"4px 0px\",\n    textAlign: \"center\",\n    left: \"-5px\"\n  },\n  simpleTick: {\n    borderBottom: \"3px solid grey\",\n    width: \"9px\",\n    position: \"absolute\",\n    left: \"5px\"\n  },\n  heightLabel: {\n    position: \"absolute\",\n    fontSize: \"20px\",\n    lineHeight: \"30px\",\n    height: \"30px\",\n    right: \"48px\",\n    width: \"65px\",\n    textAlign: \"right\",\n    paddingRight: \"0px\",\n    transition: \"bottom 1s ease\"\n  },\n  labelText: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\"\n  },\n  pointer: {\n    width: \"20px\",\n    height: \"20px\",\n    transform: \"rotate(45deg)\",\n    right: \"-10px\",\n    top: \"6px\",\n    position: \"absolute\"\n  }\n};\n\nvar Elevator = React.createClass({\n  displayName: 'Elevator',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    demo: RPT.bool,\n    plots: RPT.array,\n    minFloor: RPT.number,\n    maxFloor: RPT.number,\n    minHeight: RPT.number,\n    maxHeight: RPT.number,\n    capacity: RPT.number,\n    floor: RPT.string,\n    height: RPT.string,\n    weight: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      plots: [],\n      data: {}\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {};\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        IoTFDeviceStore.Actions.startPropertyWatch(plot.device, plot.event, plot.property);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var model = {};\n\n    model = this.addData(payload, \"floor\", model);\n    model = this.addData(payload, \"height\", model);\n    model = this.addData(payload, \"weight\", model);\n\n    if (Object.keys(model).length > 0) {\n      model.timestamp = new Date().getTime();\n      var self = this;\n      setTimeout(function () {\n        self.setState(model);\n      }, 1);\n    }\n  },\n\n  getPlot: function getPlot(type) {\n    var prop = this.props[type];\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot.id == prop) {\n        return plot;\n      }\n    }\n    return null;\n  },\n\n  addData: function addData(payload, type, model) {\n    var plot = this.getPlot(type);\n\n    if (plot) {\n      if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n        var property = IoTFDeviceStore.normalizeProperty(plot.property);\n        var obj = payload.deviceEvent.data[property];\n\n        if (obj !== undefined) {\n          model[type] = obj;\n        }\n      }\n    }\n\n    return model;\n  },\n\n  render: function render() {\n    var self = this;\n    if (this.state.floor !== undefined || this.state.height !== undefined || this.state.weight !== undefined) {\n\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n      // create array of floor names\n      var floors = [];\n      var floorPlot = this.getPlot(\"floor\");\n      var floorMin = floorPlot.min !== undefined ? floorPlot.min : 0;\n      var floorMax = floorPlot.max !== undefined ? floorPlot.max : 5;\n      for (var i = floorMax; i >= floorMin; i--) {\n        floors.push(\"\" + i);\n      }\n      var currentFloor = this.state.floor !== undefined ? this.state.floor - floorMin : floorMin;\n      var highlight = Object.assign({}, styles.highlight, { backgroundColor: this.props.theme.light, bottom: 120 * currentFloor + \"px\" });\n\n      // prepare height scale and cabin\n      var scale = [];\n      var heightPlot = this.getPlot(\"height\");\n      var heightMin = Math.floor(heightPlot.min !== undefined ? heightPlot.min : 0);\n      var heightMax = Math.floor(heightPlot.max !== undefined ? heightPlot.max : 20);\n      for (var i = heightMax; i >= heightMin; --i) {\n        scale.push(i);\n      }\n      var currentHeight = this.state.height !== undefined ? this.state.height - heightMin : heightMin;\n      var heightFactor = 120 / ((heightMax - heightMin) / (floorMax - floorMin));\n      var cabin = Object.assign({}, styles.cabin, { borderColor: this.props.theme.normal, backgroundColor: this.props.theme.content, color: this.props.theme.major, bottom: heightFactor * currentHeight + 10 + \"px\" });\n      var label = Object.assign({}, styles.heightLabel, { backgroundColor: this.props.theme.light, color: this.props.theme.content, bottom: heightFactor * currentHeight + 40 + \"px\" });\n      var labelText = Object.assign({}, styles.labelText, { backgroundColor: this.props.theme.light });\n      var pointer = Object.assign({}, styles.pointer, { backgroundColor: this.props.theme.light });\n\n      // prepare weight indicator\n      var weight = [];\n      var weightPlot = this.getPlot(\"weight\");\n      var weightMin = 0;\n      var weightMax = weightPlot.max !== undefined ? weightPlot.max : 2000;\n      var currentWeight = this.state.weight / weightMax * 100;\n      var weightBar = Object.assign({}, styles.weightBar, { backgroundColor: this.props.theme.normal, color: this.props.theme.content, height: currentWeight + \"px\" });\n\n      var contentHeight = (floorMax - floorMin) * 120;\n      var containerHeight = this.props.wrapper.realHeight;\n\n      var top = Math.min(contentHeight - currentFloor * 120, contentHeight - heightFactor * currentHeight);\n      var bottom = Math.max(contentHeight - currentFloor * 120 + 120, contentHeight - (heightFactor * currentHeight + 120));\n\n      var scrollPos = this.scrollPos ? this.scrollPos : 0;\n      if (bottom + scrollPos > containerHeight) {\n        scrollPos = -(bottom - containerHeight);\n      } else if (top + scrollPos < 0) {\n        scrollPos = 0 - top;\n      }\n      this.scrollPos = scrollPos;\n      var scroller = Object.assign({}, styles.scroller, { top: scrollPos + \"px\" });\n\n      return React.createElement(\n        'div',\n        { style: style },\n        React.createElement(\n          'div',\n          { style: scroller },\n          React.createElement(\n            'div',\n            { style: styles.scale },\n            React.createElement('div', { style: styles.scaleAxis }),\n            scale.map(function (item) {\n              if (item % 5 == 0) {\n                var tick = Object.assign({}, styles.tick, { backgroundColor: self.props.theme.content, color: self.props.theme.minor, bottom: heightFactor * item - 20 + \"px\" });\n                return React.createElement(\n                  'div',\n                  { key: item, style: tick },\n                  item\n                );\n              } else {\n                var tick = Object.assign({}, styles.simpleTick, { borderColor: self.props.theme.minor, bottom: heightFactor * item - 10 + \"px\" });\n                return React.createElement('div', { key: item, style: tick });\n              }\n            })\n          ),\n          React.createElement('div', { style: highlight }),\n          React.createElement(\n            'div',\n            { style: styles.floors },\n            floors.map(function (item) {\n              var floor = Object.assign({}, styles.floor, \"\" + self.state.floor == item ? { fontSize: \"100px\" } : {});\n              return React.createElement(\n                'div',\n                { key: item, style: floor },\n                item\n              );\n            })\n          ),\n          React.createElement(\n            'div',\n            { style: cabin },\n            this.state.weight,\n            ' kg',\n            React.createElement(\n              'div',\n              { style: weightBar },\n              React.createElement(\n                'div',\n                { style: styles.weightBarContainer },\n                this.state.weight,\n                ' kg'\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            { style: label },\n            React.createElement('div', { style: pointer }),\n            React.createElement(\n              'div',\n              { style: labelText },\n              this.state.height,\n              ' m'\n            )\n          )\n        )\n      );\n    } else {\n      if (!this.props.floor || !this.props.height || !this.props.weight) {\n        return React.createElement(\n          'div',\n          { style: styles.empty },\n          'No all data point defined'\n        );\n      } else {\n        return React.createElement(\n          'div',\n          { style: styles.empty },\n          React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n        );\n      }\n    }\n  }\n});\n\nmodule.exports = Elevator;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/ElevatorDemo/customization/ElevatorProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar Select = require('../../common/components/Select.jsx');\nvar Option = require('../../common/components/Option.jsx');\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n\n};\n\nvar ElevatorProperties = React.createClass({\n  displayName: 'ElevatorProperties',\n\n  propTypes: {\n    floor: RPT.string,\n    height: RPT.string,\n    weight: RPT.string,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      floor: \"location.floor\",\n      height: \"location.height\",\n      weight: \"weight.value\"\n      // floor: null,\n      // height: null,\n      // weight: null\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      floor: this.props.floor,\n      height: this.props.height,\n      weight: this.props.weight\n    };\n  },\n\n  onFloorChanged: function onFloorChanged(value) {\n    this.setState({\n      floor: value\n    });\n  },\n\n  onHeightChanged: function onHeightChanged(value) {\n    this.setState({\n      height: value\n    });\n  },\n\n  onWeightChanged: function onWeightChanged(value) {\n    this.setState({\n      weight: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Floor data point', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onFloorChanged, value: this.state.floor },\n                    this.props.plots.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item.id, value: item.id, selected: self.state.floor == item.id },\n                        item.label\n                      );\n                    })\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Height data point', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onHeightChanged, value: this.state.height },\n                    this.props.plots.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item.id, value: item.id, selected: self.state.height == item.id },\n                        item.label\n                      );\n                    })\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Weight data point', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onWeightChanged, value: this.state.weight },\n                    this.props.plots.map(function (item) {\n                      return React.createElement(\n                        Option,\n                        { key: item.id, value: item.id, selected: self.state.weight == item.id },\n                        item.label\n                      );\n                    })\n                  )\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = ElevatorProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/HelloWorld/HelloWorld.jsx\":[function(require,module,exports){\n'use strict';\n\nvar HelloWorld = {};\nHelloWorld.HelloWorld = require('./cards/HelloWorld.jsx');\nHelloWorld.HelloWorldProperties = require('./customization/HelloWorldProperties.jsx');\nHelloWorld.HelloWorldStore = require('./stores/HelloWorldStore.js');\n\nmodule.exports = HelloWorld;\n\n},{\"./cards/HelloWorld.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/HelloWorld/cards/HelloWorld.jsx\",\"./customization/HelloWorldProperties.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/HelloWorld/customization/HelloWorldProperties.jsx\",\"./stores/HelloWorldStore.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/HelloWorld/stores/HelloWorldStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/HelloWorld/cards/HelloWorld.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\nvar HelloWorldStore = require('../stores/HelloWorldStore.js');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"20px\",\n    backgroundSize: \"100%\",\n    backgroundRepeat: \"no-repeat\"\n  },\n  counter: {\n    fontSize: \"60px\",\n    textAlign: \"center\",\n    width: \"100%\",\n    paddingTop: \"20px\"\n  }\n};\n\nvar HelloWorld = React.createClass({\n  displayName: 'HelloWorld',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    height: RPT.string,\n    weight: RPT.string,\n    helloColor: RPT.number\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      helloColor: 0\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      message: \"n/a\",\n      count: -1\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    HelloWorldStore.listen(this.onUpdate);\n    HelloWorldStore.Actions.sayHello(\"Hi there!\");\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.isMounted()) {\n      if (payload.helloMessage || payload.helloCount !== undefined) {\n        var model = {};\n        if (payload.helloMessage) {\n          model.message = payload.helloMessage;\n        }\n        if (payload.helloCount) {\n          model.count = payload.helloCount;\n        }\n        this.setState(model);\n      }\n    }\n  },\n\n  render: function render() {\n    var self = this;\n    if (this.state.message && this.state.count > -1) {\n\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n      style = Object.assign(style, { color: this.props.theme.schemes[this.props.helloColor].normal });\n\n      if (this.props.wrapper.width > 2) {\n        style = Object.assign(style, { backgroundImage: \"url('../resources/images/little-kitty.jpg')\" });\n      }\n\n      return React.createElement(\n        'div',\n        { style: style },\n        'The store says:',\n        React.createElement(\n          'div',\n          { className: 'helloWorld' },\n          this.state.message\n        ),\n        React.createElement(\n          'div',\n          { style: styles.counter },\n          this.state.count\n        )\n      );\n    } else {\n      return React.createElement(\n        'div',\n        { style: styles.style },\n        React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: false })\n      );\n    }\n  }\n});\n\nmodule.exports = HelloWorld;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../stores/HelloWorldStore.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/HelloWorld/stores/HelloWorldStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/HelloWorld/customization/HelloWorldProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar ColorSelection = require('../../common/components/ColorSelection.jsx');\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n};\n\nvar HelloWorldProperties = React.createClass({\n  displayName: 'HelloWorldProperties',\n\n  propTypes: {\n    helloColor: RPT.string,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      helloColor: 0\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      helloColor: this.props.helloColor\n    };\n  },\n\n  onColorChanged: function onColorChanged(value) {\n    this.setState({\n      helloColor: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: this.props.nls.resolve('ColorScheme'), theme: this.props.theme },\n                  React.createElement(ColorSelection, { theme: this.props.theme, onChange: this.onColorChanged, initialSelection: this.state.helloColor })\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = HelloWorldProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/ColorSelection.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/ColorSelection.jsx\",\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/HelloWorld/stores/HelloWorldStore.js\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\n\nvar Actions = Reflux.createActions(['sayHello']);\n\nvar HelloWorldStore = Reflux.createStore({\n\n  Actions: Actions,\n  helloCount: 0,\n\n  init: function init() {\n    this.listenTo(Actions.sayHello, this.onSayHello);\n    var self = this;\n    setInterval(function () {\n      self.helloCount++;\n      self.trigger({\n        helloCount: self.helloCount\n      });\n    }, 1000);\n  },\n\n  onSayHello: function onSayHello(payload) {\n    this.trigger({\n      helloMessage: \"Hello from the store!\",\n      helloCount: this.helloCount\n    });\n  }\n\n});\n\nmodule.exports = HelloWorldStore;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/IoTFComponents.jsx\":[function(require,module,exports){\n'use strict';\n\nvar IoTFComponents = {};\nIoTFComponents.Dashboard = require('./Dashboard/Dashboard.jsx');\nIoTFComponents.AAA = require('./AAA/AAA.jsx');\nIoTFComponents.SampleTable = require('./SampleTable/SampleTable.jsx');\nIoTFComponents.experimental = require('./experimental/experimental.jsx');\nIoTFComponents.ElevatorDemo = require('./ElevatorDemo/ElevatorDemo.jsx');\nIoTFComponents.WeatherService = require('./WeatherService/WeatherService.jsx');\nIoTFComponents.Runtastic = require('./Runtastic/Runtastic.jsx');\nIoTFComponents.Webcam = require('./Webcam/Webcam.jsx');\nIoTFComponents.DeviceMap = require('./DeviceMap/DeviceMap.jsx');\nIoTFComponents.HelloWorld = require('./HelloWorld/HelloWorld.jsx');\nIoTFComponents.ToggleGroup = require('./ToggleGroup/ToggleGroup.jsx');\nIoTFComponents.Dialog = require('./Dialog/Dialog.jsx');\nmodule.exports = IoTFComponents;\n\n},{\"./AAA/AAA.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/AAA/AAA.jsx\",\"./Dashboard/Dashboard.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/Dashboard.jsx\",\"./DeviceMap/DeviceMap.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/DeviceMap/DeviceMap.jsx\",\"./Dialog/Dialog.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dialog/Dialog.jsx\",\"./ElevatorDemo/ElevatorDemo.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/ElevatorDemo/ElevatorDemo.jsx\",\"./HelloWorld/HelloWorld.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/HelloWorld/HelloWorld.jsx\",\"./Runtastic/Runtastic.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Runtastic/Runtastic.jsx\",\"./SampleTable/SampleTable.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/SampleTable/SampleTable.jsx\",\"./ToggleGroup/ToggleGroup.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/ToggleGroup/ToggleGroup.jsx\",\"./WeatherService/WeatherService.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/WeatherService/WeatherService.jsx\",\"./Webcam/Webcam.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Webcam/Webcam.jsx\",\"./experimental/experimental.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/experimental/experimental.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Runtastic/Runtastic.jsx\":[function(require,module,exports){\n'use strict';\n\nvar Runtastic = {};\nRuntastic.Runtastic = require('./cards/Runtastic.jsx');\n\nmodule.exports = Runtastic;\n\n},{\"./cards/Runtastic.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Runtastic/cards/Runtastic.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Runtastic/cards/Runtastic.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\nvar CardDatapoint = require('../../common/components/CardDatapoint.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    padding: \"30px\"\n  },\n  empty: {\n    padding: \"20px\"\n  },\n  map: {\n    right: \"30px\",\n    top: \"30px\",\n    position: \"absolute\"\n  }\n};\n\nvar Runtastic = React.createClass({\n  displayName: 'Runtastic',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    demo: RPT.bool,\n    plots: RPT.array\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      plots: [],\n      data: {}\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      \"date\": null,\n      \"distance\": 0,\n      \"duration\": 0,\n      \"gain\": 0,\n      \"id\": \"0\",\n      \"kcal\": 0,\n      \"loss\": 0,\n      \"map\": \"\",\n      \"pace\": 0,\n      \"page\": \"\",\n      \"speed\": 0\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    if (this.props.plots && this.props.plots.length > 0) {\n      var plot = this.props.plots[0];\n      // we just listen for the event since the properties are hardcoded\n      IoTFDeviceStore.Actions.startEventWatch(plot.device, plot.event);\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    if (this.props.plots && this.props.plots.length > 0) {\n      var plot = this.props.plots[0];\n      if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n        var model = {};\n        var data = payload.deviceEvent.data;\n\n        model = this.addData(data, \"date\", model);\n        model = this.addData(data, \"distance\", model);\n        model = this.addData(data, \"duration\", model);\n        model = this.addData(data, \"gain\", model);\n        model = this.addData(data, \"id\", model);\n        model = this.addData(data, \"kcal\", model);\n        model = this.addData(data, \"loss\", model);\n        model = this.addData(data, \"map\", model);\n        model = this.addData(data, \"pace\", model);\n        model = this.addData(data, \"page\", model);\n        model = this.addData(data, \"speed\", model);\n\n        if (Object.keys(model).length > 0) {\n          model.timestamp = new Date().getTime();\n          var self = this;\n          setTimeout(function () {\n            self.setState(model);\n          }, 1);\n        }\n      }\n    }\n  },\n\n  addData: function addData(payload, property, model) {\n    var property = IoTFDeviceStore.normalizeProperty(property);\n    var obj = payload[property];\n\n    if (obj !== undefined) {\n      model[property] = obj;\n    }\n\n    return model;\n  },\n\n  render: function render() {\n    var self = this;\n    if (this.state[\"date\"]) {\n\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n      var html = \"\";\n      var height = this.props.wrapper.height;\n      var width = this.props.wrapper.width;\n\n      var seconds = Math.floor(this.state[\"duration\"] / 1000);\n      var hours = Math.floor(seconds / 3600);\n      seconds = seconds - hours * 3600;\n      var minutes = Math.floor(seconds / 60);\n      seconds = seconds - minutes * 60;\n\n      var dateString = this.state[\"date\"];\n      // handle messed up date format (missing leading 0 for hours below 10)\n      var tokens = dateString.split(\"T\");\n      dateString = tokens[0] + \"T\" + (tokens[1].length < 8 ? \"0\" : \"\") + tokens[1];\n\n      var dateObj = new Date(dateString);\n\n      var main = React.createElement(\n        'div',\n        null,\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Start time' },\n          dateObj.toLocaleString().replace(\",\", \" \")\n        ),\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Distance' },\n          this.state[\"distance\"],\n          ' m'\n        ),\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Duration' },\n          hours,\n          ' h ',\n          minutes,\n          ' m ',\n          seconds,\n          ' s'\n        )\n      );\n\n      var paceSeconds = this.state[\"pace\"];\n      var paceMinutes = Math.floor(paceSeconds);\n      paceSeconds = Math.floor((paceSeconds - paceMinutes) * 60);\n\n      var sub = React.createElement(\n        'div',\n        null,\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Pace' },\n          paceMinutes,\n          ' m ',\n          paceSeconds,\n          ' s per km'\n        ),\n        React.createElement(\n          CardDatapoint,\n          { theme: this.props.theme, unit: 'Speed' },\n          this.state[\"speed\"].toFixed(2),\n          ' km/h'\n        )\n      );\n\n      if (height == 3 && width == 2) {\n\n        return React.createElement(\n          'div',\n          { style: style },\n          main\n        );\n      } else if (height == 4 && width == 4) {\n        var mapUrl = \"http:\" + this.state[\"map\"];\n        mapUrl = mapUrl.replace(\"width=50\", \"width=300\");\n        mapUrl = mapUrl.replace(\"height=70\", \"height=280\");\n        return React.createElement(\n          'div',\n          { style: style },\n          main,\n          sub,\n          React.createElement('img', { style: styles.map, src: mapUrl })\n        );\n      } else {\n        return React.createElement(\n          'div',\n          { style: style },\n          main\n        );\n      }\n    } else {\n      return React.createElement(\n        'div',\n        { style: styles.empty },\n        React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n      );\n    }\n  }\n});\n\nmodule.exports = Runtastic;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/CardDatapoint.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardDatapoint.jsx\",\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/SampleTable/SampleTable.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar RPT = React.PropTypes;\n\nvar SampleTable = React.createClass({\n\tdisplayName: \"SampleTable\",\n\n\tpropTypes: {\n\t\tdata: RPT.array,\n\t\tnls: RPT.object,\n\t\temitter: RPT.object\n\t},\n\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\tdata: [{\n\t\t\t\tid: \"ABC\",\n\t\t\t\tvalue: 123,\n\t\t\t\tname: \"Peter\"\n\t\t\t}, {\n\t\t\t\tid: \"DEF\",\n\t\t\t\tvalue: 456,\n\t\t\t\tname: \"Fernando\"\n\t\t\t}, {\n\t\t\t\tid: \"GHI\",\n\t\t\t\tvalue: 789,\n\t\t\t\tname: \"Henrietta\"\n\t\t\t}],\n\t\t\tstrings: [\"header\", \"footer\"]\n\t\t};\n\t},\n\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\tstrings: {\n\t\t\t\t\"header\": \"\",\n\t\t\t\t\"footer\": \"\"\n\t\t\t}\n\t\t};\n\t},\n\n\thandleNLS: function handleNLS(strings) {\n\t\tthis.setState(strings);\n\t\tthis.render();\n\t},\n\n\tcomponentWillMount: function componentWillMount() {\n\t\tthis.props.nls.resolve(\"SampleTable\", this.props.strings, this.handleNLS);\n\t},\n\n\t_mouseOver: function _mouseOver(event) {\n\t\tthis.props.emitter.emit(\"SampleTable.MouseOverData\", {\n\t\t\tvalue: event.target.innerHTML\n\t\t});\n\t\tconsole.log(event);\n\t},\n\n\trender: function render() {\n\t\tvar rows = this.props.data;\n\t\tvar self = this;\n\t\treturn React.createElement(\n\t\t\t\"div\",\n\t\t\tnull,\n\t\t\tReact.createElement(\n\t\t\t\t\"h3\",\n\t\t\t\tnull,\n\t\t\t\tthis.state.strings.header\n\t\t\t),\n\t\t\tReact.createElement(\n\t\t\t\t\"table\",\n\t\t\t\t{ className: \"deviceTable\" },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"tbody\",\n\t\t\t\t\tnull,\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tObject.keys(rows[0]).map(function (key) {\n\t\t\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\t\t\"th\",\n\t\t\t\t\t\t\t\t{ key: key },\n\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t),\n\t\t\t\t\trows.map(function (row) {\n\t\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\t\t{ key: row.id },\n\t\t\t\t\t\t\tObject.keys(row).map(function (key) {\n\t\t\t\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\t\t\t\"td\",\n\t\t\t\t\t\t\t\t\t{ key: key, onMouseOver: self._mouseOver },\n\t\t\t\t\t\t\t\t\trow[key]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t),\n\t\t\tReact.createElement(\n\t\t\t\t\"h5\",\n\t\t\t\tnull,\n\t\t\t\tthis.state.strings.footer\n\t\t\t)\n\t\t);\n\t}\n});\n\nmodule.exports = SampleTable;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/ToggleGroup/ToggleGroup.jsx\":[function(require,module,exports){\n'use strict';\n\nvar ToggleGroup = {};\nToggleGroup.ToggleGroup = require('./cards/ToggleGroup.jsx');\nToggleGroup.ToggleTile = require('./components/ToggleTile.jsx');\nToggleGroup.ToggleGroupProperties = require('./customization/ToggleGroupProperties.jsx');\n\nmodule.exports = ToggleGroup;\n\n},{\"./cards/ToggleGroup.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/ToggleGroup/cards/ToggleGroup.jsx\",\"./components/ToggleTile.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/ToggleGroup/components/ToggleTile.jsx\",\"./customization/ToggleGroupProperties.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/ToggleGroup/customization/ToggleGroupProperties.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/ToggleGroup/cards/ToggleGroup.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar ToggleTile = require('../components/ToggleTile.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"15px 5px\"\n  }\n};\n\nvar ToggleGroup = React.createClass({\n  displayName: 'ToggleGroup',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    wrapper: RPT.object,\n    plots: RPT.array,\n    iconType: RPT.string,\n    invert: RPT.bool\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      iconType: \"WINDOW\",\n      invert: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      model: {}\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.sub = IoTFDeviceStore.listen(this.onUpdate);\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        IoTFDeviceStore.Actions.startPropertyWatch(plot.device, plot.event, plot.property);\n      }\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.sub) {\n      this.sub();\n    }\n  },\n\n  onUpdate: function onUpdate(payload) {\n    var found = false;\n    var model = {};\n\n    for (var i in this.props.plots) {\n      var plot = this.props.plots[i];\n      if (plot) {\n        if (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n          var property = IoTFDeviceStore.normalizeProperty(plot.property);\n          var obj = payload.deviceEvent.data[property];\n\n          if (obj !== undefined) {\n            model[plot.id] = obj;\n            found = true;\n          }\n        }\n      }\n    }\n    if (found) {\n      this.setState(model);\n    }\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n\n      var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n      var items = [];\n\n      for (var i in this.props.plots) {\n        var plot = this.props.plots[i];\n        var state = this.state[plot.id];\n        var icon = null;\n        if (state !== undefined) {\n          if (this.props.invert) {\n            state = !state;\n          }\n          icon = \"/resources/images/\" + this.props.iconType + \"_\" + (state ? \"ON\" : \"OFF\") + \".png\";\n        }\n        var item = {\n          id: plot.id,\n          label: plot.label,\n          value: state,\n          icon: icon\n        };\n        items.push(item);\n      }\n\n      return React.createElement(\n        'div',\n        { style: style },\n        items.map(function (item) {\n          return React.createElement(\n            ToggleTile,\n            { key: item.id, theme: self.props.theme, icon: item.icon, state: !!item.value },\n            item.label\n          );\n        })\n      );\n    } else {\n      return React.createElement(\n        'div',\n        { style: styles.style },\n        React.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n      );\n    }\n  }\n});\n\nmodule.exports = ToggleGroup;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\",\"../components/ToggleTile.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/ToggleGroup/components/ToggleTile.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/ToggleGroup/components/ToggleTile.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    width: \"95px\",\n    height: \"95px\",\n    margin: \"5px\",\n    float: \"left\"\n  },\n  icon: {\n    width: \"55px\",\n    height: \"55px\",\n    margin: \"5px 20px\",\n    fontSize: \"12px\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  },\n  label: {\n    fontSize: \"12px\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    padding: \"5px 10px\",\n    textAlign: \"center\"\n  }\n};\n\nvar ToggleTile = React.createClass({\n  displayName: \"ToggleTile\",\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    nls: RPT.object,\n    icon: RPT.string,\n    state: RPT.bool\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      icon: null\n    };\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style);\n    var label = Object.assign({}, styles.label);\n    var icon = Object.assign({}, styles.icon);\n\n    if (!this.props.state) {\n      label.color = this.props.theme.minor;\n      label.backgroundColor = this.props.theme.content;\n      icon.color = this.props.theme.minor;\n    } else {\n      label.color = this.props.theme.titleText;\n      label.backgroundColor = this.props.theme.light;\n    }\n\n    if (this.props.icon) {\n      return React.createElement(\n        \"div\",\n        { style: style },\n        React.createElement(\"img\", { src: this.props.icon, style: styles.icon }),\n        React.createElement(\n          \"div\",\n          { style: label },\n          this.props.children\n        )\n      );\n    } else {\n      return React.createElement(\n        \"div\",\n        { style: style },\n        React.createElement(\n          \"div\",\n          { style: icon },\n          \"Unknown state\"\n        ),\n        React.createElement(\n          \"div\",\n          { style: label },\n          this.props.children\n        )\n      );\n    }\n  }\n});\n\nmodule.exports = ToggleTile;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/ToggleGroup/customization/ToggleGroupProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar Label = require('../../common/components/Label.jsx');\nvar ComboBox = require('../../common/components/ComboBox.jsx');\nvar Option = require('../../common/components/Option.jsx');\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar Select = require('../../common/components/Select.jsx');\nvar SwitchBtn = require('../../common/components/SwitchBtn.jsx');\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n};\n\nvar ToggleGroupProperties = React.createClass({\n  displayName: 'ToggleGroupProperties',\n\n  propTypes: {\n    iconType: RPT.string,\n    invert: RPT.bool,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      iconType: \"WINDOW\",\n      invert: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      iconType: this.props.iconType,\n      invert: this.props.invert !== undefined ? this.props.invert : null\n    };\n  },\n\n  onIconTypeChanged: function onIconTypeChanged(value) {\n    this.setState({\n      iconType: value\n    });\n  },\n\n  onInvertChanged: function onInvertChanged(value) {\n    this.setState({\n      invert: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n\n      var iconType = this.state.iconType;\n\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Visualization', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { theme: this.props.theme, onChange: this.onIconTypeChanged, value: iconType },\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'DISC', selected: iconType == \"DISC\" },\n                      'Disc'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'LIGHT', selected: iconType == \"LIGHT\" },\n                      'Light'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'SWITCH', selected: iconType == \"SWITCH\" },\n                      'Switch'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'FAN', selected: iconType == \"FAN\" },\n                      'Fan'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'HEATING', selected: iconType == \"HEATING\" },\n                      'Heating'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'BATTERY', selected: iconType == \"BATTERY\" },\n                      'Battery'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'DOOR', selected: iconType == \"DOOR\" },\n                      'Door'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'WINDOW', selected: iconType == \"WINDOW\" },\n                      'Window'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'SMILEY', selected: iconType == \"SMILEY\" },\n                      'Smiley'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'BLANKET', selected: iconType == \"BLANKET\" },\n                      'Blanket'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'WATER', selected: iconType == \"WATER\" },\n                      'Water'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'SPRINKLER', selected: iconType == \"SPRINKLER\" },\n                      'Sprinkler'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'PUMP', selected: iconType == \"PUMP\" },\n                      'Pump'\n                    ),\n                    React.createElement(\n                      Option,\n                      { theme: this.props.theme, value: 'RAIN', selected: iconType == \"RAIN\" },\n                      'Rain'\n                    )\n                  )\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Invert value', theme: this.props.theme },\n                  React.createElement(SwitchBtn, { theme: this.props.theme, onChange: this.onInvertChanged, initialValue: !!this.state.invert, trueText: 'true = OFF', falseText: 'true = ON' })\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = ToggleGroupProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/ComboBox.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/ComboBox.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\",\"../../common/components/SwitchBtn.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/SwitchBtn.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/WeatherService/WeatherService.jsx\":[function(require,module,exports){\n'use strict';\n\nvar WeatherService = {};\nWeatherService.WeatherService = require('./cards/WeatherService.jsx');\nWeatherService.WeatherServiceProperties = require('./customization/WeatherServiceProperties.jsx');\n\nmodule.exports = WeatherService;\n\n},{\"./cards/WeatherService.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/WeatherService/cards/WeatherService.jsx\",\"./customization/WeatherServiceProperties.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/WeatherService/customization/WeatherServiceProperties.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/WeatherService/cards/WeatherService.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar IoTFDeviceStore = require('../../common/stores/IoTFDeviceStore');\nvar LoadIndicator = require('../../common/components/LoadIndicator.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n\t\tcontainer: {\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tposition: \"relative\",\n\t\t\t\toverflow: \"hidden\"\n\t\t},\n\t\tempty: {\n\t\t\t\tpadding: \"20px\"\n\t\t}\n};\n\nvar path = \"resources/images/\";\n\nvar days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n\nvar iconMap = {\n\t\t\"chanceflurries\": \"w1\",\n\t\t\"chancerain\": \"w2\",\n\t\t\"chancesleet\": \"w3\",\n\t\t\"chancesnow\": \"w4\",\n\t\t\"chancetstorms\": \"w5\",\n\t\t\"clear\": \"w6\",\n\t\t\"cloudy\": \"w7\",\n\t\t\"flurries\": \"w8\",\n\t\t\"fog\": \"w9\",\n\t\t\"hazy\": \"w10\",\n\t\t\"mostlycloudy\": \"w11\",\n\t\t\"mostlysunny\": \"w12\",\n\t\t\"partlycloudy\": \"w13\",\n\t\t\"partlysunny\": \"w14\",\n\t\t\"sleet\": \"w15\",\n\t\t\"rain\": \"w16\",\n\t\t\"snow\": \"w17\",\n\t\t\"sunny\": \"w18\",\n\t\t\"tstorms\": \"w19\",\n\t\t\"unknown\": \"w0\"\n};\n\nvar WeatherService = React.createClass({\n\t\tdisplayName: 'WeatherService',\n\n\t\tpropTypes: {\n\t\t\t\ttheme: RPT.object.isRequired,\n\t\t\t\tstyle: RPT.object,\n\t\t\t\tnls: RPT.object,\n\t\t\t\twrapper: RPT.object,\n\t\t\t\tdemo: RPT.bool,\n\t\t\t\tplots: RPT.array,\n\t\t\t\tlocation: RPT.string\n\t\t},\n\n\t\tgetDefaultProps: function getDefaultProps() {\n\t\t\t\treturn {\n\t\t\t\t\t\tplots: [],\n\t\t\t\t\t\tdata: {}\n\t\t\t\t};\n\t\t},\n\n\t\tgetInitialState: function getInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\t\t\"DATIcon\": \"unknown\",\n\t\t\t\t\t\t\"TomorrowIcon\": \"unknown\",\n\t\t\t\t\t\t\"DewPoint\": \"-\",\n\t\t\t\t\t\t\"Visibility\": \"-\",\n\t\t\t\t\t\t\"Location\": \"-\",\n\t\t\t\t\t\t\"IsDark\": \"-\",\n\t\t\t\t\t\t\"SunriseNow\": \"-\",\n\t\t\t\t\t\t\"WindDirection\": \"-\",\n\t\t\t\t\t\t\"WindSpeed\": \"-\",\n\t\t\t\t\t\t\"TomorrowLow\": \"-\",\n\t\t\t\t\t\t\"DATHigh\": \"-\",\n\t\t\t\t\t\t\"TodayHigh\": \"-\",\n\t\t\t\t\t\t\"DATLow\": \"-\",\n\t\t\t\t\t\t\"TodayIcon\": \"unknown\",\n\t\t\t\t\t\t\"Sunset\": \"-\",\n\t\t\t\t\t\t\"MoonAge\": \"-\",\n\t\t\t\t\t\t\"TodayLow\": \"-\",\n\t\t\t\t\t\t\"TomorrowHigh\": \"-\",\n\t\t\t\t\t\t\"Pressure\": \"-\",\n\t\t\t\t\t\t\"Temperature\": \"-\",\n\t\t\t\t\t\t\"Humidity\": \"-\",\n\t\t\t\t\t\t\"Sunrise\": \"-\",\n\t\t\t\t\t\t\"MoonLight\": \"-\",\n\t\t\t\t\t\t\"SunsetNow\": \"-\"\n\n\t\t\t\t};\n\t\t},\n\n\t\tcomponentDidMount: function componentDidMount() {\n\t\t\t\tthis.sub = IoTFDeviceStore.listen(this.onUpdate);\n\t\t\t\tif (this.props.plots && this.props.plots.length > 0) {\n\t\t\t\t\t\tvar plot = this.props.plots[0];\n\t\t\t\t\t\t// we just listen for the event since the properties are hardcoded\n\t\t\t\t\t\tIoTFDeviceStore.Actions.startEventWatch(plot.device, plot.event);\n\t\t\t\t}\n\t\t},\n\n\t\tcomponentWillUnmount: function componentWillUnmount() {\n\t\t\t\tif (this.sub) {\n\t\t\t\t\t\tthis.sub();\n\t\t\t\t}\n\t\t},\n\n\t\tonUpdate: function onUpdate(payload) {\n\n\t\t\t\tif (this.props.plots && this.props.plots.length > 0) {\n\t\t\t\t\t\tvar plot = this.props.plots[0];\n\t\t\t\t\t\tif (payload.deviceEvent && payload.deviceEvent.deviceId == plot.device && payload.deviceEvent.eventType == plot.event) {\n\n\t\t\t\t\t\t\t\tvar model = {};\n\t\t\t\t\t\t\t\tvar data = payload.deviceEvent.data;\n\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DATIcon\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TomorrowIcon\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DewPoint\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Visibility\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Location\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"IsDark\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"SunriseNow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"WindDirection\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"WindSpeed\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TomorrowLow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DATHigh\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TodayHigh\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"DATLow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TodayIcon\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Sunset\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"MoonAge\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TodayLow\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"TomorrowHigh\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Pressure\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Temperature\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Humidity\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"Sunrise\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"MoonLight\", model);\n\t\t\t\t\t\t\t\tmodel = this.addData(data, \"SunsetNow\", model);\n\n\t\t\t\t\t\t\t\tif (Object.keys(model).length > 0) {\n\t\t\t\t\t\t\t\t\t\tmodel.timestamp = new Date().getTime();\n\t\t\t\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\t\t\t\t\tself.setState(model);\n\t\t\t\t\t\t\t\t\t\t}, 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t},\n\n\t\taddData: function addData(payload, property, model) {\n\t\t\t\tvar property = IoTFDeviceStore.normalizeProperty(property);\n\t\t\t\tvar obj = payload[property];\n\n\t\t\t\tif (obj !== undefined) {\n\t\t\t\t\t\tmodel[property] = obj;\n\t\t\t\t}\n\n\t\t\t\treturn model;\n\t\t},\n\n\t\tgetDayText: function getDayText(dayOfWeek) {\n\t\t\t\tdayOfWeek = dayOfWeek % 7;\n\t\t\t\tvar text = this.props.nls.resolve(days[dayOfWeek]);\n\t\t\t\treturn text;\n\t\t},\n\n\t\tgetContentToday: function getContentToday() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherTodayTable'><tbody>\" + \"<tr>\" + \"<td>\" + this.props.nls.resolve(\"High\") + \" \" + this.state.TodayHigh + \"°</td>\" + \"<td rowspan='3'><img class='shWeatherTodayIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td rowspan='3' class='shWeatherTodayValue'>\" + this.state.Temperature + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherTodayCity'>\" + this.state.Location + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td>\" + this.props.nls.resolve(\"Low\") + \" \" + this.state.TodayLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentSmall: function getContentSmall() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherSmallTable'><tbody>\" + \"<tr>\" + \"<td rowspan='3'><img class='shWeatherSmallIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td class='shWeatherSmallHighLow'>H: \" + this.state.TodayHigh + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherSmallValue'>\" + this.state.Temperature + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherSmallHighLow'>L: \" + this.state.TodayLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentForecast: function getContentForecast() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherForecastTable'><tbody>\" + \"<tr class='shWeatherForecastHeader'>\" + \"<td>\" + this.getDayText(today) + \"</td>\" + \"<td>\" + this.getDayText(today + 1) + \"</td>\" + \"<td>\" + this.getDayText(today + 2) + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TomorrowIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.DATIcon] + \".png'></td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TodayHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TomorrowHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.DATHigh + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TodayLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TomorrowLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.DATLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentForecastSmall: function getContentForecastSmall() {\n\t\t\t\tvar today = new Date().getDay();\n\n\t\t\t\tvar html = \"<table class='shWeatherForecastTableSmall'><tbody>\" + \"<tr class='shWeatherForecastHeader'>\" + \"<td>\" + this.getDayText(today) + \"</td>\" + \"<td>\" + this.getDayText(today + 1) + \"</td>\" + \"<td>\" + this.getDayText(today + 2) + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TodayIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.TomorrowIcon] + \".png'></td>\" + \"<td><img class='shWeatherForecastIcon' src='\" + path + iconMap[this.state.DATIcon] + \".png'></td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TodayHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.TomorrowHigh + \"°</td>\" + \"<td class='shWeatherForecastHigh'>\" + this.state.DATHigh + \"°</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TodayLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.TomorrowLow + \"°</td>\" + \"<td class='shWeatherForecastLow'>\" + this.state.DATLow + \"°</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentDetails: function getContentDetails() {\n\n\t\t\t\tvar html = \"<table class='shWeatherDetailsTable'><tbody>\" + \"<tr>\" + \"<td rowspan='2' class='shWeatherDetailsIconCell'><img class='shWeatherDetailsIcon' src='\" + path + \"w20.png'></td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.WindDirection + \"</td>\" + \"<td rowspan='2' class='shWeatherDetailsIconCell'><img class='shWeatherDetailsIcon' src='\" + path + \"w21.png'></td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.Sunset + \" h</td>\" + \"<td rowspan='2' class='shWeatherDetailsIconCell'><img class='shWeatherDetailsIcon' src='\" + path + \"w22.png'></td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.MoonAge + \" days</td>\" + \"</tr>\" + \"<tr>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.WindSpeed + \" km/h</td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.Sunrise + \" h</td>\" + \"<td class='shWeatherDetailsValue'>\" + this.state.MoonLight + \" %</td>\" + \"</tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\tgetContentSideTable: function getContentSideTable() {\n\n\t\t\t\tvar html = \"<table class='shWeatherSideTable'><tbody>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w23.png'><br>\" + this.state.Pressure + \" mBar</td></tr>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w24.png'><br>\" + this.state.Humidity + \"</td></tr>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w25.png'><br>\" + this.state.DewPoint + \" °</td></tr>\" + \"<tr><td class='shWeatherDetailsValue'><img class='shWeatherDetailsIcon' src='\" + path + \"w26.png'><br>\" + this.state.Visibility + \" km</td></tr>\" + \"</tbody></table>\";\n\n\t\t\t\treturn html;\n\t\t},\n\n\t\trender: function render() {\n\t\t\t\tvar self = this;\n\t\t\t\tif (this.state !== undefined) {\n\n\t\t\t\t\t\tvar style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n\t\t\t\t\t\tvar html = \"\";\n\t\t\t\t\t\tvar height = this.props.wrapper.height;\n\t\t\t\t\t\tvar width = this.props.wrapper.width;\n\n\t\t\t\t\t\tif (height == 2 && width == 4) {\n\t\t\t\t\t\t\t\t// widescreen format\n\t\t\t\t\t\t\t\thtml = \"<table class='shWeatherWidescreen'><tbody><tr><td>\" + this.getContentToday() + \"</td><td>\" + this.getContentForecast() + \"</td></tr></tbody></table>\";\n\t\t\t\t\t\t} else if (width == 2) {\n\t\t\t\t\t\t\t\thtml = this.getContentSmall();\n\t\t\t\t\t\t} else if (width == 3) {\n\t\t\t\t\t\t\t\thtml = this.getContentForecastSmall();\n\t\t\t\t\t\t} else if (width == 4 && height == 4) {\n\t\t\t\t\t\t\t\thtml = this.getContentToday() + this.getContentForecast();\n\t\t\t\t\t\t} else if (width == 4) {\n\t\t\t\t\t\t\t\thtml = \"<table class='shWeatherForecastBaseTabel'><tbody><tr><td>\" + this.getContentToday() + \"</td><td valign='bottom' rowspan='3' class='shWeatherDetailsSide'>\" + this.getContentSideTable() + \"</td></tr>\" + \"<tr><td colspan='2'></td></tr>\" + \"<tr><td>\" + this.getContentForecast() + \"</td><td></td></tr>\" + \"<tr><td colspan='2'>\" + this.getContentDetails() + \"</td></tr>\" + \"<tbody></table>\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn React.createElement('div', { style: style, dangerouslySetInnerHTML: { __html: html } });\n\n\t\t\t\t\t\t//  return <div style={styles.style}>\n\t\t\t\t\t\t//  \t\t<p>Weather Service goes here</p>\n\t\t\t\t\t\t// <div>DATIcon: {this.state.DATIcon}</div>\n\t\t\t\t\t\t// <div>TomorrowIcon: {this.state.TomorrowIcon}</div>\n\t\t\t\t\t\t// <div>DewPoint: {this.state.DewPoint}</div>\n\t\t\t\t\t\t// <div>Visibility: {this.state.Visibility}</div>\n\t\t\t\t\t\t// <div>Location: {this.state.Location}</div>\n\t\t\t\t\t\t// <div>IsDark: {this.state.IsDark}</div>\n\t\t\t\t\t\t// <div>SunriseNow: {this.state.SunriseNow}</div>\n\t\t\t\t\t\t// <div>WindDirection: {this.state.WindDirection}</div>\n\t\t\t\t\t\t// <div>WindSpeed: {this.state.WindSpeed}</div>\n\t\t\t\t\t\t// <div>TomorrowLow: {this.state.TomorrowLow}</div>\n\t\t\t\t\t\t// <div>DATHigh: {this.state.DATHigh}</div>\n\t\t\t\t\t\t// <div>TodayIcon: {this.state.TodayIcon}</div>\n\t\t\t\t\t\t// <div>DATLow: {this.state.DATLow}</div>\n\t\t\t\t\t\t// <div>TodayIcon: {this.state.TodayIcon}</div>\n\t\t\t\t\t\t// <div>Sunset: {this.state.Sunset}</div>\n\t\t\t\t\t\t// <div>MoonAge: {this.state.MoonAge}</div>\n\t\t\t\t\t\t// <div>TodayLow: {this.state.TodayLow}</div>\n\t\t\t\t\t\t// <div>TomorrowHigh: {this.state.TomorrowHigh}</div>\n\t\t\t\t\t\t// <div>Pressure: {this.state.Pressure}</div>\n\t\t\t\t\t\t// <div>Temperature: {this.state.Temperature}</div>\n\t\t\t\t\t\t// <div>Humidity: {this.state.Humidity}</div>\n\t\t\t\t\t\t// <div>Sunrise: {this.state.Sunrise}</div>\n\t\t\t\t\t\t// <div>MoonLight: {this.state.MoonLight}</div>\n\t\t\t\t\t\t// <div>SunsetNow: {this.state.SunsetNow}</div>\n\t\t\t\t\t\t//  \t</div>\n\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t\t\t{ style: styles.empty },\n\t\t\t\t\t\t\t\t\t\tReact.createElement(LoadIndicator, { theme: this.props.theme, useDataPoints: true })\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t}\n});\n\nmodule.exports = WeatherService;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\",\"../../common/stores/IoTFDeviceStore\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/WeatherService/customization/WeatherServiceProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n\n};\n\nvar WeatherServiceProperties = React.createClass({\n  displayName: 'WeatherServiceProperties',\n\n  propTypes: {\n    location: RPT.string,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      location: \"Rottenburg\"\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      location: this.props.location\n    };\n  },\n\n  onLocationChanged: function onLocationChanged(value) {\n    this.setState({\n      location: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    if (this.state) {\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Location', theme: this.props.theme },\n                  React.createElement(InputField, { theme: this.props.theme, onChange: this.onLocationChanged, initialValue: this.state.location })\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = WeatherServiceProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Webcam/Webcam.jsx\":[function(require,module,exports){\n'use strict';\n\nvar Webcam = {};\nWebcam.Webcam = require('./cards/Webcam.jsx');\nWebcam.WebcamProperties = require('./customization/WebcamProperties.jsx');\n\nmodule.exports = Webcam;\n\n},{\"./cards/Webcam.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Webcam/cards/Webcam.jsx\",\"./customization/WebcamProperties.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Webcam/customization/WebcamProperties.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Webcam/cards/Webcam.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar RPT = React.PropTypes;\n\nvar styles = {\n\tcontainer: {\n\t\theight: \"100%\"\n\t},\n\timage: {}\n};\n\n// http://kaufhaus.ludwigbeck.de/manual/webcam/1sec.jpg\n// http://blog.muenchen.de/marienplatzcam/marienplatzgross001.jpg\n// http://mymielke.no-ip.biz:8091/snapshot.cgi?user=ibm&pwd=1911\n\nvar Webcam = React.createClass({\n\tdisplayName: 'Webcam',\n\n\tpropTypes: {\n\t\ttheme: RPT.object.isRequired,\n\t\tstyle: RPT.object,\n\t\tnls: RPT.object,\n\t\twrapper: RPT.object,\n\t\tfrequency: RPT.number,\n\t\turl: RPT.string\n\t},\n\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\tfrequency: 5,\n\t\t\turl: \"http://kaufhaus.ludwigbeck.de/manual/webcam/1sec.jpg\"\n\t\t};\n\t},\n\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\turl: null\n\t\t};\n\t},\n\n\tcomponentDidMount: function componentDidMount() {\n\t\tthis.load();\n\t},\n\n\tcomponentWillUnmount: function componentWillUnmount() {\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t},\n\n\tload: function load() {\n\t\tvar time = new Date().getTime();\n\t\tvar separator = this.props.url.indexOf('?') > -1 ? \"&\" : \"?\";\n\t\tvar url = this.props.url + separator + \"nocache=\" + time;\n\t\tthis.setState({\n\t\t\turl: url,\n\t\t\ttime: time\n\t\t});\n\t},\n\n\treload: function reload(event) {\n\t\tif (this.node) {\n\t\t\tthis.height = this.node.offsetHeight - 32;\n\t\t\tthis.width = this.node.offsetWidth;\n\t\t\tvar image = event.target;\n\t\t\tthis.imgHeight = image.naturalHeight;\n\t\t\tthis.imgWidth = image.naturalWidth;\n\n\t\t\tvar factor = Math.max(this.height / this.imgHeight, this.width / this.imgWidth);\n\t\t\timage.style.width = Math.ceil(this.imgWidth * factor) + \"px\";\n\t\t\timage.style.height = Math.ceil(this.imgHeight * factor) + \"px\";\n\t\t}\n\n\t\tif (this.timeout) {\n\t\t\treturn;\n\t\t}\n\t\tvar self = this;\n\t\tvar time = new Date().getTime();\n\t\tif (this.state.time <= time - this.props.frequency * 1000) {\n\t\t\tthis.load();\n\t\t} else {\n\t\t\tthis.timeout = setTimeout(function () {\n\t\t\t\tself.timeout = null;\n\t\t\t\tself.load();\n\t\t\t}, this.props.frequency * 1000 - (time - this.state.time));\n\t\t}\n\t},\n\n\tsetContainer: function setContainer(ref) {\n\t\tif (ref) {\n\t\t\tthis.node = ReactDOM.findDOMNode(ref);\n\t\t}\n\t},\n\n\trender: function render() {\n\t\tif (this.state.url) {\n\t\t\treturn React.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ style: styles.container, ref: this.setContainer },\n\t\t\t\tReact.createElement('img', { style: styles.image, onLoad: this.reload, src: this.state.url })\n\t\t\t);\n\t\t} else {\n\t\t\treturn React.createElement(\n\t\t\t\t'div',\n\t\t\t\tnull,\n\t\t\t\t'Loading...'\n\t\t\t);\n\t\t}\n\t}\n});\n\nmodule.exports = Webcam;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/Webcam/customization/WebcamProperties.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar InputField = require('../../common/components/InputField.jsx');\nvar Label = require('../../common/components/Label.jsx');\nvar Select = require('../../common/components/Select.jsx');\nvar Option = require('../../common/components/Option.jsx');\n\nvar styles = {\n  container: {},\n  table: {\n    width: \"100%\"\n  }\n\n};\n\nvar WebcamProperties = React.createClass({\n  displayName: 'WebcamProperties',\n\n  propTypes: {\n    url: RPT.string,\n    frequency: RPT.number,\n    nls: RPT.object,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      url: \"http://kaufhaus.ludwigbeck.de/manual/webcam/1sec.jpg\",\n      frequency: 5\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      url: this.props.url,\n      frequency: this.props.frequency\n    };\n  },\n\n  onURLChanged: function onURLChanged(value) {\n    this.setState({\n      url: value\n    });\n  },\n\n  onFrequencyChanged: function onFrequencyChanged(value) {\n    this.setState({\n      frequency: value\n    });\n  },\n\n  onUpdate: function onUpdate(state) {\n    var state = Object.assign({}, this.state, state);\n    this.setState(state);\n  },\n\n  render: function render() {\n    var self = this;\n\n    var frequency = parseInt(this.state.frequency, 10);\n\n    if (this.state) {\n      return React.createElement(\n        'div',\n        { style: Object.assign({}, styles.container, this.props.style) },\n        React.createElement(\n          'table',\n          { style: styles.table },\n          React.createElement(\n            'tbody',\n            null,\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                { colSpan: '2' },\n                React.createElement(\n                  Label,\n                  { label: 'Webcam URL', theme: this.props.theme },\n                  React.createElement(InputField, { theme: this.props.theme, onChange: this.onURLChanged, initialValue: this.state.url })\n                )\n              )\n            ),\n            React.createElement(\n              'tr',\n              null,\n              React.createElement(\n                'td',\n                null,\n                React.createElement(\n                  Label,\n                  { label: 'Refresh rate', theme: this.props.theme },\n                  React.createElement(\n                    Select,\n                    { onChange: this.onFrequencyChanged, value: \"\" + frequency },\n                    React.createElement(\n                      Option,\n                      { value: '1', selected: frequency == 1 },\n                      '1 second'\n                    ),\n                    React.createElement(\n                      Option,\n                      { value: '5', selected: frequency == 5 },\n                      '5 seconds'\n                    ),\n                    React.createElement(\n                      Option,\n                      { value: '10', selected: frequency == 10 },\n                      '10 seconds'\n                    ),\n                    React.createElement(\n                      Option,\n                      { value: '15', selected: frequency == 15 },\n                      '15 seconds'\n                    ),\n                    React.createElement(\n                      Option,\n                      { value: '30', selected: frequency == 30 },\n                      '30 seconds'\n                    ),\n                    React.createElement(\n                      Option,\n                      { value: '60', selected: frequency == 60 },\n                      '60 seconds'\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      );\n    } else {\n      return React.createElement('div', null);\n    }\n  }\n});\n\nmodule.exports = WebcamProperties;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../common/components/InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"../../common/components/Label.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\",\"../../common/components/Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\",\"../../common/components/Select.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Accordion.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar Icon = require('./Icon.jsx');\n\nvar styles = {\n\n    container: {\n        marginBottom: \"15px\",\n        boxSizing: \"border-box\",\n        clear: \"both\",\n        cursor: \"pointer\"\n    },\n    canvas: {\n        paddingLeft: \"20px\"\n    },\n    title: {\n        height: \"24px\",\n        padding: \"5px 0px\",\n        fontSize: \"16px\",\n        fontWeight: \"500\",\n        lineHeight: \"24px\"\n    },\n    icon: {\n        float: \"right\"\n    }\n\n};\n\nvar Accordion = React.createClass({\n    displayName: 'Accordion',\n\n    propTypes: {\n        theme: RPT.object.isRequired,\n        style: RPT.object,\n        id: RPT.string,\n        label: RPT.string,\n        onRemove: RPT.func,\n        onExpand: RPT.func,\n        expanded: RPT.bool\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            label: \"\",\n            expanded: false\n        };\n    },\n\n    componentWillMount: function componentWillMount() {},\n\n    componentDidMount: function componentDidMount(payload) {},\n\n    onRemove: function onRemove() {\n        if (this.props.onRemove) {\n            this.props.onRemove(this.props.id);\n        }\n        return false;\n    },\n\n    onToggle: function onToggle() {\n        if (this.props.onExpand) {\n            this.props.onExpand(!this.props.expanded ? this.props.id : null);\n        }\n    },\n\n    render: function render() {\n        var canvas = \"\";\n        if (this.props.expanded) {\n            canvas = React.createElement(\n                'div',\n                { style: styles.canvas },\n                this.props.children\n            );\n        }\n\n        return React.createElement(\n            'div',\n            { style: styles.container },\n            React.createElement(\n                'div',\n                { style: styles.title, onClick: this.onToggle },\n                this.props.label,\n                React.createElement(Icon, { style: styles.icon, theme: this.props.theme, size: 20, color: this.props.theme.major, icon: 'delete', onClick: this.onRemove })\n            ),\n            canvas\n        );\n    }\n});\n\nmodule.exports = Accordion;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/BarChart.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar c3 = (typeof window !== \"undefined\" ? window['c3'] : typeof global !== \"undefined\" ? global['c3'] : null);\nvar RPT = React.PropTypes;\nvar Icon = require('./Icon.jsx');\nvar Utils = require('../../Dashboard/dashboard/DashboardUtils');\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\"\n  }\n};\n\nvar BarChart = React.createClass({\n  displayName: 'BarChart',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    data: RPT.array,\n    names: RPT.object,\n    type: RPT.string,\n    title: RPT.string,\n    horizontal: RPT.bool,\n    unit: RPT.string,\n    precision: RPT.number,\n    small: RPT.bool,\n    width: RPT.number,\n    height: RPT.number\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      data: [],\n      names: {},\n      horizontal: false,\n      unit: \"\",\n      precision: 0\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.createGraph();\n  },\n\n  createGraph: function createGraph() {\n    var self = this;\n    this.destroyGraph();\n\n    var container = ReactDOM.findDOMNode(this);\n\n    var dom = document.createElement(\"div\");\n    container.appendChild(dom);\n\n    this.width = this.props.width ? this.props.width : container.offsetWidth;\n    this.height = this.props.height ? this.props.height : container.offsetHeight;\n\n    var colors = this.props.theme.palette;\n\n    if (this.width > 0 && this.height > 0) {\n\n      dom.style.width = this.width + \"px\";\n      dom.style.height = this.height + \"px\";\n\n      var names = ['x'];\n      var data = ['value'];\n      for (var i in this.props.data) {\n        var item = this.props.data[i];\n        names.push(this.props.names[item[0]]);\n        data.push(item[1]);\n      }\n\n      var config = {\n        size: {\n          width: this.width,\n          height: this.height\n        },\n        data: {\n          type: \"bar\",\n          x: 'x',\n          columns: [names, data],\n          color: function color(inColor, data) {\n            if (data.index !== undefined) {\n              return colors[data.index % colors.length];\n            }\n            return inColor;\n          },\n          labels: {\n            format: function format(v, id, i, j) {\n              if (self.props.precision) {\n                v = v.toFixed(self.props.precision);\n              }\n              return v + \" \" + self.props.unit;\n            }\n          }\n        },\n        transition: {\n          duration: 200\n        },\n        axis: {\n          rotated: this.props.horizontal,\n          x: {\n            type: 'category'\n          },\n          y: {\n            show: !this.props.small\n          }\n        },\n        tooltip: {\n          grouped: false\n        },\n        legend: {\n          show: false\n        },\n        padding: {\n          left: 0,\n          bottom: 0,\n          right: 0,\n          top: 0\n        },\n        bar: {\n          width: {\n            ratio: 0.7,\n            zerobased: false\n          }\n        }\n      };\n\n      if (this.props.horizontal || this.props.small) {\n        config.padding = {\n          left: 100,\n          bottom: 0,\n          right: 0,\n          top: 0\n        };\n      } else {\n        config.padding = {\n          left: 0,\n          bottom: 10,\n          right: 0,\n          top: 0\n        };\n      }\n\n      this.graph = c3.generate(config);\n\n      dom.appendChild(this.graph.element);\n    }\n  },\n\n  destroyGraph: function destroyGraph() {\n    var dom = ReactDOM.findDOMNode(this);\n    while (dom.firstChild) {\n      dom.removeChild(dom.firstChild);\n    }\n    this.graph = null;\n  },\n\n  updateGraph: function updateGraph() {\n    var self = this;\n    if (!this.graph) {\n      this.createGraph();\n    }\n    if (this.graph) {\n      var names = ['x'];\n      var data = ['value'];\n      for (var i = 0; i < this.props.data.length; i++) {\n        var item = this.props.data[i];\n        names.push(this.props.names[item[0]]);\n        data.push(item[1]);\n      }\n\n      var container = ReactDOM.findDOMNode(this);\n      var width = this.props.width ? this.props.width : container.offsetWidth;\n      var height = this.props.height ? this.props.height : container.offsetHeight;\n      if (this.width != width || this.height != height) {\n        this.width = width;\n        this.height = height;\n        this.graph.resize({ height: this.height, width: this.width });\n      }\n\n      self.graph.load({\n        columns: [names, data]\n      });\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this.destroyGraph();\n  },\n\n  checkIfPropsChanged: function checkIfPropsChanged(a, b) {\n    if (JSON.stringify(a.theme) != JSON.stringify(b.theme) || a.type != b.type || a.horizontal != b.horizontal || a.unit != b.unit || a.precision != b.precision || a.width != b.width || a.height != b.height) {\n      this.createGraph();\n    }\n  },\n\n  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n    this.updateGraph();\n    this.checkIfPropsChanged(prevProps, this.props);\n  },\n\n  render: function render() {\n    if (!this.id) {\n      this.id = \"X\" + Math.round(Math.random() * 1000000);\n    }\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n    return React.createElement('div', { className: 'barChart', id: this.id, style: style });\n  }\n});\n\nmodule.exports = BarChart;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/dashboard/DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\",\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Button.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\n\nvar styles = {\n  componentButtonText: {\n    textAlign: \"center\",\n    display: \"inline-block\",\n    padding: \"14px 35px\",\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    marginRight: \"20px\",\n    fontSize: \"15px\",\n    borderStyle: \"solid\",\n    borderWidth: \"2px\"\n  }\n};\n\nvar ButtonText = React.createClass({\n  displayName: \"ButtonText\",\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object,\n    text: RPT.string,\n    cursor: RPT.string,\n    width: RPT.number,\n    disabled: RPT.bool,\n    onClick: RPT.func,\n    isPrimary: RPT.bool,\n\n    textColor: RPT.string,\n    textHoverActiveColor: RPT.string,\n    textPressColor: RPT.string,\n\n    bgColor: RPT.string,\n    bgHoverColor: RPT.string,\n    bgPressColor: RPT.string,\n\n    borderColor: RPT.string,\n    borderHoverColor: RPT.string,\n    borderPressColor: RPT.string\n  },\n\n  getInitialState: function getInitialState() {\n    return { hover: false };\n  },\n\n  mouseOver: function mouseOver() {\n    this.setState({ hover: true });\n  },\n\n  mouseOut: function mouseOut() {\n    this.setState({ hover: false });\n  },\n\n  mouseDown: function mouseDown() {\n    this.setState({ press: true });\n  },\n\n  mouseUp: function mouseUp() {\n    this.setState({ press: false });\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (nextProps.disabled !== undefined) {\n      this.setState({ disabled: true });\n    } else {\n      this.setState({ disabled: false });\n    }\n  },\n\n  componentWillMount: function componentWillMount() {\n    if (this.props.disabled) {\n      this.setState({ disabled: true });\n    } else {\n      this.setState({ disabled: false });\n    }\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      textColor: \"#5596E6\",\n      textHoverColor: \"#4178BE\",\n      bgColor: \"\",\n      borderColor: \"#5596E6\",\n      borderHoverColor: \"#4178BE\",\n\n      textPrimaryColor: \"#fff\",\n      textPrimaryHoverColor: \"#fff\",\n      bgPrimaryColor: \"#5596E6\",\n      bgPrimaryHoverColor: \"#4178BE\",\n      borderPrimaryColor: \"#5596E6\",\n      borderPrimaryHoverColor: \"#4178BE\",\n\n      text: \"BUTTON\",\n      minWidth: \"140px\",\n      minHeight: \"50px\",\n      btnCursor: \"pointer\",\n      onClick: function onClick() {},\n      isPrimary: false\n    };\n  },\n\n  onClick: function onClick() {\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  },\n\n  render: function render() {\n    var stateStyle = {};\n\n    stateStyle.width = this.props.width;\n\n    if (this.props.isPrimary) {\n      if (this.state.hover || this.state.press) {\n        stateStyle.cursor = this.props.btnCursor;\n        stateStyle.backgroundColor = this.props.bgPrimaryHoverColor;\n        stateStyle.color = this.props.textPrimaryHoverColor;\n        stateStyle.borderColor = this.props.borderPrimaryHoverColor;\n      } else {\n        stateStyle.cursor = this.props.btnCursor;\n        stateStyle.backgroundColor = this.props.bgPrimaryColor;\n        stateStyle.color = this.props.textPrimaryColor;\n        stateStyle.borderColor = this.props.borderPrimaryColor;\n      }\n    } else {\n      if (this.state.hover || this.state.press) {\n        stateStyle.cursor = this.props.btnCursor;\n        stateStyle.backgroundColor = this.props.bgHoverColor;\n        stateStyle.color = this.props.textHoverColor;\n        stateStyle.borderColor = this.props.borderHoverColor;\n      } else {\n        stateStyle.cursor = this.props.btnCursor;\n        stateStyle.backgroundColor = this.props.bgColor;\n        stateStyle.color = this.props.textColor;\n        stateStyle.borderColor = this.props.borderColor;\n        stateStyle.width = this.props.width;\n      }\n    }\n\n    if (this.state.disabled) {\n      stateStyle.cursor = 'no-drop';\n      stateStyle.backgroundColor = '';\n      stateStyle.color = '#AEB8B8';\n      stateStyle.borderColor = '#f4f4f4';\n    }\n\n    var styleBtn = Object.assign({}, styles.componentButtonText, stateStyle, this.props.style);\n    var linkStyle = { textDecoration: 'none !important' };\n\n    return React.createElement(\n      \"a\",\n      { style: linkStyle },\n      \" \",\n      React.createElement(\n        \"div\",\n        { style: styleBtn, onClick: this.onClick, onMouseOver: this.mouseOver, onMouseOut: this.mouseOut, onMouseDown: this.mouseDown, onMouseUp: this.mouseUp },\n        this.props.text,\n        \" \",\n        this.props.disabled,\n        \" \"\n      ),\n      \" \"\n    );\n  }\n});\n\nmodule.exports = ButtonText;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardDatapoint.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\n\nvar styles = {\n\tvalue: {\n\t\tfontSize: \"30px\",\n\t\tfontWeight: \"300\",\n\t\tlineHeight: \"30px\",\n\t\tcolor: \"#325C80\"\n\t},\n\tunit: {\n\t\tfontSize: \"14px\",\n\t\tcolor: \"#6D7777\",\n\t\tdisplay: \"block\",\n\t\tmarginBottom: \"10px\",\n\t\tfontWeight: \"300\",\n\t\tletterSpacing: \"0.3px\"\n\t},\n\tminor: {\n\t\tfontSize: \"22px\"\n\t}\n};\n\nvar CardDatapoint = React.createClass({\n\tdisplayName: \"CardDatapoint\",\n\n\tpropTypes: {\n\t\ttheme: RPT.object.isRequired,\n\t\tstyle: RPT.object,\n\t\tunit: RPT.string,\n\t\tminor: RPT.bool\n\t},\n\n\trender: function render() {\n\n\t\tstyles.unit.color = this.props.theme.minor;\n\t\tstyles.value.color = this.props.theme.major;\n\n\t\tvar style = Object.assign({}, this.props.style ? this.props.style : {});\n\t\tvar styleValue = Object.assign({}, styles.value, this.props.minor ? styles.minor : {});\n\n\t\treturn React.createElement(\n\t\t\t\"div\",\n\t\t\t{ style: style },\n\t\t\tReact.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ style: styleValue },\n\t\t\t\tthis.props.children\n\t\t\t),\n\t\t\tReact.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ style: styles.unit },\n\t\t\t\tthis.props.unit\n\t\t\t)\n\t\t);\n\t}\n});\n\nmodule.exports = CardDatapoint;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooter.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\n\nvar styles = {\n\tcontainer: {\n\t\twidth: \"100%\",\n\t\theight: \"40px\",\n\t\tborder: \"1px solid\",\n\t\tborderColor: \"transparent\",\n\t\tposition: \"absolute\",\n\t\tbottom: \"0px\",\n\t\tleft: \"0px\"\n\t}\n};\n\nvar CardFooter = React.createClass({\n\tdisplayName: \"CardFooter\",\n\n\tpropTypes: {\n\t\ttheme: RPT.object.isRequired,\n\t\tstyle: RPT.object\n\t},\n\n\trender: function render() {\n\t\tstyles.container.borderTopColor = this.props.theme.border;\n\t\tstyles.container.backgroundColor = this.props.theme.content;\n\n\t\tvar style = Object.assign({}, styles.container);\n\t\treturn React.createElement(\n\t\t\t\"div\",\n\t\t\t{ style: style },\n\t\t\tthis.props.children\n\t\t);\n\t}\n});\n\nmodule.exports = CardFooter;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardFooterDatapoint.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\n\nvar styles = {\n\tcontainer: {\n\t\tfloat: \"left\",\n\t\twidth: \"50%\"\n\t},\n\tvalue: {\n\t\tfontSize: \"13px\",\n\t\tfontWeight: \"bold\",\n\t\ttextAlign: \"left\",\n\t\tpaddingLeft: \"30px\"\n\t},\n\ttitle: {\n\t\tfontSize: \"13px\",\n\t\tfontWeight: \"normal\",\n\t\tletterSpacing: \"0.5px\",\n\t\ttextTransform: \"uppercase\",\n\t\tpaddingLeft: \"30px\",\n\t\topacity: 0.5,\n\t\tmarginTop: \"5px\"\n\t}\n};\n\nvar CardFooterDatapoint = React.createClass({\n\tdisplayName: \"CardFooterDatapoint\",\n\n\tpropTypes: {\n\t\ttheme: RPT.object.isRequired,\n\t\tstyle: RPT.object,\n\t\tunit: RPT.string,\n\t\ttitle: RPT.string\n\t},\n\n\trender: function render() {\n\n\t\tstyles.title.color = this.props.theme.minor;\n\t\tstyles.value.color = this.props.theme.minor;\n\n\t\tvar style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n\t\treturn React.createElement(\n\t\t\t\"div\",\n\t\t\t{ style: style },\n\t\t\tReact.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ style: styles.title },\n\t\t\t\tthis.props.title\n\t\t\t),\n\t\t\tReact.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ style: styles.value },\n\t\t\t\tthis.props.children,\n\t\t\t\t\" \",\n\t\t\t\tthis.props.unit\n\t\t\t)\n\t\t);\n\t}\n});\n\nmodule.exports = CardFooterDatapoint;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardGalleryItem.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar Icon = require('./Icon.jsx');\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  cardContainer: {\n    width: '145px',\n    height: '115px',\n    float: 'left',\n    marginRight: '5px',\n    marginTop: '10px',\n    backgroundColor: '#F5F5F5',\n    padding: '5px',\n    position: 'relative',\n    overflow: 'hidden'\n  },\n  selectedCard: {\n    borderTop: '2px solid',\n    borderBottom: '2px solid'\n  },\n  clickingLayer: {\n    width: '100%',\n    display: 'block',\n    height: '100%',\n    position: 'absolute',\n    zIndex: '10'\n  },\n  cardDescriptionToggle: {\n    marginRight: '5px',\n    position: 'absolute',\n    right: '0px',\n    width: '25px',\n    height: '25px',\n    textAlign: 'center',\n    display: 'block',\n    top: '3px'\n  },\n  cardTitle: {\n    position: 'absolute',\n    bottom: '0px',\n    marginBottom: '5px'\n  },\n  cardThumb: {\n    alignSelf: 'center'\n  },\n  thumbContainer: {\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    opacity: '1',\n    MozTransition: 'all 0.5s ease',\n    WebkitTransition: 'all 0.5s ease',\n    OTransition: 'all 0.5s ease',\n    transition: 'all 0.5s ease'\n  },\n  cardDescription: {\n    height: '100%',\n    overflow: 'hidden',\n    fontSize: '12px',\n    paddingTop: '20px',\n    position: 'absolute',\n    bottom: '-75px',\n    MozTransition: 'all 0.5s ease',\n    WebkitTransition: 'all 0.5s ease',\n    OTransition: 'all 0.5s ease',\n    transition: 'all 0.5s ease'\n  }\n};\n\nvar CardGalleryItem = React.createClass({\n  displayName: 'CardGalleryItem',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    item: RPT.object.isRequired,\n    nls: RPT.object,\n    onClick: RPT.func,\n    selected: RPT.bool\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      item: {}\n    };\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(props) {\n    this.setState({\n      selected: props.selected\n    });\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      hoverInfo: false,\n      selected: this.props.selected\n    };\n  },\n\n  onMouseOver: function onMouseOver() {\n    this.setState({\n      hoverInfo: true\n    });\n  },\n\n  onMouseOut: function onMouseOut(e) {\n    this.setState({\n      hoverInfo: false\n    });\n  },\n\n  onTouch: function onTouch(e) {\n    //this.closeInfoLater(); // auto close after 10s\n    this.setState({\n      hoverInfo: !this.state.hoverInfo\n    });\n  },\n\n  onClick: function onClick(e) {\n    if (e.target.className !== 'infoTrigger') {\n      if (this.props.onClick) {\n        this.props.onClick(this.props.item);\n      }\n      this.setState({\n        selected: true\n      });\n    }\n  },\n\n  closeInfoLater: function closeInfoLater() {\n    if (this.closeTimer) {\n      clearTimeout(this.closeTimer);\n      this.closeTimer = null;\n    }\n    var self = this;\n    this.closeTimer = setTimeout(function () {\n      self.onMouseOut();\n      self.closeTimer = null;\n    }, 10000);\n  },\n\n  componentDidMount: function componentDidMount() {\n\n    if (this.props.selected) {\n      var newPos = $(this.refs.galleryItem).position().top - 160 > 0 ? $(this.refs.galleryItem).position().top - 160 : 0;\n      $($(this.refs.galleryItem).scrollParent()).scrollTop(newPos);\n    }\n  },\n\n  componentDidUpdate: function componentDidUpdate(prevProps, PrevState) {\n    if (this.state.hoverInfo) {\n      //$(this.refs.descriptionText).ellipsis();\n    } else {}\n  },\n\n  render: function render() {\n    var description = '';\n    var cardTitle = this.props.item.displayName;\n    var containerStyle = styles.cardContainer;\n    var thumbContainerStyle = '';\n    var infoColor = this.props.theme.light;\n\n    if (this.state.selected) {\n      containerStyle = Object.assign({}, containerStyle, styles.selectedCard, { borderColor: this.props.theme.accent });\n    } else {\n      containerStyle = styles.cardContainer;\n    }\n\n    var descriptionText = this.props.nls.resolve(this.props.item.description);\n    if (!description) {\n      descriptionText = this.props.item.description;\n    }\n\n    if (this.state.hoverInfo) {\n      description = React.createElement(\n        'div',\n        { style: Object.assign({}, styles.cardDescription, { bottom: '0' }) },\n        this.props.nls.resolve(cardTitle),\n        React.createElement('br', null),\n        this.props.nls.resolve(this.props.item.description)\n      );\n      thumbContainerStyle = Object.assign({}, styles.thumbContainer, { opacity: '0.01', height: '0%' });\n      infoColor = \"#3C3C3B\";\n    } else {\n      description = React.createElement(\n        'div',\n        { style: Object.assign({}, styles.cardDescription, { bottom: '-75px' }) },\n        this.props.nls.resolve(cardTitle),\n        React.createElement('br', null),\n        this.props.nls.resolve(this.props.item.description)\n      );\n      thumbContainerStyle = styles.thumbContainer;\n    }\n\n    return React.createElement(\n      'div',\n      { id: this.props.item.name, style: containerStyle, onClick: this.onClick, ref: 'galleryItem' },\n      React.createElement(\n        'div',\n        { style: styles.cardDescriptionToggle },\n        React.createElement(\n          'a',\n          { className: 'infoTrigger', tabIndex: '1', href: 'javascript:void(0)' },\n          React.createElement('div', { className: 'infoTrigger', style: styles.clickingLayer, onClick: this.onTouch, onMouseEnter: this.onMouseOver, onBlur: this.onMouseOut, onMouseLeave: this.onMouseOut })\n        ),\n        React.createElement(Icon, { theme: this.props.theme, color: infoColor, icon: 'info' })\n      ),\n      React.createElement(\n        'div',\n        { style: thumbContainerStyle },\n        React.createElement(\n          'div',\n          { style: styles.cardThumb },\n          React.createElement(Icon, { theme: this.props.theme, color: '#3C3C3B', icon: this.props.item.thumbnail, size: 50 })\n        )\n      ),\n      React.createElement(\n        'div',\n        { ref: 'descriptionText' },\n        description\n      )\n    );\n  }\n});\n\nmodule.exports = CardGalleryItem;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardIndicator.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar Icon = require('./Icon.jsx');\n\nvar styles = {\n\tcontainer: {\n\t\tfontSize: \"12px\",\n\t\twidth: \"100%\",\n\t\tboxShadow: \"0px 1px 1px rgba(192, 192, 192, 0.5)\",\n\t\theight: \"40px\",\n\t\tlineHeight: \"40px\",\n\t\tpaddingLeft: \"10px\"\n\t}\n};\n\nvar CardIndicator = React.createClass({\n\tdisplayName: 'CardIndicator',\n\n\tpropTypes: {\n\t\ttheme: RPT.object.isRequired,\n\t\tstyle: RPT.object,\n\t\tcondition: RPT.string\n\t},\n\n\trender: function render() {\n\t\tstyles.container.color = this.props.theme.least;\n\t\tvar style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ style: style },\n\t\t\tReact.createElement(Icon, { icon: this.props.condition,\n\t\t\t\tcolor: this.props.theme[this.props.condition],\n\t\t\t\tsize: 24,\n\t\t\t\tstyle: { verticalAlign: \"middle\", marginRight: \"10px\" },\n\t\t\t\ttheme: this.props.theme\n\t\t\t}),\n\t\t\tthis.props.children\n\t\t);\n\t}\n});\n\nmodule.exports = CardIndicator;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardLineChart.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar c3 = (typeof window !== \"undefined\" ? window['c3'] : typeof global !== \"undefined\" ? global['c3'] : null);\nvar RPT = React.PropTypes;\nvar Icon = require('./Icon.jsx');\nvar LoadIndicator = require('./LoadIndicator.jsx');\nvar Utils = require('../../Dashboard/dashboard/DashboardUtils');\n\nvar styles = {\n  container: {\n    position: \"relative\",\n    width: \"100%\",\n    height: \"270px\"\n  }\n};\n\nvar CardLineChart = React.createClass({\n  displayName: 'CardLineChart',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    data: RPT.array,\n    showRange: RPT.bool,\n    unit: RPT.string,\n    width: RPT.number,\n    height: RPT.number\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      data: []\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.createGraph();\n  },\n\n  createGraph: function createGraph() {\n    var self = this;\n    this.destroyGraph();\n\n    var container = ReactDOM.findDOMNode(this);\n\n    var dom = document.createElement(\"div\");\n    container.appendChild(dom);\n\n    this.width = this.props.width ? this.props.width : container.offsetWidth;\n    this.height = this.props.height ? this.props.height : container.offsetHeight;\n\n    var colors = this.props.theme.palette;\n\n    if (this.width > 0 && this.height > 0) {\n\n      dom.style.width = this.width + \"px\";\n      dom.style.height = this.height + \"px\";\n\n      if (this.props.data && this.props.data.length > 0) {\n\n        var today = new Date();\n        var weekAgo = new Date(today.getTime() - 1000 * 60 * 60 * 24 * 7);\n        var zoomStart = today.toISOString().split(\"T\")[0];\n        var zoomEnd = weekAgo.toISOString().split(\"T\")[0];\n\n        var colorMap = { 'total': colors[0] };\n\n        var config = {\n          size: {\n            width: this.width,\n            height: this.height\n          },\n          data: {\n            type: \"area\",\n            json: this.props.data,\n            x: 'date',\n            keys: {\n              x: 'date',\n              value: ['total']\n            },\n            colors: colorMap\n          },\n          axis: {\n            x: {\n              type: \"timeseries\",\n              extent: [zoomEnd, zoomStart]\n            },\n            y: {\n              label: this.props.unit\n            }\n          },\n          grid: {\n            x: {\n              show: true\n            },\n            y: {\n              show: true\n            }\n          },\n          point: {\n            r: 4,\n            focus: {\n              expand: {\n                enabled: true,\n                r: 6\n              }\n            }\n          },\n          legend: {\n            hide: true\n          },\n          padding: {\n            left: 50,\n            bottom: 0,\n            right: 0,\n            top: 0\n          }\n\n        };\n\n        if (this.props.showRange) {\n          config.subchart = {\n            show: true,\n            size: {\n              height: 30\n            }\n          };\n        }\n\n        this.graph = c3.generate(config);\n\n        dom.appendChild(this.graph.element);\n      }\n    }\n  },\n\n  destroyGraph: function destroyGraph() {\n    var dom = ReactDOM.findDOMNode(this);\n    while (dom.firstChild) {\n      dom.removeChild(dom.firstChild);\n    }\n    this.graph = null;\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this.destroyGraph();\n  },\n\n  componentDidUpdate: function componentDidUpdate() {\n    this.createGraph();\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n\n    style.borderLeftColor = this.props.theme.border;\n\n    if (this.props.data && this.props.data.length > 0) {\n      return React.createElement('div', { className: 'lineChart', style: style });\n    } else {\n      return React.createElement(LoadIndicator, { theme: this.props.theme });\n    }\n  }\n});\n\nmodule.exports = CardLineChart;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/dashboard/DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\",\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\",\"./LoadIndicator.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CardTable.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar c3 = (typeof window !== \"undefined\" ? window['c3'] : typeof global !== \"undefined\" ? global['c3'] : null);\nvar RPT = React.PropTypes;\nvar Icon = require('./Icon.jsx');\nvar Utils = require('../../Dashboard/dashboard/DashboardUtils');\n\nvar styles = {\n  container: {\n    position: \"relative\",\n    overflow: \"hidden\",\n    fontSize: \"14px\"\n  },\n  table: {\n    width: \"100%\"\n  },\n  headerRow: {\n    borderBottom: \"3px solid grey\"\n  },\n  headerCell: {\n    textAlign: \"left\",\n    padding: \"11px 7px 11px 0px\"\n  },\n  row: {\n    fontWeight: \"300\"\n  },\n  cell: {\n    padding: \"11px 7px 11px 0px\"\n  }\n};\n\nvar CardTable = React.createClass({\n  displayName: 'CardTable',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    data: RPT.array,\n    header: RPT.array,\n    width: RPT.number,\n    height: RPT.number\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      header: [],\n      data: []\n    };\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {}, { width: this.props.width + 'px' });\n\n    styles.headerRow.borderColor = this.props.theme.light;\n    styles.cell.color = this.props.theme.minor;\n\n    var data = this.props.data;\n    var header = this.props.header;\n\n    var self = this;\n\n    var count = 0;\n\n    return React.createElement(\n      'div',\n      { style: style },\n      React.createElement(\n        'table',\n        { style: styles.table },\n        React.createElement(\n          'thead',\n          null,\n          React.createElement(\n            'tr',\n            { style: styles.headerRow },\n            header.map(function (item) {\n              return React.createElement(\n                'th',\n                { key: count++, style: styles.headerCell },\n                item\n              );\n            })\n          )\n        ),\n        React.createElement(\n          'tbody',\n          null,\n          data.map(function (row) {\n            return React.createElement(\n              'tr',\n              { key: count++, style: styles.row },\n              row.map(function (cell) {\n                return React.createElement(\n                  'td',\n                  { key: count++, style: styles.cell },\n                  cell\n                );\n              })\n            );\n          })\n        )\n      )\n    );\n  }\n});\n\nmodule.exports = CardTable;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/dashboard/DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\",\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/CheckBox.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  circle: {\n    width: \"16px\",\n    height: \"16px\",\n    background: \"#5596E6\",\n    MozBorderRadius: \"50px\",\n    WebkitBorderRadius: \"50px\",\n    borderRadius: \"50px\",\n    float: \"left\",\n    cursor: \"pointer\"\n  },\n  checkmark: {\n    display: \"inline-block\",\n    width: \"22px\",\n    height: \"22px\",\n    MsTransform: \"rotate(45deg)\",\n    WebkitTransform: \"rotate(45deg)\",\n    transform: \"rotate(45deg)\"\n  },\n  checkmarkBack: {\n    position: \"absolute\",\n    width: \"2px\",\n    height: \"9px\",\n    backgroundColor: \"#ffffff\",\n    left: \"7px\",\n    top: \"6px\"\n  },\n  checkmarkSeat: {\n    position: \"absolute\",\n    width: \"4px\",\n    height: \"2px\",\n    backgroundColor: \"#ffffff\",\n    left: \"4px\",\n    top: \"13px\"\n  },\n  inactiveCB: {\n    width: \"16px\",\n    height: \"16px\",\n    background: \"transparent\",\n    border: \"2px solid\",\n    borderColor: \"#AEB8B8\",\n    MozBorderRadius: \"50px\",\n    WebkitBorderRadius: \"50px\",\n    borderRadius: \"50px\",\n    float: \"left\",\n    cursor: \"pointer\",\n    boxSizing: 'border-box'\n  },\n  hoverCB: {\n    borderColor: \"#5596E6\"\n  }\n};\n\nvar CheckBox = React.createClass({\n  displayName: \"CheckBox\",\n\n  propTypes: {\n    checked: RPT.bool,\n    id: RPT.string,\n    name: RPT.string,\n    onChange: RPT.func,\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    value: RPT.string\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      checked: this.props.checked\n    };\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      checked: false,\n      id: Math.random().toString(),\n      //labelRight: true,\n      name: \"checkBoxName\"\n    };\n  },\n\n  handleChange: function handleChange(event) {\n    this.setState({\n      checked: !this.state.checked\n    });\n    if (this.props.onChange) {\n      this.props.onChange(!this.state.checked);\n    }\n  },\n\n  hoverCB: function hoverCB(event) {\n    this.setState({\n      hovered: true\n    });\n  },\n\n  noHoverCB: function noHoverCB(event) {\n    this.setState({\n      hovered: false\n    });\n  },\n\n  render: function render() {\n    var outerStyle = Object.assign({}, this.props.style);\n    var inactiveCB = {};\n    console.log(inactiveCB);\n    if (this.state.hovered) {\n      inactiveCB = Object.assign({}, styles.inactiveCB, styles.hoverCB);\n    } else {\n      inactiveCB = styles.inactiveCB;\n    }\n    var checkBoxChecked = React.createElement(\n      \"div\",\n      { onClick: this.handleChange, style: styles.circle },\n      React.createElement(\n        \"span\",\n        { style: styles.checkmark },\n        React.createElement(\"span\", { style: styles.checkmarkBack }),\n        React.createElement(\"span\", { style: styles.checkmarkSeat })\n      )\n    );\n    var checkBoxInactive = React.createElement(\"div\", { onClick: this.handleChange, style: inactiveCB });\n    var output = this.state.checked ? React.createElement(\n      \"div\",\n      null,\n      checkBoxChecked\n    ) : React.createElement(\n      \"div\",\n      null,\n      checkBoxInactive\n    );\n    return React.createElement(\n      \"div\",\n      { onMouseOver: this.hoverCB, onMouseOut: this.noHoverCB, style: outerStyle },\n      output\n    );\n  }\n});\n\nmodule.exports = CheckBox;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/ColorSelection.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\n\nvar styles = {\n  container: {\n    marginBottom: \"15px\",\n    boxSizing: \"border-box\"\n  },\n  colorTile: {\n    margin: \"5px\",\n    width: \"24px\",\n    height: \"24px\",\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    fontSize: \"20px\",\n    textAlign: \"center\"\n  },\n  tiles: {\n    display: \"block\",\n    width: \"100%\",\n    float: \"left\"\n  },\n  after: {\n    clear: \"both\"\n  }\n};\n\nvar ColorSelection = React.createClass({\n  displayName: \"ColorSelection\",\n\n  propTypes: {\n    onChange: RPT.func,\n    initialSelection: RPT.number,\n    style: RPT.object,\n    theme: RPT.object.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      initialSelection: 0\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      selection: this.props.initialSelection\n    };\n  },\n\n  // componentWillReceiveProps: function(nextProps) {\n  // \tif (nextProps.initialSelection !== undefined) {\n  // \t\tthis.setState({\n  // \t\t\tselection: nextProps.initialSelection\n  // \t\t});\n  // \t}\n\n  // },\n\n  onSelect: function onSelect(id) {\n    this.setState({\n      selection: id\n    });\n    if (this.props.onChange) {\n      this.props.onChange(id);\n    }\n  },\n\n  render: function render() {\n    var self = this;\n    var schemes = this.props.theme.schemes;\n    var tiles = schemes.map(function (scheme) {\n      var style = Object.assign({}, styles.colorTile, {\n        backgroundColor: scheme.normal,\n        //borderTop: \"4px solid \" + scheme.dark,\n        color: scheme.text\n      });\n      if (self.state.selection == scheme.name) {\n        style.outline = \"5px solid \" + scheme.dark;\n      }\n\n      return React.createElement(\"div\", { style: style, key: scheme.name, onClick: function onClick() {\n          self.onSelect(scheme.name);\n        } });\n    });\n\n    return React.createElement(\n      \"div\",\n      { style: styles.container },\n      React.createElement(\n        \"div\",\n        { name: \"tiles\", style: styles.tiles },\n        tiles.map(function (result) {\n          return result;\n        })\n      ),\n      React.createElement(\"div\", { style: styles.after })\n    );\n  }\n});\n\nmodule.exports = ColorSelection;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/ComboBox.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\n/*global require, module*/\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar RPT = React.PropTypes;\nvar InputField = require('./InputField.jsx');\nvar Option = require('./Option.jsx');\n\nvar styles = {\n\tcontainer: {\n\t\tdisplay: \"block\",\n\t\twidth: \"100%\"\n\t},\n\tinputField: {\n\t\twidth: \"100%\",\n\t\tboxSizing: \"border-box\"\n\t},\n\toptionsContainer: {\n\t\tposition: \"relative\",\n\t\tWebkitTransition: \"all .2s ease-in-out\",\n\t\ttransition: \"all .2s ease-in-out\",\n\t\toverflowX: \"auto\",\n\t\tmaxHeight: \"200px\",\n\t\toverflow: \"auto\",\n\t\tzIndex: \"1000\"\n\t},\n\temptyOption: {\n\t\tpadding: \"6px\"\n\t}\n};\n\n// Documentation link:\n// https://github.ibm.com/IoT/dashboard-component/wiki/Combobox-component\n//\n\nvar ComboBox = React.createClass({\n\tdisplayName: 'ComboBox',\n\n\tpropTypes: {\n\t\ttheme: RPT.object.isRequired,\n\t\tstyle: RPT.object,\n\t\tonChange: RPT.func,\n\t\tinitialValue: RPT.string,\n\t\tplaceholderNoItems: RPT.string\n\t},\n\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\tplaceholderNoItems: \"\"\n\t\t};\n\t},\n\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\tinput: this.props.initialValue || \"\",\n\t\t\thasInput: this.props.initialValue !== \"\",\n\t\t\tfilteredChildren: [],\n\t\t\tisOpen: false\n\t\t};\n\t},\n\n\tcomponentWillMount: function componentWillMount() {\n\t\tthis.chidrenAttachSelect();\n\t},\n\n\tcomponentDidMount: function componentDidMount() {\n\t\tthis.chidrenAttachSelect();\n\t\tthis.filterChildren(this.state.input);\n\t\tthis.updateOptionsSize();\n\t},\n\n\tcomponentDidReceiveProps: function componentDidReceiveProps() {\n\t\tthis.chidrenAttachSelect();\n\t\tthis.filterChildren(this.state.input);\n\t},\n\n\tupdateOptionsSize: function updateOptionsSize() {\n\t\tif (this.refs.comboBox) {\n\t\t\tvar newWidth = ReactDOM.findDOMNode(this.refs.comboBox).offsetWidth;\n\t\t\tstyles.optionsContainer.width = newWidth;\n\t\t}\n\t},\n\n\tcomponentWillUpdate: function componentWillUpdate() {\n\t\tthis.updateOptionsSize();\n\t},\n\n\tchidrenAttachSelect: function chidrenAttachSelect() {\n\t\tvar self = this;\n\t\tvar childrenWithSelect = [];\n\t\tReact.Children.forEach(this.props.children, function (child) {\n\t\t\tvar childWithSelect = React.cloneElement(child, { onSelect: self.onSelect });\n\t\t\tchildrenWithSelect.push(childWithSelect);\n\t\t});\n\t\tthis.setState({\n\t\t\tchildren: childrenWithSelect\n\t\t});\n\t},\n\n\tfilterChildren: function filterChildren(comp) {\n\t\tvar filteredChildren = [];\n\n\t\tReact.Children.forEach(this.state.children, function (child) {\n\t\t\tif (child) {\n\t\t\t\tif (child.props && (child.props.children.startsWith(comp) || child.props.value.startsWith(comp))) {\n\t\t\t\t\tfilteredChildren.push(child);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.setState({ filteredChildren: filteredChildren });\n\t\treturn filteredChildren;\n\t},\n\n\thandleInput: function handleInput(value) {\n\t\tif (value === \"\") {\n\t\t\tthis.setState({ hasInput: false, input: value, isOpen: true });\n\t\t} else {\n\t\t\tthis.setState({ hasInput: true, input: value, isOpen: true });\n\t\t}\n\t\tthis.chidrenAttachSelect();\n\t\tthis.filterChildren(value);\n\t\tthis.onChange(value);\n\t},\n\n\tonSelect: function onSelect(value, label, event) {\n\t\tthis.setState({ input: label, hasInput: true, isOpen: false });\n\t\tthis.onChange(label);\n\t},\n\n\tonFocus: function onFocus() {\n\t\tthis.setState({ isOpen: true });\n\t\tthis.chidrenAttachSelect();\n\t\tthis.filterChildren(this.state.input);\n\t\tif (this.props.onFocus) {\n\t\t\tthis.props.onFocus();\n\t\t}\n\t},\n\n\tonBlur: function onBlur() {\n\t\tthis.setState({ isOpen: false });\n\t\tthis.onChange(this.state.input);\n\t\tif (this.props.onBlur) {\n\t\t\tthis.props.onBlur();\n\t\t}\n\t},\n\n\tonChange: function onChange(value) {\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(value);\n\t\t}\n\t},\n\n\trenderInputField: function renderInputField() {\n\t\treturn React.createElement(InputField, { style: styles.inputField, containerStyle: { width: \"100%\" }, theme: this.props.theme, initialValue: this.props.initialValue, value: this.state.input, onChange: this.handleInput, onFocus: this.onFocus, onBlur: this.onBlur });\n\t},\n\n\trenderChildren: function renderChildren() {\n\t\tvar children = \"\";\n\n\t\tvar optionsContainer = Object.assign({}, styles.optionsContainer, this.props.optionsContainerStyle);\n\n\t\tif (this.state.hasInput) {\n\t\t\tif (this.state.filteredChildren.length !== 0) {\n\t\t\t\tconsole.log(this.state.filteredChildren);\n\t\t\t\tchildren = this.state.filteredChildren;\n\t\t\t} else {\n\t\t\t\tchildren = this.props.placeholderNoItems !== '' ? React.createElement(\n\t\t\t\t\tOption,\n\t\t\t\t\t{ value: null, theme: this.props.theme, style: styles.emptyOption, onSelect: function onSelect() {}, disabled: true },\n\t\t\t\t\tthis.props.placeholderNoItems\n\t\t\t\t) : '';\n\t\t\t}\n\t\t} else {\n\t\t\tchildren = this.state.children;\n\t\t}\n\t\tvar lastIndex = Array.isArray(children) ? children.length - 1 : null;\n\t\tvar childrenElement = children !== '' ? React.createElement(\n\t\t\t'div',\n\t\t\t{ style: optionsContainer },\n\t\t\tReact.Children.map(children, function (child, idx) {\n\t\t\t\tvar currProps = {};\n\t\t\t\tif (lastIndex && lastIndex == idx) {\n\t\t\t\t\tcurrProps = { lastChild: true, firstChild: false };\n\t\t\t\t} else if (idx === 0) {\n\t\t\t\t\tcurrProps = { lastChild: false, firstChild: true };\n\t\t\t\t} else {\n\t\t\t\t\tcurrProps = { lastChild: false, firstChild: false };\n\t\t\t\t}\n\t\t\t\tvar newChild = React.cloneElement(child, currProps);\n\t\t\t\treturn newChild;\n\t\t\t})\n\t\t) : '';\n\n\t\treturn childrenElement;\n\t},\n\n\trender: function render() {\n\n\t\tvar containerStyle = Object.assign({}, styles.container, this.props.style);\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ ref: 'comboBox', style: containerStyle },\n\t\t\tthis.renderInputField(),\n\t\t\tthis.state.isOpen ? this.renderChildren() : \"\"\n\t\t);\n\t}\n});\n\nmodule.exports = ComboBox;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\",\"./Option.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/DonutChart.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar c3 = (typeof window !== \"undefined\" ? window['c3'] : typeof global !== \"undefined\" ? global['c3'] : null);\nvar RPT = React.PropTypes;\nvar Icon = require('./Icon.jsx');\nvar Utils = require('../../Dashboard/dashboard/DashboardUtils');\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    margin: \"0 auto\"\n  }\n};\n\nvar DonutChart = React.createClass({\n  displayName: 'DonutChart',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    data: RPT.array,\n    names: RPT.object,\n    title: RPT.string,\n    unit: RPT.string,\n    label: RPT.number,\n    width: RPT.number,\n    height: RPT.number,\n    focus: RPT.string,\n    revert: RPT.bool,\n    click: RPT.string,\n    onOver: RPT.func,\n    onOut: RPT.func\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      data: [],\n      names: {}\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.createGraph();\n  },\n\n  createGraph: function createGraph() {\n    var self = this;\n    this.destroyGraph();\n\n    var container = ReactDOM.findDOMNode(this);\n\n    var dom = document.createElement(\"div\");\n    container.appendChild(dom);\n\n    this.width = this.props.width ? this.props.width : container.offsetWidth;\n    this.height = this.props.height ? this.props.height : container.offsetHeight;\n\n    var colors = this.props.theme.palette;\n\n    if (this.width > 0 && this.height > 0) {\n\n      dom.style.width = this.width + \"px\";\n      dom.style.height = this.height + \"px\";\n\n      var config = {\n        size: {\n          width: this.width,\n          height: this.height\n        },\n        data: {\n          onclick: function onclick(d, i) {\n            console.log(\"onclick\", d, i);\n          },\n          onmouseover: function onmouseover(d, i) {\n            if (self.props.onOver) {\n              self.props.onOver(d, i);\n            }\n          },\n          onmouseout: function onmouseout(d, i) {\n            if (self.props.onOut) {\n              self.props.onOut(d, i);\n            }\n          },\n          type: \"donut\",\n          columns: this.props.data\n        },\n        donut: {\n          title: this.props.title, // cannot be removed\n          label: {\n            show: false\n          },\n          expand: true,\n          width: 15\n        },\n        legend: {\n          show: false\n        },\n        color: {\n          pattern: colors\n        },\n        tooltip: {\n          show: false\n        }\n      };\n\n      this.graph = c3.generate(config);\n\n      dom.appendChild(this.graph.element);\n\n      this.setTitle();\n    }\n  },\n\n  setTitle: function setTitle(text) {\n    if (this.props.data) {\n      var count = 0;\n      for (var i in this.props.data) {\n        var item = this.props.data[i];\n        count += item[1];\n      }\n\n      if (count != Math.round(count)) {\n        count = count.toFixed(2);\n      }\n\n      var label = d3.select('#' + this.id + ' text.c3-chart-arcs-title');\n\n      label.text('');\n      label.selectAll(\"*\").remove(); //html(''); // remove existant text\n\n      if (text !== undefined) {\n        label.insert('tspan').text(text).attr('dy', 0).attr('x', 0).attr('class', \"donutMain\").attr('fill', this.props.theme.normal);\n        label.insert('tspan').text(this.props.unit).attr('dy', 20).attr('x', 0).attr('class', \"donutMinor\").attr('fill', this.props.theme.normal);\n      } else {\n        label.insert('tspan').text(count).attr('dy', 0).attr('x', 0).attr('class', \"donutMain\").attr('fill', this.props.theme.normal);\n        label.insert('tspan').text(\"Total\").attr('dy', -25).attr('x', 0).attr('class', \"donutMinor\").attr('fill', '#899399');\n        label.insert('tspan').text(this.props.unit).attr('dy', 45).attr('x', 0).attr('class', \"donutMinor\").attr('fill', this.props.theme.normal);\n      }\n    }\n  },\n\n  focus: function focus(id) {\n    if (this.graph) {\n      this.graph.focus(id);\n    }\n  },\n\n  click: function click(id) {\n    if (this.graph) {\n      this.graph.click(id);\n    }\n  },\n\n  revert: function revert(id) {\n    if (this.graph) {\n      this.graph.revert();\n      this.setTitle();\n    }\n  },\n\n  destroyGraph: function destroyGraph() {\n    var dom = ReactDOM.findDOMNode(this);\n    while (dom.firstChild) {\n      dom.removeChild(dom.firstChild);\n    }\n    this.graph = null;\n  },\n\n  updateGraph: function updateGraph() {\n    if (!this.graph) {\n      this.createGraph();\n    }\n    if (this.graph) {\n      var self = this;\n\n      this.graph.load({\n        columns: self.props.data\n      });\n\n      this.graph.data.names(this.props.names);\n\n      var container = ReactDOM.findDOMNode(this);\n      var width = this.props.width ? this.props.width : container.offsetWidth;\n      var height = this.props.height ? this.props.height : container.offsetHeight;\n      if (this.width != width || this.height != height) {\n        this.width = width;\n        this.height = height;\n        this.graph.resize({ height: this.height, width: this.width });\n      }\n\n      this.setTitle();\n    }\n  },\n\n  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n    var self = this;\n    // do not repaint for user interaction, otherwise the animation won't work\n    if (nextProps.focus || nextProps.label) {\n      if (nextProps.focus) {\n        this.focussed = true;\n        this.focus(nextProps.focus);\n      }\n      if (nextProps.label) {\n        this.focussed = true;\n        self.setTitle(nextProps.label);\n      }\n      return false;\n    } else if (this.focussed) {\n      this.focussed = false;\n      this.revert();\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this.destroyGraph();\n  },\n\n  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n    this.updateGraph();\n    this.checkIfPropsChanged(prevProps, this.props);\n  },\n\n  checkIfPropsChanged: function checkIfPropsChanged(a, b) {\n    // Check if we have to remove an item. This fails in some situations if we use the normal\n    // unload method. Therefore we just redraw the whole thing.\n    var currentData = this.graph.data();\n    for (var i in currentData) {\n      var item = currentData[i];\n      var found = false;\n      for (var t in this.props.data) {\n        var dataItem = this.props.data[t];\n        if (dataItem[0] == item.id) {\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        this.createGraph();\n        return;\n      }\n    }\n\n    if (JSON.stringify(a.theme) != JSON.stringify(b.theme) || a.unit != b.unit || a.precision != b.precision || a.width != b.width || a.height != b.height) {\n      this.createGraph();\n    }\n  },\n\n  render: function render() {\n    if (!this.id) {\n      this.id = \"X\" + Math.round(Math.random() * 1000000);\n    }\n    var style = Object.assign({}, styles.container, { width: this.props.width + \"px\", height: this.props.height + \"px\" }, this.props.style ? this.props.style : {});\n    return React.createElement('div', { id: this.id, style: style });\n  }\n});\n\nmodule.exports = DonutChart;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/dashboard/DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\",\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/GalleryAccordion.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar RPT = React.PropTypes;\nvar Icon = require('./Icon.jsx');\n\nvar styles = {\n\n  container: {\n    marginBottom: '15px',\n    boxSizing: 'border-box',\n    clear: 'both',\n    cursor: 'pointer'\n  },\n  canvas: {\n    MozTransition: 'all 0.25s ease',\n    WebkitTransition: 'all 0.25s ease',\n    OTransition: 'all 0.25s ease',\n    transition: 'all 0.25s ease',\n    height: '131px',\n    overflow: 'hidden'\n  },\n  title: {\n    height: '24px',\n    padding: '5px 0px',\n    fontSize: '16px',\n    fontWeight: '600',\n    lineHeight: '24px'\n  },\n  icon: {\n    float: 'right'\n  },\n  toggleCtrlContainer: {\n    clear: 'both',\n    float: 'right',\n    marginRight: '20px'\n  }\n\n};\n\nvar ITEMS_PER_ROW = 3;\n\nvar GalleryAccordion = React.createClass({\n  displayName: 'GalleryAccordion',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    id: RPT.string,\n    label: RPT.string,\n    onRemove: RPT.func,\n    onExpand: RPT.func,\n    expanded: RPT.bool\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      label: ''\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    var expandedStatus = false;\n    for (var i = 0; i < this.props.children.length; i++) {\n      if (this.props.selected === this.props.children[i].props.item.name && i >= ITEMS_PER_ROW) {\n        expandedStatus = true;\n      }\n    }\n    return {\n      expanded: this.props.expanded || expandedStatus ? true : false\n    };\n  },\n\n  componentWillMount: function componentWillMount() {\n    for (var i = 0; i < this.props.children.length; i++) {\n      if (this.props.selected === this.props.children[i].props.item.name && i >= ITEMS_PER_ROW) {\n        this.setState({ expanded: true });\n      }\n    }\n  },\n  componentDidMount: function componentDidMount() {\n    this.componentDidUpdate();\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    if (this.state.expanded) {\n      $(this.refs.cardCanvas).css('height', $(this.refs.cardCanvas)[0].scrollHeight);\n    } else {\n      $(this.refs.cardCanvas).css('height', '130px');\n    }\n  },\n  componentDidReceiveProps: function componentDidReceiveProps() {\n    this.setState({\n      selected: this.props.selected\n    });\n  },\n\n  onRemove: function onRemove() {\n    if (this.props.onRemove) {\n      this.props.onRemove(this.props.id);\n    }\n    return false;\n  },\n\n  onToggle: function onToggle() {\n    this.setState({\n      expanded: !this.state.expanded\n    });\n  },\n\n  render: function render() {\n    var self = this;\n    var canvas = '';\n    var toggleCtrl = '';\n    var childCount = ITEMS_PER_ROW;\n    if (this.state.expanded) {\n      canvas = this.props.children;\n      toggleCtrl = React.createElement(\n        'div',\n        { style: styles.toggleCtrlContainer },\n        React.createElement(\n          'a',\n          { onClick: self.onToggle, href: 'javascript:void(0)' },\n          'Show less'\n        )\n      );\n    } else {\n      var i = 0;\n      canvas = this.props.children.filter(function (child) {\n        if (i < childCount) {\n          i++;\n          return true;\n        } else {\n          i++;\n          toggleCtrl = React.createElement(\n            'div',\n            { style: styles.toggleCtrlContainer },\n            React.createElement(\n              'a',\n              { onClick: self.onToggle, href: 'javascript:void(0)' },\n              'Show more'\n            )\n          );\n          return false;\n        }\n      });\n    }\n\n    return React.createElement(\n      'div',\n      { style: styles.container },\n      React.createElement(\n        'div',\n        { style: styles.title },\n        this.props.label\n      ),\n      React.createElement(\n        'div',\n        { style: styles.canvas, ref: 'cardCanvas' },\n        canvas\n      ),\n      toggleCtrl\n    );\n  }\n});\n\nmodule.exports = GalleryAccordion;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Gauge.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar d3 = (typeof window !== \"undefined\" ? window['d3'] : typeof global !== \"undefined\" ? global['d3'] : null);\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar RPT = React.PropTypes;\n\n/**\n* Flexible gauge.\n*/\nvar styles = {\n\tcontainer: {\n\t\theight: \"100%\",\n\t\twidth: \"100%\",\n\t\tmargin: \"0 auto\"\n\t}\n};\n\nvar Gauge = React.createClass({\n\tdisplayName: 'Gauge',\n\n\tpropTypes: {\n\t\ttheme: RPT.object.isRequired,\n\t\tstyle: RPT.object,\n\t\tnls: RPT.object,\n\t\tvalue: RPT.number,\n\t\tminDegree: RPT.number,\n\t\tmaxDegree: RPT.number,\n\t\tmin: RPT.number,\n\t\tmax: RPT.number,\n\t\tprecision: RPT.number,\n\t\tneedle: RPT.bool,\n\t\tunit: RPT.string,\n\t\tlabel: RPT.number,\n\t\twidth: RPT.number,\n\t\theight: RPT.number,\n\t\tlowerThresholdMeaning: RPT.string,\n\t\tmiddleThresholdMeaning: RPT.string,\n\t\tupperThresholdMeaning: RPT.string,\n\t\tlowerThreshold: RPT.number,\n\t\tupperThreshold: RPT.number\n\t},\n\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\tminDegree: 45,\n\t\t\tmaxDegree: 315,\n\t\t\tmin: 0,\n\t\t\tmax: 100,\n\t\t\tneedle: false\n\t\t};\n\t},\n\n\tcomponentDidMount: function componentDidMount() {\n\t\t// create for the first time\n\t\tthis.createSVG();\n\t},\n\n\tcreateSVG: function createSVG() {\n\t\tthis.destroySVG();\n\n\t\tvar self = this;\n\n\t\tvar dom = ReactDOM.findDOMNode(this);\n\t\t// var dom = document.createElement(\"div\");\n\t\t// root.appendChild(dom);\n\n\t\tthis.width = this.props.width ? this.props.width : container.offsetWidth;\n\t\tthis.height = this.props.height ? this.props.height : container.offsetHeight;\n\t\tvar pi = Math.PI * 2;\n\t\tvar radius = Math.min(this.width, this.height) / 2;\n\t\tvar startAngle = this.props.minDegree / 360 * pi - pi / 2;\n\t\tvar endAngle = this.props.maxDegree / 360 * pi - pi / 2;\n\n\t\tvar group = d3.select(dom).append('svg').attr('width', +this.width).attr('height', +this.height).attr('viewBox', '0 0 ' + this.width + ' ' + this.height).attr('preserveAspectRatio', 'xMinYMin meet').append(\"g\").attr(\"transform\", \"translate(\" + this.width / 2 + \",\" + this.height / 2 + \")\");\n\n\t\t// the scale to show the full range\n\t\tvar scaleArc = d3.svg.arc().innerRadius(radius - 40).outerRadius(radius - 25).startAngle(startAngle).endAngle(endAngle);\n\n\t\tvar scale = group.append(\"path\").attr(\"fill\", this.props.theme.minor).attr(\"d\", scaleArc);\n\n\t\t// the value segment\n\t\tthis.valueSegment = group.append(\"path\").datum({ endAngle: 0, startAngle: 0 }).attr(\"fill\", this.props.theme.normal);\n\n\t\t// the textual value\n\t\tthis.label = group.append(\"svg:text\").attr(\"dy\", \"-10px\").attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"40px\").attr(\"font-weight\", \"200\").attr(\"fill\", this.props.theme.normal);\n\n\t\t// the unit indicator\n\t\tif (this.props.unit) {\n\t\t\tvar unit = group.append(\"svg:text\").attr(\"dy\", \"20px\").attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"16px\").attr(\"font-weight\", \"200\").attr(\"fill\", this.props.theme.minor).text(this.props.unit);\n\t\t}\n\n\t\t// threshold indicator\n\t\tvar tickSteps = (this.props.maxDegree - this.props.minDegree) / 100;\n\t\tvar range = this.props.max - this.props.min;\n\n\t\tfor (var i = 0; i <= 100; i++) {\n\t\t\tvar line = group.append(\"svg:line\").attr(\"x1\", this.width / 2 - 20).attr(\"x2\", this.width / 2 - 10).attr(\"y1\", 0).attr(\"y2\", 0).attr(\"stroke-width\", \"2\");\n\n\t\t\tif (this.props.lowerThresholdMeaning && this.props.lowerThresholdMeaning != \"NONE\" && i <= (this.props.lowerThreshold - this.props.min) / range * 100) {\n\t\t\t\tline.attr(\"stroke\", this.props.theme[this.props.lowerThresholdMeaning]);\n\t\t\t} else if (this.props.middleThresholdMeaning && this.props.middleThresholdMeaning != \"NONE\" && i > (this.props.lowerThreshold - this.props.min) / range * 100 && i < (this.props.upperThreshold - this.props.min) / range * 100) {\n\t\t\t\tline.attr(\"stroke\", this.props.theme[this.props.middleThresholdMeaning]);\n\t\t\t} else if (this.props.upperThresholdMeaning && this.props.upperThresholdMeaning != \"NONE\" && i >= (this.props.upperThreshold - this.props.min) / range * 100) {\n\t\t\t\tline.attr(\"stroke\", this.props.theme[this.props.upperThresholdMeaning]);\n\t\t\t} else {\n\t\t\t\tline.attr(\"stroke\", this.props.theme.minor);\n\t\t\t}\n\n\t\t\tline.attr(\"transform\", \"rotate(\" + (this.props.minDegree + tickSteps * i + 90) + \")\");\n\t\t}\n\n\t\tthis.updateSVG();\n\t},\n\n\tdestroySVG: function destroySVG() {\n\t\tvar dom = ReactDOM.findDOMNode(this);\n\t\tvar children = dom.childNodes;\n\t\tfor (var i in children) {\n\t\t\tvar child = children[i];\n\t\t\tif (child.tagName === 'svg') {\n\t\t\t\tdom.removeChild(child);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\tupdateSVG: function updateSVG() {\n\t\t// handle precision\n\t\tvar value = this.props.value ? this.props.value : 0;\n\n\t\tif (this.props.precision !== undefined) {\n\t\t\tvalue = value.toFixed(this.props.precision);\n\t\t}\n\t\tvar pi = Math.PI * 2;\n\n\t\tvar radius = Math.min(this.width, this.height) / 2;\n\t\tvar startAngle = this.props.minDegree / 360 * pi - pi / 2;\n\t\tvar endAngle = this.props.maxDegree / 360 * pi - pi / 2;\n\t\tvar val = (value - this.props.min) / (this.props.max - this.props.min);\n\t\tval = val * (endAngle - startAngle) + startAngle;\n\t\tval = Math.min(val, endAngle);\n\t\tval = Math.max(val, startAngle);\n\n\t\tvar arc, arcTween;\n\n\t\tthis.label.text(value);\n\n\t\tif (this.props.needle) {\n\t\t\t// show only a simple tick\n\t\t\tarc = d3.svg.arc().innerRadius(radius - 50).outerRadius(radius - 25);\n\n\t\t\tarcTween = function arcTween(transition, newAngle) {\n\t\t\t\ttransition.attrTween(\"d\", function (d) {\n\t\t\t\t\tif (d) {\n\t\t\t\t\t\tvar interpolate = d3.interpolate(d.endAngle, newAngle);\n\t\t\t\t\t\treturn function (t) {\n\t\t\t\t\t\t\tvar val = interpolate(t);\n\t\t\t\t\t\t\td.endAngle = val;\n\t\t\t\t\t\t\td.startAngle = val - 0.05;\n\t\t\t\t\t\t\treturn arc(d);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t} else {\n\t\t\t// show the full segment\n\t\t\tarc = d3.svg.arc().innerRadius(radius - 40).outerRadius(radius - 25).startAngle(startAngle);\n\n\t\t\tarcTween = function arcTween(transition, newAngle) {\n\t\t\t\ttransition.attrTween(\"d\", function (d) {\n\t\t\t\t\tif (d) {\n\t\t\t\t\t\tvar interpolate = d3.interpolate(d.endAngle, newAngle);\n\t\t\t\t\t\treturn function (t) {\n\t\t\t\t\t\t\td.endAngle = interpolate(t);\n\t\t\t\t\t\t\treturn arc(d);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\tthis.valueSegment.transition().duration(750).call(arcTween, val);\n\t},\n\n\tcomponentWillUnmount: function componentWillUnmount() {\n\t\tthis.destroySVG();\n\t},\n\n\tcomponentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n\t\tthis.updateSVG();\n\t\tthis.checkIfPropsChanged(prevProps, this.props);\n\t},\n\n\tcheckIfPropsChanged: function checkIfPropsChanged(a, b) {\n\t\tif (JSON.stringify(a.theme) != JSON.stringify(b.theme) || a.min != b.min || a.max != b.max || a.unit != b.unit || a.lowerThresholdMeaning != b.lowerThresholdMeaning || a.middleThresholdMeaning != b.middleThresholdMeaning || a.upperThresholdMeaning != b.upperThresholdMeaning || a.lowerThreshold != b.lowerThreshold || a.upperThreshold != b.upperThreshold || a.unit != b.unit || a.min != b.min || a.max != b.max || a.precision != b.precision || a.width != b.width || a.height != b.height) {\n\t\t\tthis.createSVG();\n\t\t}\n\t},\n\n\trender: function render() {\n\t\tvar style = Object.assign({}, styles.container, { width: this.props.width + \"px\", height: this.props.height + \"px\" }, this.props.style ? this.props.style : {});\n\t\treturn React.createElement('div', { style: style });\n\t}\n});\n\nmodule.exports = Gauge;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\n\nvar styles = {\n  icon: {\n    verticalAlign: \"middle\",\n    cursor: \"pointer\"\n  }\n};\n\n// Documentation link:\n// https://github.ibm.com/IoT/dashboard-component/wiki/Icon-component\n//\n\nvar Icon = React.createClass({\n  displayName: \"Icon\",\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    icon: RPT.string.isRequired,\n    color: RPT.string,\n    size: RPT.number,\n    onClick: RPT.func\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      size: 24,\n      onClick: function onClick() {}\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      viewportCorrection: this.getViewportCorrection()\n    };\n  },\n\n  getViewportCorrection: function getViewportCorrection() {\n    switch (this.props.icon) {\n      case 'delete':\n        // trashicon from design team\n        return { x: -3 };\n      case 'fullscreen':\n        // fullscreen icon from design team\n        return { y: -2 };\n      case 'refresh':\n        // fullscreen icon from design team\n        return { x: -4 };\n      case 'bar-chart':\n        return { y: -1, width: 19, height: 19 };\n      case 'traffic-consumption':\n        return { y: -1, width: 19, height: 19 };\n      case 'device-types':\n        return { y: -0.75, width: 21, height: 21 };\n      case 'elevator':\n        return { y: -5 };\n      case 'horizontal-seperator':\n        return { y: -9 };\n      case 'line-chart':\n        return { y: -5 };\n      case 'line-graph2':\n        return { width: 28, height: 15 };\n      case 'pie-chart':\n        return { width: 21, height: 21 };\n      case 'text-based':\n        return { x: 0, y: 0, width: 16, height: 16 };\n      //case 'gauge':\n      //    return {x:5, y:5};\n      case 'weatherService':\n        return { y: -3, width: 26, height: 26 };\n    }\n  },\n\n  renderGraphic: function renderGraphic() {\n    // see list of icons: http://dmfrancisco.github.io/react-icons/\n    switch (this.props.icon) {\n      case 'line-graph':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1-Copy\" },\n          React.createElement(\"path\", { d: \"M12.94,18 L17.939,18 L17.939,11.118 L12.94,11.118 L12.94,18 Z M13.94,12.118 L16.94,12.118 L16.94,17.001 L13.94,17.001 L13.94,12.118 Z\", id: \"Fill-1\" }),\n          React.createElement(\"path\", { d: \"M6.47,18 L11.469,18 L11.469,17 L6.47,17 L6.47,18 Z\", id: \"Fill-2\" }),\n          React.createElement(\"path\", { d: \"M6.47,15.686 L11.469,15.686 L11.469,14.686 L6.47,14.686 L6.47,15.686 Z\", id: \"Fill-3\" }),\n          React.createElement(\"path\", { d: \"M6.47,13.372 L11.469,13.372 L11.469,12.372 L6.47,12.372 L6.47,13.372 Z\", id: \"Fill-4\" }),\n          React.createElement(\"path\", { d: \"M6.47,11.058 L11.469,11.058 L11.469,10.058 L6.47,10.058 L6.47,11.058 Z\", id: \"Fill-5\" }),\n          React.createElement(\"path\", { d: \"M6.47,8.744 L11.469,8.744 L11.469,7.743 L6.47,7.743 L6.47,8.744 Z\", id: \"Fill-6\" }),\n          React.createElement(\"path\", { d: \"M0,18 L5,18 L5,0.069 L0,0.069 L0,18 Z\", id: \"Fill-7\" })\n        );\n      case 'gauge':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", fill: \"none\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\n            \"g\",\n            { id: \"Group-9\", transform: \"translate(3.000000, 3.000000)\" },\n            React.createElement(\"path\", { d: \"M2.4863,13.0507 C-0.4697,10.0947 -0.4697,5.3017 2.4863,2.3457 C5.4423,-0.6103 10.2353,-0.6103 13.1913,2.3457 C16.1473,5.3017 16.1473,10.0947 13.1913,13.0507\", id: \"Stroke-76\", stroke: \"#3C3C3B\", strokeWidth: \"5\" }),\n            React.createElement(\"path\", { d: \"M7.8388,18.0507 C9.2198,18.0507 10.3388,16.9317 10.3388,15.5507 C10.3388,14.1697 9.2198,13.0507 7.8388,13.0507 C6.4578,13.0507 5.3388,14.1697 5.3388,15.5507 C5.3388,16.9317 6.4578,18.0507 7.8388,18.0507\", id: \"Fill-78\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M7.8388,15.5507 L7.8388,6.5897\", id: \"Stroke-80\", stroke: \"#3C3C3B\" })\n          )\n        );\n      case 'bar-chart':\n        return React.createElement(\n          \"g\",\n          { id: \"Group-7\", transform: \"translate(2.000000, 0.000000)\" },\n          React.createElement(\"path\", { d: \"M0.9889,0.0854 L0.9889,17.9264\", id: \"Stroke-63\", stroke: \"#3C3C3B\", strokeWidth: \"5\" }),\n          React.createElement(\"path\", { d: \"M16.339,12.661 L11.339,12.661 L11.339,17.926 L16.339,17.926 L16.339,12.661 Z M15.339,16.926 L12.339,16.926 L12.339,13.661 L15.339,13.661 L15.339,16.926 Z\", id: \"Fill-64\", fill: \"#3C3C3B\" }),\n          React.createElement(\"path\", { d: \"M7.3215,17.9264 L7.3215,16.9114\", id: \"Stroke-65\", stroke: \"#3C3C3B\", strokeWidth: \"5\" }),\n          React.createElement(\"path\", { d: \"M7.3215,15.8014 L7.3215,14.7864\", id: \"Stroke-66\", stroke: \"#3C3C3B\", strokeWidth: \"5\" }),\n          React.createElement(\"path\", { d: \"M7.3215,13.6764 L7.3215,12.6614\", id: \"Stroke-67\", stroke: \"#3C3C3B\", strokeWidth: \"5\" }),\n          React.createElement(\"path\", { d: \"M7.3215,11.5514 L7.3215,10.5364\", id: \"Stroke-68\", stroke: \"#3C3C3B\", strokeWidth: \"5\" }),\n          React.createElement(\"path\", { d: \"M7.3215,9.4264 L7.3215,8.4114\", id: \"Stroke-69\", stroke: \"#3C3C3B\", strokeWidth: \"5\" })\n        );\n      case 'connected-devices':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", fill: \"none\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\n            \"g\",\n            { id: \"Group-3\" },\n            React.createElement(\"path\", { d: \"M12.5798,15.8594 C13.9608,15.8594 15.0798,14.7404 15.0798,13.3594 C15.0798,11.9784 13.9608,10.8594 12.5798,10.8594 C11.1988,10.8594 10.0798,11.9784 10.0798,13.3594 C10.0798,14.7404 11.1988,15.8594 12.5798,15.8594\", id: \"Fill-20\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M12.5801,17.8594 C10.0991,17.8594 8.0801,15.8404 8.0801,13.3594 C8.0801,10.8784 10.0991,8.8594 12.5801,8.8594 C15.0611,8.8594 17.0801,10.8784 17.0801,13.3594 C17.0801,15.8404 15.0611,17.8594 12.5801,17.8594 L12.5801,17.8594 Z\", id: \"Stroke-21\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M20.0798,5.8594 C21.4608,5.8594 22.5798,4.7404 22.5798,3.3594 C22.5798,1.9784 21.4608,0.8594 20.0798,0.8594 C18.6988,0.8594 17.5798,1.9784 17.5798,3.3594 C17.5798,4.7404 18.6988,5.8594 20.0798,5.8594\", id: \"Fill-22\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M2.5798,10.8594 C3.9608,10.8594 5.0798,9.7404 5.0798,8.3594 C5.0798,6.9784 3.9608,5.8594 2.5798,5.8594 C1.1988,5.8594 0.0798,6.9784 0.0798,8.3594 C0.0798,9.7404 1.1988,10.8594 2.5798,10.8594\", id: \"Fill-23\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M2.1246,8.3594 L8.5076,11.4384\", id: \"Stroke-24\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M20.0798,3.3594 L15.3188,9.8994\", id: \"Stroke-25\", stroke: \"#3C3C3B\" })\n          )\n        );\n      case 'device-types':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", fill: \"none\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\n            \"g\",\n            { id: \"Group-2\", transform: \"translate(0.000000, 1.000000)\" },\n            React.createElement(\"path\", { d: \"M18.988,18.976 L0.5,18.976 L0.5,0.488 L18.988,0.488 L18.988,18.976 Z\", id: \"Stroke-13\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M2.3746,2.2473 L3.6136,2.2473\", id: \"Stroke-15\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M4.1246,2.2473 L5.3636,2.2473\", id: \"Stroke-16\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M15.8746,2.2473 L17.1136,2.2473\", id: \"Stroke-17\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M14.7683,9.9819 C14.7683,12.7569 12.5193,15.0059 9.7443,15.0059 C6.9693,15.0059 4.7203,12.7569 4.7203,9.9819 C4.7203,7.2069 6.9693,4.9579 9.7443,4.9579 C12.5193,4.9579 14.7683,7.2069 14.7683,9.9819\", id: \"Fill-18\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M6.3668,9.9819 C6.3668,8.1169 7.8788,6.6039 9.7438,6.6039\", id: \"Stroke-19\", stroke: \"#FFFFFF\" })\n          )\n        );\n      case 'horizontal-seperator':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", fill: \"none\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\"path\", { d: \"M0.2509,3.3819 L21.1429,3.3819\", id: \"Stroke-58\", stroke: \"#3C3C3B\", strokeWidth: \"5\" })\n        );\n      case 'line-chart':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", fill: \"none\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\n            \"g\",\n            { id: \"Group-6\" },\n            React.createElement(\"path\", { d: \"M8.5723,14.9209 C9.9533,14.9209 11.0723,13.8019 11.0723,12.4209 C11.0723,11.0399 9.9533,9.9209 8.5723,9.9209 C7.1913,9.9209 6.0723,11.0399 6.0723,12.4209 C6.0723,13.8019 7.1913,14.9209 8.5723,14.9209\", id: \"Fill-26\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M15.0627,5.5368 C16.4437,5.5368 17.5627,4.4178 17.5627,3.0368 C17.5627,1.6558 16.4437,0.5368 15.0627,0.5368 C13.6817,0.5368 12.5627,1.6558 12.5627,3.0368 C12.5627,4.4178 13.6817,5.5368 15.0627,5.5368\", id: \"Fill-27\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M20.936,10.6948 C22.317,10.6948 23.436,9.5758 23.436,8.1948 C23.436,6.8138 22.317,5.6948 20.936,5.6948 C19.555,5.6948 18.436,6.8138 18.436,8.1948 C18.436,9.5758 19.555,10.6948 20.936,10.6948\", id: \"Fill-28\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M2.6535,7.2864 C4.0345,7.2864 5.1535,6.1674 5.1535,4.7864 C5.1535,3.4054 4.0345,2.2864 2.6535,2.2864 C1.2725,2.2864 0.1535,3.4054 0.1535,4.7864 C0.1535,6.1674 1.2725,7.2864 2.6535,7.2864\", id: \"Fill-29\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M2.6535,4.7864 L8.5725,12.4204 L15.0625,3.0724 L20.9365,8.1944\", id: \"Stroke-30\", stroke: \"#3C3C3B\" })\n          )\n        );\n      case 'overview':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", fill: \"none\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\n            \"g\",\n            { id: \"Group\", stroke: \"#3C3C3B\" },\n            React.createElement(\"path\", { d: \"M13.3303,13.0401 C10.5043,15.8661 5.9223,15.8661 3.0953,13.0401 C0.2693,10.2141 0.2693,5.6321 3.0953,2.8051 C5.9223,-0.0209 10.5043,-0.0209 13.3303,2.8051 C16.1563,5.6321 16.1563,10.2141 13.3303,13.0401 L13.3303,13.0401 Z\", id: \"Stroke-59\" }),\n            React.createElement(\"path\", { d: \"M3.0956,13.0401 L13.3306,2.8051\", id: \"Stroke-60\" }),\n            React.createElement(\"path\", { d: \"M3.0956,2.8055 L13.3306,13.0405\", id: \"Stroke-61\" }),\n            React.createElement(\"path\", { d: \"M10.8447,10.5545 C8.0187,13.3805 4.5487,14.4935 3.0957,13.0405 C1.6417,11.5865 2.7547,8.1175 5.5807,5.2905 C8.4077,2.4645 11.8767,1.3515 13.3307,2.8055 C14.7837,4.2585 13.6707,7.7285 10.8447,10.5545 L10.8447,10.5545 Z\", id: \"Stroke-62\" })\n          )\n        );\n      case 'pie-chart':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", fill: \"none\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\n            \"g\",\n            { id: \"Group-8\", transform: \"translate(0.000000, -2.000000)\" },\n            React.createElement(\"path\", { d: \"M10.7812,4.6677 C14.9622,4.6677 18.3512,8.0567 18.3512,12.2377 C18.3512,16.4177 14.9622,19.8067 10.7812,19.8067 C6.6002,19.8067 3.2112,16.4177 3.2112,12.2377\", id: \"Stroke-70\", stroke: \"#3C3C3B\", strokeWidth: \"5\" }),\n            React.createElement(\"path\", { d: \"M9.5314,0.5909 L9.5314,9.7879\", id: \"Fill-71\", fill: \"#3C3C3B\" }),\n            React.createElement(\n              \"g\",\n              { id: \"Group-75\", transform: \"translate(0.000000, 1.000000)\" },\n              React.createElement(\n                \"mask\",\n                { id: \"mask-2\", fill: \"white\" },\n                React.createElement(\"use\", { href: \"#path-1\" })\n              ),\n              React.createElement(\"g\", { id: \"Clip-74\" }),\n              React.createElement(\"path\", { d: \"M3.2116,11.2372 C3.2116,7.0562 6.6006,3.6672 10.7816,3.6672\", id: \"Stroke-73\", stroke: \"#3C3C3B\", strokeWidth: \"5\", mask: \"url(#mask-2)\" })\n            )\n          )\n        );\n      case 'line-graph2':\n        return React.createElement(\n          \"g\",\n          { id: \"Group\" },\n          React.createElement(\"path\", { d: \"M19.6049314,1 L8.39641356,12.2071729 L3.58565424,7.39641356 L2,7.98206781 L8.39641356,14.3771365 L19.6049314,3.16996358 L24.4156907,7.98206781 L26.0013449,7.39641356 L19.6049314,1 Z\", id: \"Page-1\" }),\n          React.createElement(\"circle\", { id: \"Oval-10-Copy\", cx: \"8.5\", cy: \"12.5\", r: \"2.5\" }),\n          React.createElement(\"circle\", { id: \"Oval-10-Copy-2\", cx: \"19.5\", cy: \"2.5\", r: \"2.5\" }),\n          React.createElement(\"circle\", { id: \"Oval-10-Copy-3\", cx: \"25.5\", cy: \"7.5\", r: \"2.5\" }),\n          React.createElement(\"circle\", { id: \"Oval-10\", cx: \"2.5\", cy: \"7.5\", r: \"2.5\" })\n        );\n      case 'storage-consumption':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", fill: \"none\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\n            \"g\",\n            { id: \"Group-4\" },\n            React.createElement(\"path\", { d: \"M18.08,5.107 L0.744,5.107 L0.744,0.107 L18.08,0.107 L18.08,5.107 Z\", id: \"Fill-31\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M2.0424,2.6068 L3.2814,2.6068\", id: \"Stroke-32\", stroke: \"#FFFFFF\" }),\n            React.createElement(\"path\", { d: \"M3.7924,2.6068 L5.0314,2.6068\", id: \"Stroke-33\", stroke: \"#FFFFFF\" }),\n            React.createElement(\"path\", { d: \"M15.5424,2.6068 L16.7814,2.6068\", id: \"Stroke-34\", stroke: \"#FFFFFF\" }),\n            React.createElement(\"path\", { d: \"M18.08,9.197 L0.744,9.197 L0.744,6.197 L18.08,6.197 L18.08,9.197 Z\", id: \"Fill-35\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M2.0424,7.697 L3.2814,7.697\", id: \"Stroke-36\", stroke: \"#FFFFFF\" }),\n            React.createElement(\"path\", { d: \"M3.7924,7.697 L5.0314,7.697\", id: \"Stroke-37\", stroke: \"#FFFFFF\" }),\n            React.createElement(\"path\", { d: \"M15.5424,7.697 L16.7814,7.697\", id: \"Stroke-38\", stroke: \"#FFFFFF\" }),\n            React.createElement(\"path\", { d: \"M18.08,15.287 L0.744,15.287 L0.744,10.287 L18.08,10.287 L18.08,15.287 Z\", id: \"Fill-39\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M2.0424,12.7873 L3.2814,12.7873\", id: \"Stroke-40\", stroke: \"#FFFFFF\" }),\n            React.createElement(\"path\", { d: \"M3.7924,12.7873 L5.0314,12.7873\", id: \"Stroke-41\", stroke: \"#FFFFFF\" }),\n            React.createElement(\"path\", { d: \"M15.5424,12.7873 L16.7814,12.7873\", id: \"Stroke-42\", stroke: \"#FFFFFF\" })\n          )\n        );\n      case 'text-based':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\"path\", { d: \"M10.2511681,9.97622275 L7.7465479,4.01586084 L5.27363179,9.97622275 L10.2511681,9.97622275 Z M0.909040527,15.535 L0.909040527,15.1439833 C1.46562557,15.0805749 1.88305809,14.8692167 2.16135061,14.5099023 C2.43964313,14.1505879 2.91696049,13.1748174 3.59331699,11.5825614 L8.1058605,0.96170376 L8.5285812,0.96170376 L13.9182702,13.2311722 C14.2775846,14.0484363 14.5646795,14.5539347 14.7795636,14.7476827 C14.9944477,14.9414306 15.355518,15.0735295 15.8627854,15.1439833 L15.8627854,15.535 L10.3568482,15.535 L10.3568482,15.1439833 C10.9909325,15.0876203 11.3995584,15.0189289 11.5827383,14.937907 C11.7659182,14.8568851 11.8575067,14.6578561 11.8575067,14.340814 C11.8575067,14.2351333 11.8222804,14.0484335 11.7518266,13.7807091 C11.6813728,13.5129846 11.5827389,13.2311736 11.4559221,12.9352677 L10.5576406,10.8533682 L4.89318315,10.8533682 C4.32955273,12.2694896 3.99314087,13.1342971 3.88393748,13.4478165 C3.77473408,13.761336 3.7201332,14.0096819 3.7201332,14.1928618 C3.7201332,14.5592215 3.86808397,14.8128514 4.16398994,14.953759 C4.34716983,15.0383036 4.69238828,15.1017111 5.19965566,15.1439833 L5.19965566,15.535 L0.909040527,15.535 Z\", id: \"A\" })\n        );\n      case 'traffic-consumption':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", fill: \"none\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\n            \"g\",\n            { id: \"Group-5\", transform: \"translate(0.000000, 1.000000)\" },\n            React.createElement(\"path\", { d: \"M0.6431,4.3771 L5.8771,4.3771\", id: \"Stroke-43\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M17.5295,4.1658 L17.8035,4.4398 L14.8365,7.4068\", id: \"Stroke-44\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M14.8365,1.4728 L17.5295,4.1658\", id: \"Stroke-45\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M5.7998,10.0021 L1.7398,10.0021\", id: \"Stroke-46\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M4.2269,12.9064 L1.2599,9.9394 L4.2269,6.9724\", id: \"Stroke-47\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M18.5091,10.0021 L8.7401,10.0021\", id: \"Stroke-48\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M8.8832,11.9352 C8.5252,10.6882 8.3002,8.9172 8.3002,6.9462 C8.3002,4.9752 8.5252,3.2042 8.8832,1.9572\", id: \"Stroke-49\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M7.6331,0.1129 C6.6201,0.1129 5.8001,3.1719 5.8001,6.9459 C5.8001,10.7199 6.6201,13.7799 7.6331,13.7799\", id: \"Stroke-50\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M8.8832,11.9352 C9.2112,13.0762 9.6492,13.7792 10.1332,13.7792 C11.1452,13.7792 11.9662,10.7202 11.9662,6.9462 C11.9662,3.1722 11.1452,0.1132 10.1332,0.1132 C9.6492,0.1132 9.2112,0.8162 8.8832,1.9572\", id: \"Stroke-51\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M8.8832,1.9573 C8.5252,3.2043 8.3002,4.9753 8.3002,6.9463 C8.3002,8.9173 8.5252,10.6883 8.8832,11.9353\", id: \"Stroke-52\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M10.1331,0.1129 L7.6331,0.1129\", id: \"Stroke-53\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M10.1331,13.7796 L7.6331,13.7796\", id: \"Stroke-54\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M8.6431,4.3771 L17.8031,4.4391\", id: \"Stroke-55\", stroke: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M8.6939,11.6981 C8.6609,11.6841 8.6269,11.6701 8.5939,11.6561 C8.5899,11.6631 8.5859,11.6701 8.5819,11.6771 C8.6239,11.6791 8.6529,11.6941 8.6939,11.6981\", id: \"Fill-56\", fill: \"#3C3C3B\" }),\n            React.createElement(\"path\", { d: \"M8.7032,12.0734 L8.7032,12.0734 C8.1662,10.7214 7.8712,8.9004 7.8712,6.9464 C7.8712,4.9924 8.1662,3.1714 8.7032,1.8194 L8.7032,1.8194 C9.0092,1.0464 9.3792,0.4804 9.8072,0.1134 L7.6402,0.1134 L7.6402,0.3034 L7.6402,0.6134 C7.1062,0.6134 5.8002,2.8324 5.8002,6.9464 C5.8002,11.0604 7.1062,13.2794 7.6402,13.2794 L7.6402,13.4864 L7.6402,13.7794 L9.8072,13.7794 C9.3792,13.4124 9.0092,12.8464 8.7032,12.0734\", id: \"Fill-57\", fill: \"#3C3C3B\" })\n          )\n        );\n      case 'Usage':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M19.35 10.04c-.68-3.45-3.71-6.04-7.35-6.04-2.89 0-5.4 1.64-6.65 4.04-3.01.32-5.35 2.87-5.35 5.96 0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zm-.35 7.96h-13c-2.21 0-4-1.79-4-4s1.79-4 4-4h.71c.66-2.31 2.77-4 5.29-4 3.04 0 5.5 2.46 5.5 5.5v.5h1.5c1.66 0 3 1.34 3 3s-1.34 3-3 3z\" })\n        );\n      case 'Alert':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M14.4 6l-.4-2h-9v17h2v-7h5.6l.4 2h7v-10z\" })\n        );\n      case 'Basic':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M19.35 10.04c-.68-3.45-3.71-6.04-7.35-6.04-2.89 0-5.4 1.64-6.65 4.04-3.01.32-5.35 2.87-5.35 5.96 0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zm-.35 7.96h-13c-2.21 0-4-1.79-4-4s1.79-4 4-4h.71c.66-2.31 2.77-4 5.29-4 3.04 0 5.5 2.46 5.5 5.5v.5h1.5c1.66 0 3 1.34 3 3s-1.34 3-3 3z\" })\n        );\n      case 'Alert':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M14.4 6l-.4-2h-9v17h2v-7h5.6l.4 2h7v-10z\" })\n        );\n      case 'Devices':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M15 9h-6v6h6v-6zm-2 4h-2v-2h2v2zm8-2v-2h-2v-2c0-1.1-.9-2-2-2h-2v-2h-2v2h-2v-2h-2v2h-2c-1.1 0-2 .9-2 2v2h-2v2h2v2h-2v2h2v2c0 1.1.9 2 2 2h2v2h2v-2h2v2h2v-2h2c1.1 0 2-.9 2-2v-2h2v-2h-2v-2h2zm-4 6h-10v-10h10v10z\" })\n        );\n      case 'Sample':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M11.99 2c-5.52 0-9.99 4.48-9.99 10s4.47 10 9.99 10c5.53 0 10.01-4.48 10.01-10s-4.48-10-10.01-10zm.01 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5h-10.22c.8 2.04 2.78 3.5 5.11 3.5z\" })\n        );\n      case 'Custom':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M20.5 11h-1.5v-4c0-1.1-.9-2-2-2h-4v-1.5c0-1.38-1.12-2.5-2.5-2.5s-2.5 1.12-2.5 2.5v1.5h-4c-1.1 0-1.99.9-1.99 2v3.8h1.49c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7h-1.5v3.8c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7v1.5h3.8c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5s-1.12-2.5-2.5-2.5z\" })\n        );\n      case 'Test':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M14.4 6l-.4-2h-9v17h2v-7h5.6l.4 2h7v-10z\" })\n        );\n      case 'camera':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M9.4 10.5l4.77-8.26c-.7-.15-1.42-.24-2.17-.24-2.4 0-4.6.85-6.32 2.25l3.66 6.35.06-.1zm12.14-1.5c-.92-2.92-3.15-5.26-6-6.34l-3.66 6.34h9.66zm.26 1h-7.49l.29.5 4.76 8.25c1.64-1.78 2.64-4.14 2.64-6.75 0-.69-.07-1.35-.2-2zm-13.26 2l-3.9-6.75c-1.63 1.78-2.64 4.14-2.64 6.75 0 .69.07 1.35.2 2h7.49l-1.15-2zm-6.08 3c.92 2.92 3.15 5.26 6 6.34l3.66-6.34h-9.66zm11.27 0l-3.9 6.76c.7.15 1.42.24 2.17.24 2.4 0 4.6-.85 6.32-2.25l-3.66-6.35-.93 1.6z\" })\n        );\n      case 'map':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M20.5 3l-.16.03-5.34 2.07-6-2.1-5.64 1.9c-.21.07-.36.25-.36.48v15.12c0 .28.22.5.5.5l.16-.03 5.34-2.07 6 2.1 5.64-1.9c.21-.07.36-.25.36-.48v-15.12c0-.28-.22-.5-.5-.5zm-5.5 16l-6-2.11v-11.89l6 2.11v11.89z\" })\n        );\n      case 'CRITICAL':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M12 2c-5.53 0-10 4.47-10 10s4.47 10 10 10 10-4.47 10-10-4.47-10-10-10zm5 13.59l-1.41 1.41-3.59-3.59-3.59 3.59-1.41-1.41 3.59-3.59-3.59-3.59 1.41-1.41 3.59 3.59 3.59-3.59 1.41 1.41-3.59 3.59 3.59 3.59z\" })\n        );\n      case 'GOOD':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M9 16.17l-4.17-4.17-1.42 1.41 5.59 5.59 12-12-1.41-1.41z\" })\n        );\n      case 'FAIR':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M9 16.17l-4.17-4.17-1.42 1.41 5.59 5.59 12-12-1.41-1.41z\" })\n        );\n      case 'radio-button-on':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" })\n        );\n      case 'check':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M9 16.17l-4.17-4.17-1.42 1.41 5.59 5.59 12-12-1.41-1.41z\" })\n        );\n      case 'search':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M15.5 14h-.79l-.28-.27c.98-1.14 1.57-2.62 1.57-4.23 0-3.59-2.91-6.5-6.5-6.5s-6.5 2.91-6.5 6.5 2.91 6.5 6.5 6.5c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99 1.49-1.49-4.99-5zm-6 0c-2.49 0-4.5-2.01-4.5-4.5s2.01-4.5 4.5-4.5 4.5 2.01 4.5 4.5-2.01 4.5-4.5 4.5z\" })\n        );\n      case 'dots':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" })\n        );\n      case 'arrow-drop-up':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M7 14l5-5 5 5z\" })\n        );\n      case 'arrow-drop-down':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M7 10l5 5 5-5z\" })\n        );\n      case 'check':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M9 16.17l-4.17-4.17-1.42 1.41 5.59 5.59 12-12-1.41-1.41z\" })\n        );\n      case 'more-vert':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" })\n        );\n      case 'delete':\n        // trashicon from design team\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M4.46428571,1.5 L10.4166667,1.5 L10.4166667,0 L4.46428571,0 L4.46428571,1.5 Z M0,2.24985 L0,5.99985 L0.744047619,5.99985 L0.744047619,20.99985 L14.1369048,20.99985 L14.1369048,5.99985 L14.8809524,5.99985 L14.8809524,2.24985 L0,2.24985 Z M2.23214286,7.49985 L12.6488095,7.49985 L12.6488095,19.49985 L2.23214286,19.49985 L2.23214286,7.49985 Z M3.7202381,18 L4.46428571,18 L4.46428571,8.99925 L3.7202381,8.99925 L3.7202381,18 Z M5.95238095,18 L6.69642857,18 L6.69642857,8.99925 L5.95238095,8.99925 L5.95238095,18 Z M8.18452381,18 L8.92857143,18 L8.92857143,8.99925 L8.18452381,8.99925 L8.18452381,18 Z M10.4166667,18 L11.1607143,18 L11.1607143,8.99925 L10.4166667,8.99925 L10.4166667,18 Z\" })\n        );\n      case 'fullscreen-exit':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M5 16h3v3h2v-5h-5v2zm3-8h-3v2h5v-5h-2v3zm6 11h2v-3h3v-2h-5v5zm2-11v-3h-2v5h5v-2h-3z\" })\n        );\n      case 'highlight-remove':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M14.59 8l-2.59 2.59-2.59-2.59-1.41 1.41 2.59 2.59-2.59 2.59 1.41 1.41 2.59-2.59 2.59 2.59 1.41-1.41-2.59-2.59 2.59-2.59-1.41-1.41zm-2.59-6c-5.53 0-10 4.47-10 10s4.47 10 10 10 10-4.47 10-10-4.47-10-10-10zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" })\n        );\n      case 'fullscreen':\n        // fullscreen icon from design team\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M0,-0.0002375 L0,3.16722083 L0,18.9997625 L24,18.9997625 L24,-0.0002375 L0,-0.0002375 Z M1.6,4.7497625 L22.4,4.7497625 L22.4,17.4164292 L1.6,17.4164292 L1.6,4.7497625 Z M14.1656,14.0180417 L19.2,9.03608333 L19.2,12.6666667 L20.8,12.6666667 L20.8,6.33333333 L14.4,6.33333333 L14.4,7.91666667 L18.0688,7.91666667 L13.0344,12.898625 L14.1656,14.0180417 Z\" })\n        );\n      case 'remove':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M19 13h-14v-2h14v2z\" })\n        );\n      case 'undo':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M12.5 8c-2.65 0-5.05.99-6.9 2.6l-3.6-3.6v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78c-1.39-4.19-5.32-7.22-9.97-7.22z\" })\n        );\n      case 'settings':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M11,14 C9.345,14 8,12.657 8,11 C8,9.343 9.345,8 11,8 C12.655,8 14,9.343 14,11 C14,12.657 12.655,14 11,14 M19.433,11 C19.433,10.549 19.388,10.11 19.319,9.678 L22,7.333 L19.723,3.595 L16.526,4.639 C15.762,3.975 14.877,3.449 13.909,3.092 L13.2,0 L8.8,0 L8.091,3.092 C7.123,3.449 6.238,3.975 5.474,4.64 L2.277,3.595 L0,7.333 L2.68,9.679 C2.612,10.11 2.567,10.549 2.567,11 C2.567,11.451 2.612,11.89 2.68,12.321 L0,14.667 L2.278,18.405 L5.474,17.36 C6.238,18.025 7.123,18.551 8.091,18.908 L8.8,22 L13.2,22 L13.909,18.908 C14.877,18.551 15.762,18.025 16.526,17.361 L19.722,18.405 L22,14.667 L19.319,12.322 C19.388,11.89 19.433,11.451 19.433,11\" })\n        );\n      case 'add-circle-outline':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M13 7h-2v4h-4v2h4v4h2v-4h4v-2h-4v-4zm-1-5c-5.52 0-10 4.48-10 10s4.48 10 10 10 10-4.48 10-10-4.48-10-10-10zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" })\n        );\n      case 'save':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M17 3h-12c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-12l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10h-10v-4h10v4z\" })\n        );\n      case 'restore':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M13 3c-4.97 0-9 4.03-9 9h-3l3.89 3.89.07.14 4.04-4.03h-3c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42c1.63 1.63 3.87 2.64 6.36 2.64 4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08v-4.25h-1.5z\" })\n        );\n      case 'add-circle-outline':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M13 7h-2v4h-4v2h4v4h2v-4h4v-2h-4v-4zm-1-5c-5.52 0-10 4.48-10 10s4.48 10 10 10 10-4.48 10-10-4.48-10-10-10zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" })\n        );\n      case 'apps':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M4 8h4v-4h-4v4zm6 12h4v-4h-4v4zm-6 0h4v-4h-4v4zm0-6h4v-4h-4v4zm6 0h4v-4h-4v4zm6-10v4h4v-4h-4zm-6 4h4v-4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z\" })\n        );\n      case 'arrow-down':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M7.41 7.84l4.59 4.58 4.59-4.58 1.41 1.41-6 6-6-6z\" })\n        );\n      case 'arrow-up':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M7.41 15.41l4.59-4.58 4.59 4.58 1.41-1.41-6-6-6 6z\" })\n        );\n      case 'info':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M11 17h2v-6h-2v6zm1-15c-5.52 0-10 4.48-10 10s4.48 10 10 10 10-4.48 10-10-4.48-10-10-10zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-11h2v-2h-2v2z\" })\n        );\n      case 'apps':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M4 8h4v-4h-4v4zm6 12h4v-4h-4v4zm-6 0h4v-4h-4v4zm0-6h4v-4h-4v4zm6 0h4v-4h-4v4zm6-10v4h4v-4h-4zm-6 4h4v-4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z\" })\n        );\n      case 'dashboard':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M3 13h8v-10h-8v10zm0 8h8v-6h-8v6zm10 0h8v-10h-8v10zm0-18v6h8v-6h-8z\" })\n        );\n      case 'grade':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M12 17.27l6.18 3.73-1.64-7.03 5.46-4.73-7.19-.61-2.81-6.63-2.81 6.63-7.19.61 5.46 4.73-1.64 7.03z\" })\n        );\n      case 'lock':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M18 8h-1v-2c0-2.76-2.24-5-5-5s-5 2.24-5 5v2h-1c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9h-6.2v-2c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\" })\n        );\n      case 'location':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M12 2c-3.87 0-7 3.13-7 7 0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\" })\n        );\n      case 'play-arrow':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M8 5v14l11-7z\" })\n        );\n      case 'circle-filled':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z\" })\n        );\n      case 'sync':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M12 4v-3l-4 4 4 4v-3c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46c.78-1.23 1.24-2.69 1.24-4.26 0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8l-1.46-1.46c-.78 1.23-1.24 2.69-1.24 4.26 0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" })\n        );\n      case 'refresh':\n        // refresh icon from design team\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M8.88679436,20.5188676 C4.80331235,20.5188676 1.48113239,17.1966876 1.48113239,13.1132056 C1.48113239,9.02972363 4.80331235,5.70754368 8.88679436,5.70754368 L13.7641633,5.70754368 L10.5849126,8.88679436 L11.6320732,9.93395496 L16.5990507,4.96697748 L11.6320732,0 L10.5849126,1.0471606 L13.7641633,4.22641128 L8.88679436,4.22641128 C3.98646784,4.22641128 0,8.21287912 0,13.1132056 C0,18.0135322 3.98646784,22 8.88679436,22 C11.260309,22 13.491635,21.0757734 15.1704985,19.3969098 L14.1233379,18.3497492 C12.7244084,19.7486788 10.8648467,20.5188676 8.88679436,20.5188676\" })\n        );\n\n      // for demos\n      case 'elevator':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"#3C3C3B\", fill: \"none\", strokeWidth: \"1\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\n            \"g\",\n            { id: \"Group-11\" },\n            React.createElement(\"path\", { d: \"M23.477,12.633 L8.609,12.633 L8.609,0.508 L23.477,0.508 L23.477,12.633 Z\", id: \"Stroke-5\" }),\n            React.createElement(\"path\", { d: \"M16.0428,12.633 L16.0428,0.508\", id: \"Stroke-6\" }),\n            React.createElement(\"path\", { d: \"M3.3297,10.0326 L3.3297,3.9696\", id: \"Stroke-7\" }),\n            React.createElement(\"path\", { d: \"M0.4254,6.4563 L3.3924,3.4893 L6.3594,6.4563\", id: \"Stroke-8\" }),\n            React.createElement(\"path\", { d: \"M28.7559,3.4895 L28.7559,9.5525\", id: \"Stroke-9\" }),\n            React.createElement(\"path\", { d: \"M31.6602,7.0658 L28.6932,10.0328 L25.7262,7.0658\", id: \"Stroke-10\", s: true })\n          )\n        );\n      case 'weatherService':\n        return React.createElement(\n          \"g\",\n          { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", \"fill-rule\": \"evenodd\" },\n          React.createElement(\n            \"g\",\n            { id: \"Group-10\" },\n            React.createElement(\"path\", { d: \"M19.5047,5.8701 C19.4827,5.8701 19.4627,5.8731 19.4407,5.8731 C19.0467,3.0931 16.6637,0.9531 13.7747,0.9531 C11.5457,0.9531 9.6187,2.2281 8.6707,4.0861 C8.2977,4.0211 7.9167,3.9811 7.5257,3.9811 C3.8387,3.9811 0.8507,6.9691 0.8507,10.6561 C0.8507,14.3421 3.8387,17.3311 7.5257,17.3311 L19.5047,17.3311 C22.6697,17.3311 25.2347,14.7651 25.2347,11.6001 C25.2347,8.4361 22.6697,5.8701 19.5047,5.8701 L19.5047,5.8701 Z\", id: \"Stroke-11\" })\n          )\n        );\n      case 'sport':\n        return React.createElement(\n          \"g\",\n          null,\n          React.createElement(\"path\", { d: \"M14 3.8c.99 0 1.8-.81 1.8-1.8 0-1-.81-1.8-1.8-1.8-1 0-1.8.81-1.8 1.8s.8 1.8 1.8 1.8zm.12 6.2h4.88v-1.8h-3.62l-2-3.33c-.3-.5-.84-.83-1.46-.83-.17 0-.34.03-.49.07l-5.43 1.69v5.2h1.8v-3.67l2.11-.66-3.91 15.33h1.8l2.87-8.11 2.33 3.11v5h1.8v-6.41l-2.49-4.54.73-2.87 1.08 1.82z\" })\n        );\n    }\n  },\n\n  onClick: function onClick() {\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  },\n\n  componentWillMount: function componentWillMount() {\n    // If there is no color specified take the theme color or (if the theme is absent) a default color\n    // TODO: this should be state.  props can't change\n    //this.props.color=this.props.color?this.props.color:this.props.theme&&this.props.theme.title||\"#5a5a5a\";\n  },\n\n  render: function render() {\n\n    var styleIcon = Object.assign({}, styles.icon, {\n      fill: this.props.color,\n      width: this.props.size,\n      height: this.props.size\n    }, this.props.style);\n\n    var viewport = Object.assign({}, { x: 0, y: 0, width: 24, height: 24 }, this.state.viewportCorrection);\n\n    return React.createElement(\n      \"span\",\n      { onClick: this.onClick },\n      React.createElement(\n        \"svg\",\n        { viewBox: viewport.x + ' ' + viewport.y + ' ' + viewport.width + ' ' + viewport.height,\n          preserveAspectRatio: \"xMidYMid meet\",\n          fit: true,\n          style: styleIcon\n        },\n        this.renderGraphic()\n      )\n    );\n  }\n});\n\nmodule.exports = Icon;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/IconLink.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar Icon = require('./Icon.jsx');\n\nvar styles = {\n\tcontainer: {\n\t\tcursor: \"pointer\"\n\t},\n\taction: {\n\t\tverticalAlign: \"middle\",\n\t\tmargin: \"4px\"\n\t},\n\tlabel: {\n\t\tmarginLeft: \"5px\"\n\t}\n};\n\nvar IconLink = React.createClass({\n\tdisplayName: 'IconLink',\n\n\tpropTypes: {\n\t\tstyle: RPT.object,\n\t\ttheme: RPT.object.isRequired,\n\t\ticon: RPT.string,\n\t\tcolor: RPT.string,\n\t\tsize: RPT.number,\n\t\taction: RPT.func\n\t},\n\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\tsize: 24\n\t\t\t// color default is set in componentWillMount\n\t\t};\n\t},\n\n\tonClick: function onClick() {\n\t\tif (this.props.action) {\n\t\t\tthis.props.action();\n\t\t}\n\t},\n\n\tcomponentWillMount: function componentWillMount() {\n\t\t// TODO: this should be state.  props can't change\n\t\t//this.props.color=this.props.color?this.props.color:this.props.theme&&this.props.theme.major||\"#5a5a5a\";\n\t},\n\n\trender: function render() {\n\t\tvar styleContainer = Object.assign({}, this.props.style, styles.container);\n\t\tvar linkLabel = Object.assign({}, styles.label, {\n\t\t\tlineHeight: this.props.size + \"px\",\n\t\t\tcolor: this.props.color\n\t\t});\n\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ style: styleContainer, onClick: this.onClick },\n\t\t\tReact.createElement(Icon, { icon: this.props.icon,\n\t\t\t\tcolor: this.props.color,\n\t\t\t\tsize: this.props.size,\n\t\t\t\tstyle: { verticalAlign: \"middle\" },\n\t\t\t\ttheme: this.props.theme\n\t\t\t}),\n\t\t\tReact.createElement(\n\t\t\t\t'span',\n\t\t\t\t{ style: linkLabel },\n\t\t\t\tthis.props.children\n\t\t\t)\n\t\t);\n\t}\n});\n\nmodule.exports = IconLink;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Image.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\n\nvar styles = {\n    imageWrapper: {\n        width: \"inherit\",\n        height: \"inherit\"\n    },\n    imageError: {\n        height: \"100%\",\n        width: \"100%\",\n        display: \"table\"\n    },\n    imageErrorText: {\n        display: \"table-cell\",\n        verticalAlign: \"middle\",\n        textAlign: \"center\"\n    }\n};\n\n// TODO Called IoTImage because of Namespace conflicts -> Fix this\nvar Image = React.createClass({\n    displayName: \"Image\",\n\n    propTypes: {\n        url: RPT.string,\n        width: RPT.number,\n        height: RPT.number,\n        style: RPT.object,\n        onError: RPT.func\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {};\n    },\n\n    getInitialState: function getInitialState() {\n        return {\n            url: this.props.url ? this.props.url : \"\",\n            width: this.props.width ? this.props.width + \"px\" : \"\",\n            height: this.props.height ? this.props.height + \"px\" : \"\",\n            error: false\n        };\n    },\n\n    componentWillReceiveProps: function componentWillReceiveProps(props) {\n        this.setState({ error: false });\n        console.log(props.url);\n        this.setState({ url: props.url });\n        if (this.state.width !== props.width) {\n            this.setState({ width: props.width });\n        }\n        if (this.state.height !== props.height) {\n            this.setState({ height: props.height });\n        }\n    },\n\n    handleError: function handleError(e) {\n        if (typeof this.props.onError === 'function') {\n            this.props.onError(e.target.value);\n        } else {\n            this.setState({ error: true });\n        }\n    },\n\n    onLoad: function onLoad(e) {\n        if (typeof this.props.onLoad === 'function') {\n            this.props.onLoad(e);\n        }\n    },\n\n    render: function render() {\n        var errorMsg = \"\";\n\n        var image = React.createElement(\"img\", { width: this.state.width, height: this.state.height, src: this.state.url, onError: this.handleError, onLoad: this.onLoad, style: this.props.style });\n\n        if (this.state.error && this.state.url !== \"\") {\n            errorMsg = React.createElement(\n                \"div\",\n                { style: styles.imageError },\n                React.createElement(\n                    \"span\",\n                    { style: styles.imageErrorText },\n                    \"No image available\"\n                )\n            );\n            image = \"\";\n        }\n\n        return React.createElement(\n            \"div\",\n            { style: styles.imageWrapper },\n            image,\n            errorMsg\n        );\n    }\n});\n\nmodule.exports = Image;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\n/*global require, module */\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar re_weburl = require('../../Dashboard/util/regex-weburl');\nvar re_email = require('../../Dashboard/util/regex-email');\n\nvar styles = {\n  field: {\n    border: 'none',\n    borderBottom: '3px solid #9EAAA9',\n    boxShadow: 'none!important',\n    display: 'block',\n    position: 'relative',\n    width: '100%',\n    height: '42px',\n    //  padding: '8px 0px',\n    fontWeight: 'bold',\n    fontSize: '14px',\n    color: '#555',\n    outline: 'none',\n    lineHeight: '1.42857143',\n    boxSizing: 'border-box',\n    WebkitTransition: 'all .2s ease-in-out',\n    transition: 'all .2s ease-in-out',\n    backgroundColor: 'inherit'\n  },\n  fieldContainer: {\n    width: '100%',\n    float: 'left'\n  },\n  validationWarning: {\n    position: 'relative',\n    top: '-25px',\n    textAlign: 'right',\n    height: '0px',\n    paddingRight: '10px'\n  },\n  after: {\n    clear: 'both'\n  }\n\n};\n\nvar InputField = React.createClass({\n  displayName: 'InputField',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    containerStyle: RPT.object,\n    onChange: RPT.func,\n    onSubmit: RPT.func,\n    initialValue: RPT.string,\n    placeholder: RPT.string,\n    readOnly: RPT.bool,\n    min: RPT.number,\n    max: RPT.number,\n    type: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      initialValue: '',\n      type: 'text',\n      style: { label: {} },\n      readOnly: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      value: this.props.initialValue !== undefined ? this.props.initialValue : '',\n      isValid: true\n    };\n  },\n\n  validateType: function validateType(value) {\n    var currType = this.props.type || 'text';\n    var isValid = true;\n\n    switch (currType) {\n      case 'url':\n        isValid = value.match(re_weburl) !== null;\n      case 'email':\n        isValid = value.match(re_email) !== null;\n    }\n    return isValid;\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(props) {\n    if (props.value) {\n      this.setState({ value: props.value });\n    }\n  },\n\n  handleChange: function handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(event.target.value);\n    }\n    this.setState({ isValid: this.validateType(event.target.value) });\n  },\n\n  handleSubmit: function handleSubmit(event) {\n    if (event.key == \"Enter\") {\n      if (this.props.onSubmit) {\n        this.props.onSubmit(event.target.value);\n      }\n    }\n  },\n\n  handleOnFocus: function handleOnFocus(event) {\n    this.setState({\n      hasFocus: true\n    });\n    if (this.props.onFocus) {\n      this.props.onFocus(event.target.value);\n    }\n  },\n\n  handleClick: function handleClick(event) {\n    this.setState({\n      hasFocus: true\n    });\n    if (this.props.onClick) {\n      this.props.onClick(event.target.value);\n    }\n  },\n\n  handleOnBlur: function handleOnBlur(event) {\n    this.setState({\n      hasFocus: false\n    });\n    if (this.props.onBlur) {\n      this.props.onBlur(event.target.value);\n    }\n  },\n\n  render: function render() {\n    var warning = this.state.isValid ? '' : React.createElement(\n      'div',\n      { style: styles.validationWarning },\n      '!'\n    );\n    if (this.state.hasFocus) {\n      styles.field.borderColor = '#4581E0';\n    } else {\n      styles.field.borderColor = '#9EAAA9';\n    }\n    if (!this.state.isValid && !this.state.hasFocus) {\n      styles.field.borderColor = '#d10e0e';\n    }\n\n    var inputStyle = Object.assign({}, styles.field, this.props.style);\n\n    var containerStyle = Object.assign({}, styles.fieldContainer, this.props.containerStyle);\n\n    var inputField = React.createElement('input', { type: this.props.type, min: this.props.min, max: this.props.max, style: inputStyle, name: 'field', value: this.state.value, readOnly: this.props.readOnly, onKeyDown: this.handleSubmit, onChange: this.handleChange, onFocus: this.handleOnFocus, onClick: this.handleClick, onBlur: this.handleOnBlur, placeholder: this.props.placeholder });\n\n    return React.createElement(\n      'div',\n      { style: styles.formElement },\n      React.createElement(\n        'div',\n        { style: containerStyle },\n        inputField,\n        warning\n      ),\n      React.createElement('div', { style: styles.after })\n    );\n  }\n});\n\nmodule.exports = InputField;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/util/regex-email\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/regex-email.js\",\"../../Dashboard/util/regex-weburl\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/regex-weburl.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Label.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\n\nvar styles = {\n\n  container: {\n    marginBottom: \"15px\",\n    boxSizing: \"border-box\",\n    clear: \"both\"\n  },\n  childContainer: {},\n  label: {\n    textAlign: \"left\",\n    paddingRight: \"15px\",\n    paddingTop: \"7px\",\n    display: \"inline-block\",\n    fontSize: \"13px\",\n    color: \"#9EAAA9\"\n  }\n\n};\n\n// Documentation link:\n// https://github.ibm.com/IoT/dashboard-component/wiki/Label-component\n//\n\nvar Label = React.createClass({\n  displayName: \"Label\",\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    label: RPT.string,\n    labelFor: RPT.string,\n    customContainerStyle: RPT.object\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      label: \"\"\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      hasFocus: false\n    };\n  },\n\n  componentWillMount: function componentWillMount() {\n    this.updateTheme();\n  },\n\n  onFocus: function onFocus(e) {\n    this.setState({ hasFocus: true });\n  },\n\n  onBlur: function onBlur(e) {\n    this.setState({ hasFocus: false });\n  },\n\n  updateTheme: function updateTheme() {\n    styles.label.color = this.state.hasFocus ? \"#4581E0\" : \"#9EAAA9\";\n    styles.label.color = styles.label.color ? styles.label.color : this.props.theme && this.props.theme.title || \"#323232\";\n  },\n\n  render: function render() {\n    var self = this;\n    this.updateTheme();\n    var styleLabel = Object.assign({}, styles.label, this.props.style);\n    var styleContainer = Object.assign({}, styles.container, this.props.customContainerStyle);\n    return React.createElement(\n      \"div\",\n      { style: styleContainer },\n      React.createElement(\n        \"label\",\n        { style: styleLabel, htmlFor: this.props.labelFor },\n        this.props.label\n      ),\n      React.createElement(\n        \"div\",\n        { style: styles.childContainer },\n        React.Children.map(this.props.children, function (child, idx) {\n          // TODO: can't modify props\n          //child.props.onFocus=self.onFocus;\n          //child.props.onBlur=self.onBlur;\n          return child;\n        })\n      )\n    );\n  }\n});\n\nmodule.exports = Label;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LineChart.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\nvar c3 = (typeof window !== \"undefined\" ? window['c3'] : typeof global !== \"undefined\" ? global['c3'] : null);\nvar RPT = React.PropTypes;\nvar Icon = require('./Icon.jsx');\nvar Utils = require('../../Dashboard/dashboard/DashboardUtils');\n\nvar styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\"\n  }\n};\n\nvar LineChart = React.createClass({\n  displayName: 'LineChart',\n\n  propTypes: {\n    style: RPT.object,\n    theme: RPT.object.isRequired,\n    data: RPT.object,\n    initialData: RPT.object,\n    plots: RPT.array,\n    title: RPT.string,\n    range: RPT.number,\n    autoscroll: RPT.bool,\n    stacked: RPT.bool,\n    steps: RPT.bool,\n    threshold: RPT.number,\n    overview: RPT.bool,\n    legend: RPT.bool,\n    small: RPT.bool,\n    width: RPT.number,\n    height: RPT.number\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      data: {},\n      plots: [],\n      range: 60,\n      threshold: 300,\n      autoscroll: true,\n      overview: true,\n      stacked: false,\n      steps: false,\n      legend: true,\n      small: false\n\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      data: this.props.initialData ? this.props.initialData : []\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.createGraph();\n  },\n\n  startScrolling: function startScrolling() {\n    this.stopScrolling();\n    var self = this;\n    this.scrollInterval = setInterval(function () {\n      self.adjustWindow();\n    }, 1000);\n  },\n\n  stopScrolling: function stopScrolling() {\n    if (this.scrollInterval) {\n      clearInterval(this.scrollInterval);\n    }\n  },\n\n  adjustWindow: function adjustWindow() {\n    if (this.graph) {\n      this.graph.axis.max({\n        x: new Date()\n      });\n      if (this.props.threshold) {\n        var startDate = new Date(new Date().getTime() - this.props.threshold * 1000);\n        this.graph.axis.min({\n          x: startDate\n        });\n      }\n      var end = new Date(new Date().getTime() - this.props.range * 1000);\n      var start = new Date();\n      this.graph.internal.config.axis_x_tick_values = this.generateTickValues(end, start);\n      this.graph.zoom([end, start]);\n    }\n  },\n\n  createGraph: function createGraph() {\n    if (this.props.autoscroll) {\n      this.startScrolling();\n    } else {\n      this.stopScrolling();\n    }\n\n    var self = this;\n    this.destroyGraph();\n\n    var container = ReactDOM.findDOMNode(this);\n\n    var dom = document.createElement(\"div\");\n    container.appendChild(dom);\n\n    this.width = this.props.width ? this.props.width : container.offsetWidth;\n    this.height = this.props.height ? this.props.height : container.offsetHeight;\n\n    var colors = this.props.theme.palette;\n\n    if (this.width > 0 && this.height > 0) {\n\n      dom.style.width = this.width + \"px\";\n      dom.style.height = this.height + \"px\";\n\n      var now = new Date();\n      var before = new Date(now.getTime() - 1000 * this.props.range);\n      var zoomStart = now;\n      var zoomEnd = before;\n\n      var keys = [];\n      var colorMap = {};\n      var names = {};\n      for (var i in this.props.plots) {\n        var plot = this.props.plots[i];\n        keys.push(plot.id);\n        colorMap[plot.id] = colors[i % colors.length];\n        names[plot.id] = plot.label;\n      }\n\n      var config = {\n        size: {\n          width: this.width,\n          height: this.height\n        },\n        padding: {\n          left: this.props.small ? 0 : 50,\n          bottom: 0,\n          right: 0,\n          top: 0\n        },\n        // padding: {\n        //   left: this.props.small?20:50,\n        //   bottom: 20,\n        //   right: 20,\n        //   top: 20\n        // },\n        data: {\n          type: this.props.steps ? \"step\" : \"area\",\n          json: [this.state.data],\n          x: 'timestamp',\n          keys: {\n            x: 'timestamp',\n            value: keys\n          },\n          groups: this.props.stacked ? [keys] : undefined,\n          colors: colorMap,\n          names: names\n          //            xFormat: '%Y-%m-%d %H:%M:%S'\n        },\n        line: {\n          connectNull: true,\n          step: {\n            type: 'step-after'\n          }\n        },\n        axis: {\n          x: {\n            type: \"timeseries\",\n            extent: [zoomEnd, zoomStart],\n            tick: {\n              values: this.generateTickValues(zoomEnd, zoomStart),\n              format: '%H:%M:%S',\n              culling: {\n                max: 3\n              },\n              fit: true\n            },\n            min: before,\n            show: true\n          },\n          y: {\n            show: !this.props.small\n          }\n        },\n        grid: {\n          x: {\n            show: true\n          },\n          y: {\n            show: true\n          }\n        },\n        point: {\n          r: 4,\n          focus: {\n            expand: {\n              enabled: true,\n              r: 6\n            }\n          },\n          show: !this.props.stacked // seems not to work with stacked\n        },\n        transition: {\n          duration: 0\n        },\n        legend: {\n          hide: !this.props.legend\n        }\n      };\n\n      if (this.props.overview) {\n        config.subchart = {\n          show: true,\n          size: {\n            height: 30\n          }\n        };\n      }\n\n      this.graph = c3.generate(config);\n\n      dom.appendChild(this.graph.element);\n\n      this.beautifyLegend();\n    }\n  },\n\n  beautifyLegend: function beautifyLegend() {\n    //<rect class=\"c3-legend-item-tile\" x=\"22.75\" y=\"0\" width=\"10\" height=\"10\" style=\"pointer-events: none; fill: rgb(186, 143, 247);\"></rect>\n\n    var tiles = d3.selectAll('#' + this.id + ' .c3-legend-item-tile');\n    tiles.attr('rx', 7).attr('ry', 7);\n  },\n\n  generateTickValues: function generateTickValues(end, start) {\n    // range in seconds\n    var range = (start.getTime() - end.getTime()) / 1000;\n    var leftEnd = end.getTime() / 1000;\n    // depending on size, show 2 or 5 ticks\n    var steps = range / (this.props.small ? 2 : 5);\n\n    var breakpoints = [1, 5, 15, 60, 300, 1800, 3600, 10800, 21600, 86400];\n\n    for (var i in breakpoints) {\n      var breakpoint = breakpoints[i];\n      if (steps < breakpoint) {\n        steps = breakpoint;\n        leftEnd = Math.floor(leftEnd / breakpoint) * breakpoint;\n        break;\n      }\n    }\n\n    var values = [];\n    var date = leftEnd;\n    for (var j = 0; j < 5; j++) {\n      var newDate = new Date(leftEnd * 1000);\n      values.push(newDate);\n      leftEnd = leftEnd + steps;\n    }\n    return values;\n  },\n\n  destroyGraph: function destroyGraph() {\n    var dom = ReactDOM.findDOMNode(this);\n    while (dom.firstChild) {\n      dom.removeChild(dom.firstChild);\n    }\n    this.graph = null;\n  },\n\n  updateGraph: function updateGraph() {\n    var self = this;\n    if (!this.graph) {\n      this.createGraph();\n    }\n    if (this.graph) {\n      var container = ReactDOM.findDOMNode(this);\n      var width = this.props.width ? this.props.width : container.offsetWidth;\n      var height = this.props.height ? this.props.height : container.offsetHeight;\n      if (this.width != width || this.height != height) {\n        this.width = width;\n        this.height = height;\n        this.graph.resize({ height: this.height, width: this.width });\n      }\n\n      var keys = [];\n      for (var i in this.props.plots) {\n        keys.push(this.props.plots[i].id);\n      }\n\n      this.state.data.push(this.props.data);\n\n      var data;\n      if (this.props.threshold) {\n        var startDate = new Date().getTime() - this.props.threshold * 1000;\n        while (this.state.data.length > 0) {\n          var item = this.state.data[0];\n          if (!item.timestamp || item.timestamp < startDate) {\n            this.state.data.shift();\n          } else {\n            break;\n          }\n        }\n      }\n      self.graph.load({\n        json: this.state.data,\n        keys: {\n          x: \"timestamp\",\n          value: keys\n        }\n      });\n\n      this.beautifyLegend();\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this.destroyGraph();\n  },\n\n  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n    var oldProps = Object.assign({}, this.props);\n    var newProps = Object.assign({}, prevProps);\n    oldProps.data = null;\n    newProps.data = null;\n    if (JSON.stringify(oldProps) != JSON.stringify(newProps)) {\n      this.createGraph();\n      this.updateGraph();\n    } else {\n      this.updateGraph();\n    }\n  },\n\n  onEnter: function onEnter() {\n    this.stopScrolling();\n  },\n\n  onLeave: function onLeave() {\n    if (this.props.autoscroll) {\n      this.startScrolling();\n    }\n  },\n\n  render: function render() {\n    var style = Object.assign({}, styles.container, this.props.style ? this.props.style : {});\n    if (!this.id) {\n      this.id = \"X\" + Math.round(Math.random() * 1000000);\n    }\n    return React.createElement('div', { id: this.id, className: 'lineChart', style: style, onMouseOver: this.onEnter, onMouseOut: this.onLeave });\n  }\n});\n\nmodule.exports = LineChart;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/dashboard/DashboardUtils\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/dashboard/DashboardUtils.js\",\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/LoadIndicator.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar Icon = require('./Icon.jsx');\n\nvar styles = {};\n\nvar LoadIndicator = React.createClass({\n\tdisplayName: 'LoadIndicator',\n\n\tpropTypes: {\n\t\ttheme: RPT.object.isRequired,\n\t\tstyle: RPT.object,\n\t\twait: RPT.number,\n\t\tuseDataPoints: RPT.bool\n\t},\n\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\twait: 30,\n\t\t\tuseDataPoints: false\n\t\t};\n\t},\n\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\tcounter: this.props.wait\n\t\t};\n\t},\n\n\tcomponentDidMount: function componentDidMount() {\n\t\tthis.startCounter();\n\t},\n\n\tstartCounter: function startCounter() {\n\t\tvar self = this;\n\t\tsetTimeout(function () {\n\t\t\tvar counter = self.state.counter;\n\t\t\tif (counter > 0 && self.isMounted()) {\n\t\t\t\tself.setState({\n\t\t\t\t\tcounter: counter - 1\n\t\t\t\t});\n\t\t\t\tself.startCounter();\n\t\t\t}\n\t\t}, 1000);\n\t},\n\n\trender: function render() {\n\t\tvar text = \"\";\n\t\tif (this.state) {\n\t\t\tif (this.state.counter <= 0) {\n\t\t\t\tif (this.props.useDataPoints) {\n\t\t\t\t\ttext = React.createElement(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'span',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t'No messages for the specified data point(s) received.'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\ttext = React.createElement(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'span',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t'No data received. Check if the service is accessible.'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttext = \"Loading \" + (this.state.counter % 3 - 2 == 0 ? \":\" : \".\") + (this.state.counter % 3 - 1 == 0 ? \":\" : \".\") + (this.state.counter % 3 == 0 ? \":\" : \".\");\n\t\t\t}\n\t\t}\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\tnull,\n\t\t\ttext\n\t\t);\n\t}\n});\n\nmodule.exports = LoadIndicator;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Option.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar Icon = require('./Icon.jsx');\n\nvar styles = {\n    optionContainer: {\n        borderStyle: \"solid\",\n        padding: \"10px\",\n        fontSize: \"14px\",\n        borderRightWidth: \"2px\",\n        borderLeftWidth: \"2px\",\n        borderColor: \"#E7E7E7\",\n        backgroundColor: \"\",\n        color: \"\",\n        cursor: \"pointer\",\n        boxSizing: \"border-box\",\n        MozBoxSizing: \"border-box\",\n        WebkitBoxSizing: \"border-box\"\n    },\n    selectionTickContainer: {\n        display: \"inline\",\n        float: \"right\"\n    },\n    selectionTick: {}\n};\n\nvar Option = React.createClass({\n    displayName: 'Option',\n\n    propTypes: {\n        theme: RPT.object,\n        style: RPT.object,\n        value: RPT.string,\n        selected: RPT.bool,\n        disabled: RPT.bool,\n        onSelect: RPT.func,\n        onClick: RPT.func,\n        lastChild: RPT.bool\n    },\n\n    getInitialState: function getInitialState() {\n        return {\n            hover: false,\n            disabled: this.props.disabled || false\n        };\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            selected: false,\n            theme: {\n                \"light\": \"#c7c7c7\",\n                \"title\": \"#323232\",\n                \"dark\": \"#5a5a5a\"\n            }\n        };\n    },\n\n    componentWillMount: function componentWillMount() {\n        styles.optionContainer.borderColor = \"#E7E7E7\";\n    },\n\n    mouseOver: function mouseOver() {\n        this.setState({ hover: true });\n    },\n\n    mouseOut: function mouseOut() {\n        this.setState({ hover: false });\n    },\n\n    handleMouseDown: function handleMouseDown(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.state.disabled) {\n            if (typeof this.props.children == \"string\" && this.props.children !== \"\") {\n\n                this.props.onSelect(this.props.value, this.props.children, event);\n                if (this.props.onClick) {\n                    this.props.onClick();\n                }\n            } else {\n                this.props.onSelect(this.props.value, event);\n            }\n        }\n    },\n\n    render: function render() {\n\n        if (this.props.lastChild === true) {\n            styles.optionContainer.borderBottomWidth = \"2px\";\n            styles.optionContainer.borderTopWidth = \"0px\";\n        } else if (this.props.firstChild === true) {\n            styles.optionContainer.borderTopWidth = \"1px\";\n            styles.optionContainer.borderBottomWidth = \"0px\";\n        } else {\n            styles.optionContainer.borderTopWidth = \"0px\";\n            styles.optionContainer.borderBottomWidth = \"0px\";\n        }\n\n        var option = \"\";\n\n        if (!this.state.disabled) {\n            styles.optionContainer.cursor = \"pointer\";\n            if (this.state.hover || this.props.selected) {\n                styles.optionContainer.backgroundColor = \"#4581E0\";\n                styles.optionContainer.color = \"#FFFFFF\";\n                styles.selectionTick.color = \"#FFFFFF\";\n                styles.optionContainer.borderColor = \"#4581E0\";\n            } else {\n                styles.optionContainer.backgroundColor = \"#F7F7F7\";\n                styles.optionContainer.color = this.props.theme.major;\n                styles.selectionTick.color = this.props.theme.title;\n                styles.optionContainer.borderColor = \"#E7E7E7\";\n            }\n        } else {\n            styles.optionContainer.backgroundColor = \"#F9F9F9\";\n            styles.optionContainer.color = this.props.theme.minor;\n            styles.optionContainer.cursor = \"default\";\n        }\n\n        var selectionTick = this.props.selected ? React.createElement(\n            'div',\n            { style: styles.selectionTickContainer },\n            React.createElement(Icon, { theme: this.props.theme, icon: 'check', color: styles.selectionTick.color, size: 12 }),\n            ' '\n        ) : \"\";\n\n        var containerStyle = Object.assign({}, styles.optionContainer, this.props.style);\n        if (this.props.onSelect !== undefined) {\n            option = React.createElement(\n                'div',\n                { onMouseDown: this.handleMouseDown, style: containerStyle,\n                    onMouseOver: this.mouseOver, onMouseOut: this.mouseOut\n                },\n                this.props.children,\n                selectionTick\n            );\n        } else {\n            option = React.createElement(\n                'option',\n                { value: this.props.value, selected: this.props.selected },\n                this.props.children\n            );\n        }\n\n        return option;\n    }\n});\n\nmodule.exports = Option;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Portal.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactDOM = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\n\nvar RPT = React.PropTypes;\n\nvar styles = {};\n\nvar Portal = React.createClass({\n  displayName: 'Portal',\n\n  componentDidMount: function componentDidMount() {\n    this.popup = document.createElement(\"div\");\n    this.popup.style.position = 'relative';\n    this.popup.style.zIndex = '9999';\n    document.body.style.overflow = 'hidden';\n    document.body.appendChild(this.popup);\n    this._child = ReactDOM.render(this.props.children, this.popup);\n  },\n\n  componentDidUpdate: function componentDidUpdate() {\n    if (!this._child) {\n      return;\n    }\n    this._child.setState({});\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    React.unmountComponentAtNode(this.popup);\n    document.body.style.overflow = 'auto';\n    document.body.removeChild(this.popup);\n  },\n\n  render: function render() {\n    return null;\n  }\n\n});\n\nmodule.exports = Portal;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/SearchField.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\n/*global require, module */\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\nvar re_weburl = require('../../Dashboard/util/regex-weburl');\nvar Icon = require('./Icon.jsx');\n\nvar styles = {\n  field: {\n    border: 'none',\n    borderBottom: '3px solid #9EAAA9',\n    boxShadow: 'none!important',\n    display: 'block',\n    position: 'relative',\n    width: '100%',\n    height: '35px',\n    padding: '8px 0px',\n    fontWeight: 'bold',\n    fontSize: '14px',\n    color: '#555',\n    outline: 'none',\n    lineHeight: '1.42857143',\n    boxSizing: 'border-box',\n    WebkitTransition: 'all .2s ease-in-out',\n    transition: 'all .2s ease-in-out',\n    backgroundColor: '#EFEFEF',\n    borderColor: 'transparent',\n    paddingLeft: \"10px\"\n\n  },\n  fieldContainer: {\n    width: '100%',\n    float: 'left'\n  },\n  validationWarning: {\n    position: 'relative',\n    top: '-25px',\n    textAlign: 'right',\n    height: '0px',\n    paddingRight: '10px'\n  },\n  after: {\n    clear: 'both'\n  },\n  formElement: {\n    paddingLeft: \"40px\",\n    position: \"relative\"\n  },\n  icon: {\n    position: \"absolute\",\n    top: \"8px\",\n    left: \"8px\"\n  }\n\n};\n\nvar SearchField = React.createClass({\n  displayName: 'SearchField',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    onChange: RPT.func,\n    onSubmit: RPT.func,\n    initialValue: RPT.string,\n    placeholder: RPT.string,\n    readOnly: RPT.bool,\n    type: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      initialValue: '',\n      type: 'text',\n      style: { label: {} },\n      readOnly: false\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      value: this.props.initialValue || '',\n      isValid: true\n    };\n  },\n\n  validateType: function validateType(value) {\n    var currType = this.props.type || 'text';\n    var isValid = true;\n\n    switch (currType) {\n      case 'url':\n        isValid = value.match(re_weburl) !== null;\n    }\n\n    return isValid;\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(props) {\n    if (props.value) {\n      this.setState({ value: props.value });\n    }\n  },\n\n  handleChange: function handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(event.target.value);\n    }\n    this.setState({ isValid: this.validateType(event.target.value) });\n  },\n\n  handleSubmit: function handleSubmit(event) {\n    if (event.key == \"Enter\") {\n      if (this.props.onSubmit) {\n        this.props.onSubmit(event.target.value);\n      }\n    }\n  },\n\n  handleClick: function handleClick(event) {\n    this.setState({\n      hasFocus: true\n    });\n    if (this.props.onClick) {\n      this.props.onClick(event.target.value);\n    }\n  },\n\n  render: function render() {\n    var warning = this.state.isValid ? '' : React.createElement(\n      'div',\n      { style: styles.validationWarning },\n      '!'\n    );\n\n    var inputStyle = Object.assign({}, styles.field, this.props.style);\n\n    var containerStyle = Object.assign({}, styles.fieldContainer, this.props.containerStyle);\n\n    var inputField = React.createElement('input', { type: this.props.type, style: inputStyle, name: 'field', value: this.state.value, readOnly: this.props.readOnly, onKeyDown: this.handleSubmit, onChange: this.handleChange, onFocus: this.handleOnFocus, onClick: this.handleClick, onBlur: this.handleOnBlur, placeholder: this.props.placeholder });\n\n    return React.createElement(\n      'div',\n      { style: styles.formElement },\n      React.createElement(Icon, { theme: this.props.theme, color: this.props.theme.accent, icon: 'search', size: 24, style: styles.icon }),\n      React.createElement(\n        'div',\n        { style: containerStyle },\n        inputField,\n        warning\n      ),\n      React.createElement('div', { style: styles.after })\n    );\n  }\n});\n\nmodule.exports = SearchField;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/util/regex-weburl\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/regex-weburl.js\",\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Section.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\n\nvar RPT = React.PropTypes;\n\nvar styles = {\n  sectionWrapper: {\n    clear: \"both\",\n    marginBottom: '40px'\n  },\n\n  headingSection: {\n    color: \"#5c91cc\",\n    fontWeight: \"700\",\n    display: \"inline-block\",\n    textTransform: \"none\",\n    fontSize: \"14px\",\n    marginTop: \"20px\",\n    marginBottom: '10px'\n  },\n\n  hr: {\n    borderTop: '1px solid #eee',\n    boxSizing: 'content-box',\n    height: '3px',\n    backgroundColor: '#4983c6',\n    marginTop: '10px',\n    borderStyle: 'solid',\n    marginBottom: '25px',\n    border: '0px'\n  }\n\n};\n\nvar Section = React.createClass({\n  displayName: 'Section',\n\n  propTypes: {},\n\n  getDefaultProps: function getDefaultProps() {\n    return {};\n  },\n\n  getInitialState: function getInitialState() {\n    return {};\n  },\n\n  componentDidUpdate: function componentDidUpdate() {},\n\n  render: function render() {\n\n    var headingSection = \"\";\n\n    headingSection = React.createElement(\n      'div',\n      null,\n      this.props.headingSection\n    );\n\n    return React.createElement(\n      'div',\n      { style: styles.sectionWrapper },\n      React.createElement(\n        'div',\n        { style: styles.headingSection },\n        headingSection\n      ),\n      React.createElement('hr', { style: styles.hr }),\n      React.createElement(\n        'div',\n        null,\n        this.props.children\n      )\n    );\n  }\n});\nmodule.exports = Section;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Select.jsx\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;\nvar RPT = React.PropTypes;\nvar InputField = require('./InputField.jsx');\nvar Icon = require('./Icon.jsx');\n\nvar styles = {\n  selectBox: {\n    cursor: 'pointer',\n    position: 'relative'\n  },\n  optionsContainer: {\n    position: 'absolute',\n    minWidth: '100%',\n    zIndex: '99999999'\n  },\n  iconContainer: {\n    position: 'relative',\n    top: '-30px',\n    float: 'right',\n    outlineWidth: '0px !important'\n  },\n  inputField: {\n    width: '100%',\n    cursor: 'pointer'\n  },\n  after: {\n    //clear: 'both'\n  }\n};\n\n// Documentation link:\n// https://github.ibm.com/IoT/dashboard-component/wiki/Select-component\n//\n\nvar SelectBox = React.createClass({\n  displayName: 'SelectBox',\n\n  propTypes: {\n    theme: RPT.object.isRequired,\n    style: RPT.object,\n    onChange: RPT.func,\n    label: RPT.string,\n    initialValue: RPT.string,\n    value: RPT.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      initialValue: ''\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      isOpen: false,\n      value: this.props.value || null\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.updateInput(this.props.value);\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(props) {\n    this.updateInput(props.value);\n  },\n\n  onSelect: function onSelect(value, label, event) {\n    this.setState({ input: label, isOpen: false, value: value });\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  },\n\n  toggleOptionsContainer: function toggleOptionsContainer() {\n    this.setState({ isOpen: !this.state.isOpen });\n  },\n\n  onFocus: function onFocus() {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  },\n\n  onBlur: function onBlur() {\n    //this.setState({ isOpen: false });\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  },\n\n  updateInput: function updateInput(newVal) {\n    var self = this;\n    React.Children.forEach(this.props.children, function (child) {\n      if (newVal === child.props.value) {\n        self.setState({ input: child.props.children, value: newVal });\n      }\n    });\n  },\n\n  handleChange: function handleChange(event) {},\n\n  renderInputField: function renderInputField() {\n    return React.createElement(InputField, { readOnly: true, style: styles.inputField, containerStyle: { width: '100%', cursor: 'pointer' }, theme: this.props.theme, initialValue: this.props.initialValue, value: this.state.input, onFocus: this.onFocus, onClick: this.toggleOptionsContainer, onBlur: this.onBlur });\n  },\n\n  renderChildren: function renderChildren() {\n    var self = this;\n    var children = this.props.children;\n    var lastIndex = Array.isArray(children) ? children.length - 1 : null;\n    var childrenElement = React.Children.map(children, function (child, idx) {\n      var currProps = {};\n      if (lastIndex && lastIndex === idx) {\n        currProps = { lastChild: true, firstChild: false };\n      } else if (idx === 0) {\n        currProps = { lastChild: false, firstChild: true };\n      } else {\n        currProps = { lastChild: false, firstChild: false };\n      }\n\n      if (self.state.value === child.props.value) {\n        currProps.selected = true;\n      } else {\n        currProps.selected = false;\n      }\n\n      currProps.onSelect = self.onSelect;\n      var newChild = React.cloneElement(child, currProps);\n      return newChild;\n    });\n\n    return React.createElement(\n      'div',\n      { style: styles.optionsContainer },\n      React.createElement(\n        ReactCSSTransitionGroup,\n        { transitionName: 'actionIcons', transitionEnterTimeout: 500, transitionLeaveTimeout: 500 },\n        childrenElement\n      )\n    );\n  },\n\n  render: function render() {\n    var selectBox = Object.assign({}, styles.selectBox, this.props.style);\n    return React.createElement(\n      'div',\n      { style: selectBox },\n      this.renderInputField(),\n      React.createElement(\n        'a',\n        { style: styles.iconContainer, tabIndex: '1', onBlur: this.onBlur, href: 'javascript:void(0)' },\n        React.createElement(Icon, { icon: \"arrow-drop-down\", size: 15, theme: this.props.theme, onClick: this.toggleOptionsContainer })\n      ),\n      this.state.isOpen ? this.renderChildren() : '',\n      React.createElement('div', { style: styles.after })\n    );\n  }\n});\n\nmodule.exports = SelectBox;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./Icon.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/Icon.jsx\",\"./InputField.jsx\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/InputField.jsx\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/components/SwitchBtn.jsx\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar React = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\nvar RPT = React.PropTypes;\n\nvar styles = {\n    container: {\n        paddingTop: \"5px\"\n    },\n    switchBtn: {\n        position: \"relative\",\n        border: \"3px solid\",\n        borderColor: \" #4581E0\",\n        width: \"48px\",\n        float: \"left\",\n        backgroundColor: \"#4581E0\",\n        borderRadius: \"13px\",\n        webkitTransition: \"all .15s ease-out\",\n        mozTransition: \"all .15s ease-out\",\n        msTransition: \"all .15s ease-out\",\n        oTransition: \"all .15s ease-out\",\n        transition: \"all .15s ease-out\"\n    },\n    label: {},\n    toggleElement: {\n        display: \"block\",\n        webkitTransition: \"left .15s ease-out\",\n        mozTransition: \"left .15s ease-out\",\n        msTransition: \"left .15s ease-out\",\n        oTransition: \"left .15s ease-out\",\n        transition: \"left .15s ease-out\",\n        width: \"20px\",\n        height: \"20px\",\n        backgroundColor: \"white\",\n        position: \"relative\",\n        borderRadius: \"10px\"\n    },\n    falseState: {\n        left: \"23px\"\n    },\n    trueState: {\n        left: \"0px\"\n    },\n    stateText: {\n        lineHeight: \"24px\",\n        marginLeft: \"15px\"\n    }\n};\n\nvar SwitchBtn = React.createClass({\n    displayName: \"SwitchBtn\",\n\n    propTypes: {\n        theme: RPT.object.isRequired,\n        style: RPT.object,\n        initialValue: RPT.bool,\n        value: RPT.bool,\n        trueText: RPT.string,\n        falseText: RPT.string,\n        label: RPT.string\n    },\n\n    getInitialState: function getInitialState() {\n        return {\n            value: this.props.initialValue\n        };\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            initialValue: true,\n            onChange: function onChange() {},\n            trueText: \"On\",\n            falseText: \"Off\"\n        };\n    },\n\n    toggleState: function toggleState() {\n        var toggleState = this.state.value;\n        this.setState({ value: !toggleState });\n        this.props.onChange(!toggleState);\n    },\n\n    componentWillMount: function componentWillMount() {\n        // Apply theme colors here\n        var theme = this.props.theme;\n        styles.stateText.color = theme ? theme.major : \"#323232\";\n    },\n\n    render: function render() {\n        var toggleStateStyle = this.state.value ? styles.trueState : styles.falseState;\n        var toggleElementStyle = Object.assign({}, styles.toggleElement, toggleStateStyle);\n        var toggleSwitchStyle = Object.assign({}, styles.switchBtn, this.state.value ? {} : { backgroundColor: this.props.theme.minor, borderColor: this.props.theme.minor });\n        var text = \"\";\n        if (this.props.trueText !== \"\" && this.props.falseText !== \"\") {\n            text = this.state.value ? this.props.trueText : this.props.falseText;\n        } else {\n            text = \"\";\n        }\n\n        return React.createElement(\n            \"div\",\n            null,\n            React.createElement(\n                \"div\",\n                { style: styles.container },\n                React.createElement(\n                    \"div\",\n                    { style: toggleSwitchStyle, onClick: this.toggleState },\n                    React.createElement(\"div\", { style: toggleElementStyle })\n                ),\n                React.createElement(\n                    \"div\",\n                    null,\n                    React.createElement(\n                        \"span\",\n                        { style: styles.stateText },\n                        text\n                    )\n                )\n            )\n        );\n    }\n});\n\nmodule.exports = SwitchBtn;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFAuthStore.js\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\n\nvar Actions = Reflux.createActions(['setAuth', 'getAuth']);\n\nvar IoTFAuthStore = Reflux.createStore({\n\n\tActions: Actions,\n\n\tauth: {\n\t\tltpa: null,\n\t\torg: null,\n\t\tdomain: null,\n\t\tapiKey: null,\n\t\tapiToken: null\n\t},\n\n\tinit: function init() {\n\t\tvar self = this;\n\t\tthis.listenTo(Actions.setAuth, function (a, b, c, d, e) {\n\t\t\tself.onSetAuth(a, b, c, d, e);\n\t\t});\n\t},\n\n\tgetAuth: function getAuth() {\n\t\treturn this.auth;\n\t},\n\n\tonSetAuth: function onSetAuth(org, ltpa, domain, apiKey, apiToken) {\n\t\tif (org) {\n\t\t\tthis.auth.org = org;\n\t\t};\n\t\tif (ltpa) {\n\t\t\tthis.auth.ltpa = ltpa;\n\t\t};\n\t\tif (domain) {\n\t\t\tthis.auth.domain = domain;\n\t\t};\n\t\tif (apiKey) {\n\t\t\tthis.auth.apiKey = apiKey;\n\t\t};\n\t\tif (apiToken) {\n\t\t\tthis.auth.apiToken = apiToken;\n\t\t};\n\t\tthis.trigger(this.auth);\n\t}\n});\n\nmodule.exports = IoTFAuthStore;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFDeviceStore.js\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\n//var ibmiotf = require('ibmiotf');\nvar mqtt = (typeof window !== \"undefined\" ? window['Messaging'] : typeof global !== \"undefined\" ? global['Messaging'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar Const = require('../../Dashboard/util/Const');\nvar IoTFAuthStore = require('./IoTFAuthStore.js');\n\nvar Actions = Reflux.createActions(['fetchDevice', 'fetchDevices', 'startDeviceWatch', 'stopDeviceWatch', 'loadDeviceHistory', 'startPropertyWatch', 'stopPropertyWatch', 'startEventWatch', 'stopEventWatch']);\n\nvar State = {\n  CONNECTED: \"CONNECTED\",\n  DISCONNECTED: \"DISCONNECTED\"\n};\n\nvar IoTFDeviceStore = Reflux.createStore({\n\n  client: null,\n\n  // keep track of watched objects\n  watches: {\n    devices: [],\n    properties: []\n  },\n\n  deviceTypes: {},\n\n  cache: {},\n\n  historianRequests: [],\n\n  historianRequestDelay: 100, // in millis\n\n  lastValueInterval: 24 * 60 * 60 * 1000, // look up last value in previous 24 hours\n\n  Actions: Actions,\n\n  auth: {},\n\n  state: State.DISCONNECTED,\n\n  init: function init() {\n    IoTFAuthStore.listen(this.onAuth);\n    this.listenTo(Actions.fetchDevice, this.onFetchDevice);\n    this.listenTo(Actions.fetchDevices, this.onFetchDevices);\n    this.listenTo(Actions.startDeviceWatch, this.onStartDeviceWatch);\n    this.listenTo(Actions.stopDeviceWatch, this.onStopDeviceWatch);\n    this.listenTo(Actions.startPropertyWatch, this.onStartPropertyWatch);\n    this.listenTo(Actions.stopPropertyWatch, this.onStopPropertyWatch);\n    this.listenTo(Actions.startEventWatch, this.onStartEventWatch);\n    this.listenTo(Actions.stopEventWatch, this.onStopEventWatch);\n  },\n\n  onAuth: function onAuth(payload) {\n    console.log(\"Retrieving auth:\");\n    this.auth = {\n      ltpa: payload.ltpa !== null ? encodeURIComponent(payload.ltpa) : null,\n      org: encodeURIComponent(payload.org),\n      apiKey: payload.apiKey !== null ? encodeURIComponent(payload.apiKey) : null,\n      apiToken: payload.apiToken !== null ? encodeURIComponent(payload.apiToken) : null\n    };\n\n    // auth was updated\n    this.initClient();\n    this.connectClient();\n  },\n\n  initClient: function initClient() {\n    var auth = IoTFAuthStore.getAuth();\n    var randomNumber = Math.floor(Math.random() * 90000) + 10000;\n    var clientId = 'a:' + auth.org + ':ptl' + randomNumber;\n\n    var host = auth.org + \".messaging.\" + auth.domain;\n\n    var port = 443;\n\n    this.client = new window.Messaging.Client(host, port, clientId);\n\n    var self = this;\n\n    this.client.onMessageArrived = function (message) {\n      if (message && message.payloadString !== \"\") {\n        console.log(\"MQTT Client: Message Arrived on topic \" + message.destinationName);\n\n        var topic = message.destinationName;\n        var typeId = topic.split(\"/\")[2];\n        var deviceId = topic.split(\"/\")[4];\n        var evtType = topic.split(\"/\")[6];\n\n        var data = JSON.parse(message.payloadString);\n\n        // add to cache an flatten the structure\n        var props = self.addToCache(deviceId, evtType, data, new Date().getTime());\n\n        var payload = {};\n        var timestamp = null;\n\n        var keys = Object.keys(props);\n        for (var i in keys) {\n          var entry = props[keys[i]];\n          payload[keys[i]] = entry.value;\n          timestamp = entry.timestamp;\n        }\n\n        self.trigger({\n          deviceEvent: {\n            deviceId: deviceId,\n            eventType: evtType,\n            data: payload,\n            timestamp: new Date(timestamp).toISOString()\n          }\n        });\n      }\n    };\n\n    this.client.onConnectionLost = function (responseObj) {\n      console.log(\"MQTT Client: Connection lost\", responseObj);\n      self.state = State.DISCONNECTED;\n      setTimeout(function () {\n        console.log(\"MQTT Client: Reconnecting...\");\n        self.connectClient();\n      }, 100);\n    };\n  },\n\n  connectClient: function connectClient() {\n    var auth = IoTFAuthStore.getAuth();\n    var self = this;\n    var options = {\n      onSuccess: function onSuccess() {\n        self.state = State.CONNECTED;\n        console.log(\"MQTT Client: Successfully opened a connection to the MQTT broker\");\n        self.handlePendingSubscribes();\n      },\n      onFailure: function onFailure(error) {\n        console.log(\"MQTT Client: An error occured whilst trying to open a connection to the MQTT broker\");\n        self.state = State.DISCONNECTED;\n      },\n      useSSL: true,\n      cleanSession: true\n    };\n\n    if (auth.ltpa) {\n      options.userName = \"use-ltpa-token\";\n      options.password = auth.ltpa;\n    } else if (auth.apiKey) {\n      options.userName = auth.apiKey;\n      options.password = auth.apiToken;\n    } else {\n      throw new Error(\"No LTPA token or API key defined for connection\");\n    }\n\n    this.client.connect(options);\n  },\n\n  onFetchDevice: function onFetchDevice() {\n    // fetch device data\n  },\n\n  onFetchDevices: function onFetchDevices() {\n    var deviceUrl = \"/api/v0002/bulk/devices\";\n    var opts = {\n      url: deviceUrl,\n      contentType: \"application/json\"\n    };\n\n    if (this.auth.apiKey !== null) {\n      // if running as localhost\n      opts.url += \"?org=\" + this.auth.org + \"&apiKey=\" + this.auth.apiKey + \"&apiToken=\" + this.auth.apiToken;\n    }\n\n    //console.log(opts);\n    var self = this;\n    $.ajax(opts).done(function (response) {\n      //console.log(response);\n      try {\n        if (response.meta && response.meta.total_rows) {\n          self.trigger({\n            devices: response.results\n          });\n        } else {\n          // handle bad result?\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }).fail(function (response) {\n      console.error(response);\n    });\n  },\n\n  handlePendingSubscribes: function handlePendingSubscribes() {\n    // handle subscribes that happened before connect\n    var topic;\n    for (var i in this.watches.devices) {\n      topic = \"iot-2/type/+/id/\" + this.watches.devices[i] + \"/evt/+/fmt/json\";\n      console.debug(\"subscribing to \" + topic);\n      this.client.subscribe(topic);\n    }\n\n    for (var j in this.watches.properties) {\n      var deviceId = this.watches.properties[j].split(\"_|_\")[0];\n      var event = this.watches.properties[j].split(\"_|_\")[1];\n      topic = \"iot-2/type/+/id/\" + deviceId + \"/evt/\" + event + \"/fmt/json\";\n      console.debug(\"subscribing to \" + topic);\n      this.client.subscribe(topic);\n    }\n  },\n\n  /**\n  * Returns the cache object.\n  */\n  getCache: function getCache() {\n    return this.cache ? this.cache : {};\n  },\n\n  /**\n  * Get the last value and timestamp for a property from the cache\n  */\n  getFromCache: function getFromCache(device, event, property) {\n    var cache = this.getCache();\n    var obj = cache[device];\n    if (obj) {\n      obj = obj[event];\n      if (obj) {\n        if (property) {\n          return obj[property];\n        } else {\n          return obj;\n        }\n      }\n    }\n    return null;\n  },\n\n  /**\n  * Caches all devices, events and property names to have something to prefill comboboxes.\n  * Use this also to have the last value without extra query.\n  */\n  addToCache: function addToCache(device, event, data, timestamp) {\n    if (!this.cache[device]) {\n      this.cache[device] = {};\n    }\n    if (!this.cache[device][event]) {\n      this.cache[device][event] = {};\n    }\n    var obj = this.cache[device][event];\n    var props = this.generateListOfProperties(data, null, timestamp);\n    if (props) {\n      Object.assign(obj, props);\n    }\n    return props;\n  },\n\n  /*\n  * Creates a flattened list of properties for the event data. Used for caching.\n  */\n  generateListOfProperties: function generateListOfProperties(data, prefix, timestamp) {\n    var result = {};\n    if (prefix) {\n      prefix = prefix + \".\";\n    } else {\n      prefix = \"\";\n    }\n    if (prefix == \"d.\" || prefix == \"g.\") {\n      prefix = \"\";\n    }\n    for (var i in data) {\n      var item = data[i];\n      if ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) == \"object\") {\n        Object.assign(result, this.generateListOfProperties(item, prefix + i, timestamp));\n      } else if (item !== undefined) {\n        result[prefix + i] = {\n          value: item,\n          timestamp: timestamp\n        };\n      }\n    }\n    return result;\n  },\n\n  /*\n  * Device watch will trigger when any message is received from the device.\n  */\n  onStartDeviceWatch: function onStartDeviceWatch(deviceId) {\n    console.debug(\"onStartDeviceWatch -- \", deviceId);\n    var topic = \"iot-2/type/+/id/\" + deviceId + \"/evt/+/fmt/json\";\n    if (this.watches.devices.indexOf(deviceId) == -1) {\n      this.watches.devices.push(deviceId);\n\n      // is there already a connection? -> subscribe right away\n      if (this.state == State.CONNECTED) {\n        this.client.subscribe(topic);\n      }\n\n      // TODO Query history for full device\n    }\n  },\n\n  /**\n  * Strips of a leading d. or g. prefix. This is necessary since the historian returns the property names without prefix.\n  * Therefore we have to normalize it.\n  */\n  normalizeProperty: function normalizeProperty(property) {\n    var hasPrefix = property.indexOf(\"d.\") === 0 || property.indexOf(\"g.\") === 0;\n    if (hasPrefix) {\n      property = property.substring(2);\n    }\n    return property;\n  },\n\n  /**\n  * Same as normalizeProperty for the full payload of an MQTT message.\n  */\n  normalizePayload: function normalizePayload(payload) {\n    if (payload && payload.d) {\n      payload = payload.d;\n    } else if (payload && payload.g) {\n      payload = payload.g;\n    }\n\n    return payload;\n  },\n\n  /**\n  * Unsubscribes from device watch.\n  */\n  onStopDeviceWatch: function onStopDeviceWatch(deviceId) {\n    console.debug(\"onStopDeviceWatch -- \", deviceId);\n    var topic = \"iot-2/type/+/id/\" + deviceId + \"/evt/+/fmt/json\";\n    this.client.unsubscribe(topic);\n    delete this.watches.devices[this.watches.devices.indexOf(deviceId)];\n  },\n\n  /**\n  * Event watch will trigger when a specific event is received from the device.\n  */\n  onStartEventWatch: function onStartEventWatch(deviceId, event) {\n    this.onStartPropertyWatch(deviceId, event, null);\n  },\n\n  /**\n  * Unsubscribes from event watch.\n  */\n  onStopEventWatch: function onStopEventWatch(deviceId, event, property) {\n    this.onStartPropertyWatch(deviceId, event, null);\n  },\n\n  /**\n  * Checks if we are already watching this property.\n  */\n  isWatching: function isWatching(device, event, property) {\n    return this.watches.properties.indexOf(device + \"_|_\" + event + \"_|_\" + property) > -1;\n  },\n\n  /**\n  * Checks if we already have a watch for this event since subscription is always on event level.\n  * Counts the number of property watches for that event.\n  */\n  isWatchingEvent: function isWatchingEvent(device, event) {\n    var count = 0;\n    for (var i in this.watches.properties) {\n      if (this.watches.properties[i].split(\"_|_\")[0] === device && this.watches.properties[i].split(\"_|_\")[1] === event) {\n        count++;\n      }\n    }\n    return count;\n  },\n\n  /**\n  * Add an entry in the list of watched properties.\n  */\n  addWatch: function addWatch(device, event, property) {\n    this.watches.properties.push(device + \"_|_\" + event + \"_|_\" + property);\n  },\n\n  /**\n  * Gets the device type for a device. This is necessary to make a historian request.\n  * Therefore we handle multiple request in a list of callback.\n  */\n  getDeviceType: function getDeviceType(device, callback) {\n    var self = this;\n\n    // check if we have it in cache\n    if (this.deviceTypes[device]) {\n      var obj = this.deviceTypes[device];\n      // We have an entry for this device type. This can be the deviceType itself or an array of\n      // callbacks because others are already waiting for it.\n      if ($.isArray(obj)) {\n        // Add the callback to the list.\n        obj.push(callback);\n      } else {\n        // we already have a value -> return it\n        callback(obj);\n      }\n      return;\n    } else {\n      // create an array of callback to handle multiple requestors\n      this.deviceTypes[device] = [callback];\n    }\n\n    // handle callbacks for all requests\n    var deliverDeviceType = function deliverDeviceType(deviceType) {\n      var obj = self.deviceTypes[device];\n      // set the value\n      self.deviceTypes[device] = deviceType;\n\n      // call the callbacks\n      for (var i in obj) {\n        obj[i](deviceType);\n      }\n    };\n\n    // we do not have it in cache -> make a request\n    // get credentials for historian request\n    var auth = IoTFAuthStore.getAuth();\n    auth = {\n      ltpa: encodeURIComponent(auth.ltpa),\n      org: encodeURIComponent(auth.org),\n      apiKey: encodeURIComponent(auth.apiKey),\n      apiToken: encodeURIComponent(auth.apiToken)\n    };\n\n    var deviceUrl = \"/api/v0002/bulk/devices?deviceId=\" + device;\n    var opts = {\n      url: deviceUrl,\n      contentType: \"application/json\"\n    };\n    if (auth.apiKey != null) {\n      // if running as localhost\n      opts.url += \"&org=\" + auth.org + \"&apiKey=\" + auth.apiKey + \"&apiToken=\" + auth.apiToken;\n    }\n    var self = this;\n\n    console.debug(\"getDeviceType -- \", device);\n\n    $.ajax(opts).done(function (response) {\n      try {\n        if (response.results && response.results[0] && response.results[0].typeId) {\n          var typeId = response.results[0].typeId;\n          deliverDeviceType(typeId);\n        } else {\n          // handle bad result?\n          deliverDeviceType(null);\n        }\n      } catch (e) {\n        console.error(e);\n        deliverDeviceType(null);\n      }\n    }).fail(function (response) {\n      console.error(response);\n      deliverDeviceType(null);\n    });\n  },\n\n  /**\n  * Publishes the values in the cache for this property. Returns false if nothing found.\n  */\n  publishCachedValues: function publishCachedValues(deviceId, event, property) {\n    var data = this.getFromCache(deviceId, event, property);\n\n    // Currently all calls are event calls without property\n\n    if (property) {\n      // This is a single property watch. Send only this property.\n      if (data && data.value !== undefined) {\n        var payload = {};\n        payload[property] = data.value;\n        this.trigger({\n          deviceEvent: {\n            deviceId: deviceId,\n            eventType: event,\n            data: payload,\n            timestamp: new Date(data.timestamp).toISOString()\n          }\n        });\n        return true;\n      }\n    } else {\n      // This is an event watch. Send a payload for the whole event\n      if (data) {\n        payload = {};\n        var timestamp = null;\n\n        var keys = Object.keys(data);\n        for (var i in keys) {\n          var entry = data[keys[i]];\n          payload[keys[i]] = entry.value;\n          timestamp = entry.timestamp;\n        }\n        this.trigger({\n          deviceEvent: {\n            deviceId: deviceId,\n            eventType: event,\n            data: payload,\n            timestamp: new Date(timestamp).toISOString()\n          }\n        });\n        return true;\n      }\n    }\n    return false;\n  },\n\n  /**\n  * Property Watch will trigger when a specific property (JSON) on an event is received from the device.\n  * Used for property and event watch.\n  */\n  onStartPropertyWatch: function onStartPropertyWatch(deviceId, event, property) {\n    console.debug(\"onStartPropertyWatch -- \", deviceId, event, property);\n    var topic = \"iot-2/type/+/id/\" + deviceId + \"/evt/\" + event + \"/fmt/json\";\n\n    // remove d. and g. prefix\n    if (property) {\n      property = this.normalizeProperty(property);\n    }\n\n    // check before we modify the list of watches\n    var alreadyWatchingEvent = this.isWatchingEvent(deviceId, event);\n\n    // this is the first time somebody is subscribing for that property\n    if (!this.isWatching(deviceId, event, property)) {\n      this.addWatch(deviceId, event, property);\n\n      // only subscribe if we are the first property watch to match this event\n      if (this.isWatchingEvent(deviceId, event) === 1) {\n        // is there already a connection? -> subscribe right away\n        if (this.state == State.CONNECTED) {\n          this.client.subscribe(topic);\n        }\n      }\n    }\n\n    // check if someone already requested that event\n    if (alreadyWatchingEvent > 0) {\n      // Somebody already subscribed for this property.\n      // Option 1: We find something in cache\n      // Option 2: There is nothing in cache, but there must be an inflight historian request -> just wait and do nothing\n\n      // check if we find historic values in cache\n      this.publishCachedValues(deviceId, event);\n      return;\n    } else {\n      // This is the first request for this event. Make it an event request to avoid duplicate historian calls.\n      property = null;\n    }\n\n    // TODO Avoid duplicate historian calls for multiple properties of an event\n\n    // call historian API to fetch last value for this event\n\n    // get credentials for historian request\n    var auth = IoTFAuthStore.getAuth();\n    auth = {\n      ltpa: encodeURIComponent(auth.ltpa),\n      org: encodeURIComponent(auth.org),\n      apiKey: encodeURIComponent(auth.apiKey),\n      apiToken: encodeURIComponent(auth.apiToken)\n    };\n\n    var self = this;\n    this.getDeviceType(deviceId, function (deviceType) {\n      // get the last 100 messages of that event to get the latest values\n      var now = new Date().getTime();\n      var historianUrl = \"/api/v0002/historian/types/\" + deviceType + \"/devices/\" + deviceId + \"?evt_type=\" + event + \"&start=\" + (now - self.lastValueInterval) + \"&end=\" + now;\n      var opts = {\n        url: historianUrl,\n        contentType: \"application/json\"\n      };\n      if (auth.apiKey != null) {\n        // if running as localhost\n        opts.url += \"&org=\" + auth.org + \"&apiKey=\" + auth.apiKey + \"&apiToken=\" + auth.apiToken;\n      }\n\n      console.debug(\" -> query historian -- \", deviceId, event, property);\n\n      // Queue the requests to avoid having 50 request at a time. This would result in slow interaction and\n      // delayed image loading\n      self.queueHistorianRequests(opts);\n    });\n  },\n\n  /**\n  * Do not send all historian requests at a time. Images would not load for seconds and UI would be slow.\n  */\n  queueHistorianRequests: function queueHistorianRequests(opts) {\n    var self = this;\n    this.historianRequests.push(opts);\n    if (!this.historianTimer) {\n      this.historianTimer = setTimeout(function () {\n        self.historianTimer = null;\n        self.performHistorianRequest();\n      }, this.historianRequestDelay);\n    }\n  },\n\n  performHistorianRequest: function performHistorianRequest() {\n    var self = this;\n    if (this.historianRequests.length > 0) {\n      if (!this.historianTimer) {\n        this.historianTimer = setTimeout(function () {\n          self.historianTimer = null;\n          self.performHistorianRequest();\n        }, this.historianRequestDelay);\n      }\n\n      var opts = this.historianRequests.shift();\n      $.ajax(opts).done(function (response) {\n        try {\n          if (response.events) {\n\n            // add result to cache, beginning with oldest to the newest event\n            var items = response.events;\n            var deviceId = null;\n            var event = null;\n            for (var i = items.length - 1; i >= 0; i--) {\n              var item = items[i];\n              deviceId = item.device_id;\n              event = item.evt_type;\n              self.addToCache(item.device_id, item.evt_type, item.evt, item.timestamp[\"$date\"]);\n            }\n\n            self.publishCachedValues(deviceId, event);\n          } else {\n            // handle bad result?\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }).fail(function (response) {\n        console.error(response);\n      });\n    }\n  },\n\n  onStopPropertyWatch: function onStopPropertyWatch(deviceId, event, property) {\n    console.debug(\"onStopPropertyWatch -- \", deviceId, event, property);\n    delete this.watches.properties[this.watches.properties.indexOf(deviceId + \"_|_\" + event + \"_|_\" + property)];\n\n    // only unsubscribe if there are no other properties watched on this event,\n    // or if the event is being watched separately\n    for (var i in this.watches.properties) {\n      if (this.watches.properties[i].split(\"_|_\")[0] === deviceId && this.watches.properties[i].split(\"_|_\")[1] === event) {\n        return;\n      }\n    }\n\n    var topic = \"iot-2/type/+/id/\" + deviceId + \"/evt/\" + event + \"/fmt/json\";\n    console.debug(\"unsubscribing from \" + topic);\n    this.client.unsubscribe(topic);\n  }\n});\n\nmodule.exports = IoTFDeviceStore;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/util/Const\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/Const.js\",\"./IoTFAuthStore.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFAuthStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFUsageStore.js\":[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar Reflux = (typeof window !== \"undefined\" ? window['Reflux'] : typeof global !== \"undefined\" ? global['Reflux'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar Const = require('../../Dashboard/util/Const');\nvar IoTFAuthStore = require('./IoTFAuthStore.js');\n\nvar Actions = Reflux.createActions(['fetchDeviceCount', 'fetchDataTrafficUsage', 'fetchActiveDeviceUsage', 'fetchHistoricalDataUsage', 'fetchDeviceTypes']);\n\nvar IoTFUsageStore = Reflux.createStore({\n\n\tActions: Actions,\n\n\tstate: Const.DISCONNECTED,\n\n\tauth: {\n\n\t\t// org: encodeURIComponent(\"6qkzjf\"),\n\t\t// apiKey: encodeURIComponent(\"a-6qkzjf-3egnjdo5qy\"),\n\t\t// apiToken: encodeURIComponent(\"CW-aWx_sGeFGc&F?ls\")\n\n\t\t// org: \"jgccc5\",\n\t\t// apiKey: \"a-jgccc5-tkutlvvnem\",\n\t\t// apiToken: \"YfqMJVD18qcH@ispr0\"\n\n\t},\n\n\tinit: function init() {\n\t\tvar self = this;\n\t\tthis.listenTo(Actions.fetchDeviceTypes, this.onFetchDeviceTypes);\n\t\tthis.listenTo(Actions.fetchDeviceCount, this.onFetchDeviceCount);\n\t\tthis.listenTo(Actions.fetchDataTrafficUsage, this.onFetchDataTrafficUsage);\n\t\tthis.listenTo(Actions.fetchActiveDeviceUsage, this.onFetchActiveDeviceUsage);\n\t\tthis.listenTo(Actions.fetchHistoricalDataUsage, this.onFetchHistoricalDataUsage);\n\n\t\tIoTFAuthStore.listen(function (payload) {\n\t\t\tconsole.log(\"Retrieving auth:\");\n\t\t\tself.auth = {\n\t\t\t\tltpa: payload.ltpa !== null ? encodeURIComponent(payload.ltpa) : null,\n\t\t\t\tdomain: encodeURIComponent(payload.domain),\n\t\t\t\torg: encodeURIComponent(payload.org),\n\t\t\t\tapiKey: payload.apiKey !== null ? encodeURIComponent(payload.apiKey) : null,\n\t\t\t\tapiToken: payload.apiToken !== null ? encodeURIComponent(payload.apiToken) : null\n\t\t\t};\n\t\t\tconsole.log(self.auth);\n\t\t});\n\t},\n\n\tonFetchDeviceCount: function onFetchDeviceCount() {\n\t\t//var deviceUrl = \"https://\" + IoTFCredentials.org + \".internetofthings.ibmcloud.com/\";\n\t\tvar opts = {\n\t\t\turl: \"/api/v0002/bulk/devices\",\n\t\t\tcontentType: \"application/json\"\n\t\t};\n\t\tif (this.auth.apiKey !== null && this.auth.domain && this.auth.domain.match(\"internetofthings\") === null) {\n\t\t\t// if running as localhost\n\t\t\topts.url += \"?org=\" + this.auth.org + \"&apiKey=\" + this.auth.apiKey + \"&apiToken=\" + this.auth.apiToken;\n\t\t} else if (this.auth.ltpa === null && this.auth.apiKey !== null && this.auth.apiToken !== null) {\n\t\t\topts.headers = {\n\t\t\t\t\"Authorization\": \"Basic \" + btoa(this.auth.apiKey + \":\" + this.auth.apiToken)\n\t\t\t};\n\t\t}\n\t\tconsole.log(opts);\n\t\tvar self = this;\n\t\t$.ajax(opts).done(function (response) {\n\t\t\tconsole.log(response);\n\t\t\ttry {\n\t\t\t\tif (response.meta && response.meta.total_rows) {\n\t\t\t\t\tself.trigger({\n\t\t\t\t\t\tdeviceCount: response.meta.total_rows\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// handle bad result?\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}).fail(function (response) {\n\t\t\tconsole.error(response);\n\t\t});\n\t},\n\n\tonFetchDeviceTypes: function onFetchDeviceTypes() {\n\t\t//var deviceUrl = \"https://\" + IoTFCredentials.org + \".internetofthings.ibmcloud.com/\";\n\t\tvar opts = {\n\t\t\turl: \"/api/v0001/device-types\",\n\t\t\tcontentType: \"application/json\"\n\t\t};\n\t\tconsole.log(\"DOMAIN\", this.auth.domain);\n\t\tconsole.log(\"AUTH\", this.auth);\n\t\t//\t\tif (this.auth.apiKey !== null && this.auth.domain && this.auth.domain.match(\"internetofthings\") === null) {\n\t\tif (this.auth.apiKey !== null && location.hostname.match(\"internetofthings\") === null) {\n\t\t\t// if running as localhost\n\t\t\topts.url += \"?org=\" + this.auth.org + \"&apiKey=\" + this.auth.apiKey + \"&apiToken=\" + this.auth.apiToken;\n\t\t} else if (this.auth.ltpa === null && this.auth.apiKey !== null && this.auth.apiToken !== null) {\n\t\t\topts.headers = {\n\t\t\t\t\"Authorization\": \"Basic \" + btoa(this.auth.apiKey + \":\" + this.auth.apiToken)\n\t\t\t};\n\t\t}\n\t\tconsole.log(opts);\n\t\tvar self = this;\n\n\t\tvar sortDeviceTypes = function sortDeviceTypes(a, b) {\n\t\t\tif (!a || !b) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (a.count < b.count) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (a.count > b.count) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t};\n\n\t\t$.ajax(opts).done(function (response) {\n\t\t\tconsole.log(response);\n\t\t\ttry {\n\t\t\t\tresponse.sort(sortDeviceTypes);\n\t\t\t\tself.trigger({\n\t\t\t\t\tdeviceTypes: response\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}).fail(function (response) {\n\t\t\tconsole.error(response);\n\t\t});\n\t},\n\n\tonFetchDataTrafficUsage: function onFetchDataTrafficUsage() {\n\t\tconsole.debug(\"IoTFUsageStore::onFetchDataTrafficUsage\");\n\n\t\tvar today = new Date();\n\t\tvar offset = -today.getTimezoneOffset(); // convert to UTC\n\t\ttoday = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1, 0, 0 + offset, -1);\n\t\tvar lastMonthStart = new Date(today.getFullYear(), today.getMonth() - 1, 1, 0, 0 + offset);\n\t\tvar thisMonthStart = new Date(today.getFullYear(), today.getMonth(), 1, 0, 0 + offset, 0);\n\t\tvar rangeStart = lastMonthStart.toISOString().split(\"T\")[0];\n\t\tvar rangeEnd = today.toISOString().split(\"T\")[0];\n\n\t\tvar self = this;\n\n\t\t// FLM: This API does not show sensible values\n\t\t// var lastMonthOpts = {\n\t\t// \turl: \"/api/v0002/usage/data-traffic?start=\"+lastMonthStart+\"&end=\"+lastMonthEnd+\"&detail=false\",\n\t\t// \tcontentType: \"application/json\",\n\t\t// \tsuccess: function(response) {\n\t\t// \t\tconsole.debug(response);\n\t\t// \t\ttry {\n\t\t// \t\t\tif (response.average !== undefined) {\n\t\t// \t\t\t\tvar bytes = response.average;\n\t\t// \t\t\t\tself.trigger({ dataTrafficUsageLastMonth: (bytes / 1000000).toFixed(1) + \" MB\" });\n\t\t// \t\t\t}\n\t\t// \t\t} catch (e) { console.error(\"parse error: \" + response); }\n\t\t// \t}\n\t\t// };\n\t\t// if (this.auth.apiKey !== null) {\n\t\t// \t// if running as localhost\n\t\t// \tlastMonthOpts.url += \"&org=\"+this.auth.org+\"&apiKey=\"+this.auth.apiKey+\"&apiToken=\"+this.auth.apiToken;\n\t\t// }\n\n\t\t// var thisMonthOpts = {\n\t\t// \turl: \"/api/v0002/usage/data-traffic?start=\"+thisMonthStart+\"&end=\"+thisMonthEnd+\"&detail=false\",\n\t\t// \tcontentType: \"application/json\",\n\t\t// \tsuccess: function(response) {\n\t\t// \t\tconsole.debug(response);\n\t\t// \t\ttry {\n\t\t// \t\t\tif (response.average !== undefined) {\n\t\t// \t\t\t\tvar bytes = response.average;\n\t\t// \t\t\t\tself.trigger({ dataTrafficUsageThisMonth: (bytes / 1000000).toFixed(1) + \" MB\" });\n\t\t// \t\t\t}\n\t\t// \t\t} catch (e) { console.error(\"parse error: \" + response); }\n\t\t// \t}\n\t\t// };\n\t\t// if (this.auth.apiKey !== null) {\n\t\t// \t// if running as localhost\n\t\t// \tthisMonthOpts.url += \"&org=\"+this.auth.org+\"&apiKey=\"+this.auth.apiKey+\"&apiToken=\"+this.auth.apiToken;\n\t\t// }\n\n\t\t//$.ajax(lastMonthOpts);\n\t\t//$.ajax(thisMonthOpts);\n\n\t\tvar rangeOpts = {\n\t\t\turl: \"/api/v0002/usage/data-traffic?start=\" + rangeStart + \"&end=\" + rangeEnd + \"&detail=true\",\n\t\t\tcontentType: \"application/json\",\n\t\t\tsuccess: function success(response) {\n\t\t\t\tconsole.debug(response);\n\t\t\t\ttry {\n\t\t\t\t\tif (response.days !== undefined) {\n\t\t\t\t\t\tvar days = response.days;\n\t\t\t\t\t\tvar sumThisMonth = 0;\n\t\t\t\t\t\tvar sumLastMonth = 0;\n\t\t\t\t\t\tvar todaysConsumption = 0;\n\t\t\t\t\t\tfor (var i in days) {\n\t\t\t\t\t\t\tvar date = new Date(days[i].date);\n\t\t\t\t\t\t\tvar offset = -date.getTimezoneOffset(); // convert to UTC\n\t\t\t\t\t\t\tdate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0 + offset, 0);\n\n\t\t\t\t\t\t\tvar day = days[i];\n\t\t\t\t\t\t\tif (lastMonthStart <= date && thisMonthStart > date) {\n\t\t\t\t\t\t\t\tsumLastMonth += day.total;\n\t\t\t\t\t\t\t} else if (thisMonthStart <= date && today >= date) {\n\t\t\t\t\t\t\t\tsumThisMonth += day.total;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// handle todays entry\n\t\t\t\t\t\t\tif (i == days.length - 1) {\n\t\t\t\t\t\t\t\ttodaysConsumption = day.total;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdays[i].total = parseFloat((day.total / 1048576).toFixed(3));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// consumption this month\n\t\t\t\t\t\tsumThisMonth = sumThisMonth / 1048576;\n\t\t\t\t\t\tsumLastMonth = sumLastMonth / 1048576;\n\t\t\t\t\t\ttodaysConsumption = todaysConsumption / 1048576;\n\t\t\t\t\t\tself.trigger({\n\t\t\t\t\t\t\tdataTrafficUsageDetails: days,\n\t\t\t\t\t\t\tdataTrafficUsageThisMonth: sumThisMonth.toFixed(1) + \" MB\",\n\t\t\t\t\t\t\tdataTrafficUsageLastMonth: sumLastMonth.toFixed(1) + \" MB\",\n\t\t\t\t\t\t\tdataTrafficUsageToday: todaysConsumption.toFixed(1) + \" MB\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"parse error: \" + response);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tif (this.auth.apiKey !== null) {\n\t\t\t// if running as localhost\n\t\t\trangeOpts.url += \"&org=\" + this.auth.org + \"&apiKey=\" + this.auth.apiKey + \"&apiToken=\" + this.auth.apiToken;\n\t\t}\n\n\t\t$.ajax(rangeOpts);\n\t},\n\n\tonFetchActiveDeviceUsage: function onFetchActiveDeviceUsage() {\n\t\tconsole.debug(\"IoTFUsageStore::onFetchActiveDeviceUsage\");\n\n\t\tvar today = new Date();\n\t\tvar lastMonthStart = new Date(today.getFullYear(), today.getMonth() - 1, 1).toISOString().split(\"T\")[0];\n\t\tvar lastMonthEnd = new Date(today.getFullYear(), today.getMonth(), 0).toISOString().split(\"T\")[0];\n\t\tvar thisMonthStart = new Date(today.getFullYear(), today.getMonth(), 1).toISOString().split(\"T\")[0];\n\t\tvar thisMonthEnd = today.toISOString().split(\"T\")[0];\n\t\tvar rangeStart = new Date(today.getFullYear(), today.getMonth() - 1, 1).toISOString().split(\"T\")[0];\n\t\tvar rangeEnd = today.toISOString().split(\"T\")[0];\n\n\t\tvar self = this;\n\n\t\tvar lastMonthOpts = {\n\t\t\turl: \"/api/v0002/usage/active-devices?start=\" + lastMonthStart + \"&end=\" + lastMonthEnd + \"&detail=false\",\n\t\t\tcontentType: \"application/json\",\n\t\t\tsuccess: function success(response) {\n\t\t\t\tconsole.debug(response);\n\t\t\t\ttry {\n\t\t\t\t\tif (response.average !== undefined) {\n\t\t\t\t\t\tself.trigger({ activeDeviceUsageLastMonth: response.average.toFixed(1) });\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"parse error: \" + response);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tif (this.auth.apiKey !== null) {\n\n\t\t\t// if running as localhost\n\t\t\tlastMonthOpts.url += \"&org=\" + this.auth.org + \"&apiKey=\" + this.auth.apiKey + \"&apiToken=\" + this.auth.apiToken;\n\t\t}\n\n\t\tvar thisMonthOpts = {\n\t\t\turl: \"/api/v0002/usage/active-devices?start=\" + thisMonthStart + \"&end=\" + thisMonthEnd + \"&detail=false\",\n\t\t\tcontentType: \"application/json\",\n\t\t\tsuccess: function success(response) {\n\t\t\t\tconsole.debug(response);\n\t\t\t\ttry {\n\t\t\t\t\tif (response.average !== undefined) {\n\t\t\t\t\t\tself.trigger({ activeDeviceUsageThisMonth: response.average.toFixed(1) });\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"parse error: \" + response);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tif (this.auth.apiKey !== null) {\n\t\t\t// if running as localhost\n\t\t\tthisMonthOpts.url += \"&org=\" + this.auth.org + \"&apiKey=\" + this.auth.apiKey + \"&apiToken=\" + this.auth.apiToken;\n\t\t}\n\n\t\tvar rangeOpts = {\n\t\t\turl: \"/api/v0002/usage/active-devices?start=\" + rangeStart + \"&end=\" + rangeEnd + \"&detail=true\",\n\t\t\tcontentType: \"application/json\",\n\t\t\tsuccess: function success(response) {\n\t\t\t\tconsole.debug(response);\n\t\t\t\ttry {\n\t\t\t\t\tif (response.days !== undefined) {\n\t\t\t\t\t\tself.trigger({ activeDeviceUsageDetails: response.days });\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"parse error: \" + response);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tif (this.auth.apiKey !== null) {\n\t\t\t// if running as localhost\n\t\t\trangeOpts.url += \"&org=\" + this.auth.org + \"&apiKey=\" + this.auth.apiKey + \"&apiToken=\" + this.auth.apiToken;\n\t\t}\n\n\t\tconsole.log(lastMonthOpts, thisMonthOpts);\n\n\t\t$.ajax(lastMonthOpts);\n\t\t$.ajax(thisMonthOpts);\n\t\t$.ajax(rangeOpts);\n\t},\n\n\tonFetchHistoricalDataUsage: function onFetchHistoricalDataUsage() {\n\t\tconsole.debug(\"IoTFUsageStore::onFetchActiveDeviceUsage\");\n\n\t\tvar today = new Date();\n\t\tvar offset = -today.getTimezoneOffset(); // convert to UTC\n\t\ttoday = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1, 0, 0 + offset, -1);\n\t\tvar lastMonthStart = new Date(today.getFullYear(), today.getMonth() - 1, 1, 0, 0 + offset);\n\t\tvar thisMonthStart = new Date(today.getFullYear(), today.getMonth(), 1, 0, 0 + offset, 0);\n\t\tvar rangeStart = lastMonthStart.toISOString().split(\"T\")[0];\n\t\tvar rangeEnd = today.toISOString().split(\"T\")[0];\n\n\t\tvar self = this;\n\n\t\t// var lastMonthOpts = {\n\t\t// \turl: \"/api/v0002/usage/historical-data?start=\"+lastMonthStart+\"&end=\"+lastMonthEnd+\"&detail=false\",\n\t\t// \tcontentType: \"application/json\",\n\t\t// \tsuccess: function(response) {\n\t\t// \t\tconsole.debug(response);\n\t\t// \t\ttry {\n\t\t// \t\t\tif (response.average !== undefined) {\n\t\t// \t\t\t\tvar bytes = response.average;\n\t\t// \t\t\t\tself.trigger({ historicalDataUsageLastMonth: (bytes / 1000000).toFixed(1) + \" MB\" });\n\t\t// \t\t\t}\n\t\t// \t\t} catch (e) { console.error(\"parse error: \" + response); }\n\t\t// \t}\n\t\t// };\n\t\t// if (this.auth.apiKey !== null) {\n\t\t// \t// if running as localhost\n\t\t// \tlastMonthOpts.url += \"&org=\"+this.auth.org+\"&apiKey=\"+this.auth.apiKey+\"&apiToken=\"+this.auth.apiToken;\n\t\t// }\n\n\t\t// var thisMonthOpts = {\n\t\t// \turl: \"/api/v0002/usage/historical-data?start=\"+thisMonthStart+\"&end=\"+thisMonthEnd+\"&detail=false\",\n\t\t// \tcontentType: \"application/json\",\n\t\t// \tsuccess: function(response) {\n\t\t// \t\tconsole.debug(response);\n\t\t// \t\ttry {\n\t\t// \t\t\tif (response.average !== undefined) {\n\t\t// \t\t\t\tvar bytes = response.average;\n\t\t// \t\t\t\tself.trigger({ historicalDataUsageThisMonth: (bytes / 1000000).toFixed(1) + \" MB\" });\n\t\t// \t\t\t}\n\t\t// \t\t} catch (e) { console.error(\"parse error: \" + response); }\n\t\t// \t}\n\t\t// };\n\t\t// if (this.auth.apiKey !== null) {\n\t\t// \t// if running as localhost\n\t\t// \tthisMonthOpts.url += \"&org=\"+this.auth.org+\"&apiKey=\"+this.auth.apiKey+\"&apiToken=\"+this.auth.apiToken;\n\t\t// }\n\n\t\t// $.ajax(lastMonthOpts);\n\t\t// $.ajax(thisMonthOpts);\n\n\t\tvar rangeOpts = {\n\t\t\turl: \"/api/v0002/usage/historical-data?start=\" + rangeStart + \"&end=\" + rangeEnd + \"&detail=true\",\n\t\t\tcontentType: \"application/json\",\n\t\t\tsuccess: function success(response) {\n\t\t\t\tconsole.debug(response);\n\t\t\t\ttry {\n\t\t\t\t\tif (response.days !== undefined) {\n\t\t\t\t\t\tvar days = response.days;\n\t\t\t\t\t\tvar valueThisMonth = 0;\n\t\t\t\t\t\tvar valueLastMonth = 0;\n\t\t\t\t\t\tvar todaysConsumption = 0;\n\t\t\t\t\t\tvar lastValue = 0;\n\t\t\t\t\t\tfor (var i in days) {\n\t\t\t\t\t\t\tvar date = new Date(days[i].date);\n\t\t\t\t\t\t\tvar offset = -date.getTimezoneOffset(); // convert to UTC\n\t\t\t\t\t\t\tdate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0 + offset, 0);\n\n\t\t\t\t\t\t\tvar day = days[i];\n\t\t\t\t\t\t\tif (lastMonthStart <= date && thisMonthStart > date) {\n\t\t\t\t\t\t\t\tif (day.total > valueLastMonth) {\n\t\t\t\t\t\t\t\t\tvalueLastMonth = day.total;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (thisMonthStart <= date && today >= date) {\n\t\t\t\t\t\t\t\tif (day.total > valueThisMonth) {\n\t\t\t\t\t\t\t\t\tvalueThisMonth = day.total;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// handle todays entry\n\t\t\t\t\t\t\tif (i == days.length - 1) {\n\t\t\t\t\t\t\t\ttodaysConsumption = day.total - lastValue;\n\t\t\t\t\t\t\t\tif (todaysConsumption < 0) {\n\t\t\t\t\t\t\t\t\ttodaysConsumption = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (date.getDate() == 1) {\n\t\t\t\t\t\t\t\t\ttodaysConsumption = day.total;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastValue = day.total;\n\t\t\t\t\t\t\tdays[i].total = parseFloat((day.total / 1024).toFixed(3));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// consumption this month\n\t\t\t\t\t\tvalueThisMonth = valueThisMonth / 1024;\n\t\t\t\t\t\tvalueLastMonth = valueLastMonth / 1024;\n\t\t\t\t\t\ttodaysConsumption = todaysConsumption / 1024;\n\n\t\t\t\t\t\tself.trigger({\n\t\t\t\t\t\t\thistoricalDataUsageDetails: days,\n\t\t\t\t\t\t\thistoricalDataUsageThisMonth: valueThisMonth.toFixed(1) + \" MB\",\n\t\t\t\t\t\t\thistoricalDataUsageLastMonth: valueLastMonth.toFixed(1) + \" MB\",\n\t\t\t\t\t\t\tdataUsageToday: todaysConsumption.toFixed(1) + \" MB\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"parse error: \" + response);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tif (this.auth.apiKey !== null) {\n\t\t\t// if running as localhost\n\t\t\trangeOpts.url += \"&org=\" + this.auth.org + \"&apiKey=\" + this.auth.apiKey + \"&apiToken=\" + this.auth.apiToken;\n\t\t}\n\n\t\t$.ajax(rangeOpts);\n\t}\n});\n\nmodule.exports = IoTFUsageStore;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../Dashboard/util/Const\":\"/Users/frank/Documents/Projects/IOTFoundation/components/Dashboard/util/Const.js\",\"./IoTFAuthStore.js\":\"/Users/frank/Documents/Projects/IOTFoundation/components/common/stores/IoTFAuthStore.js\"}],\"/Users/frank/Documents/Projects/IOTFoundation/components/experimental/experimental.jsx\":[function(require,module,exports){\n\"use strict\";\n\nvar experimental = {};\n\n//experimental.XXX = require('./YYY/XXX.js');\n\n//experimental.UserStore = require('./stores/UserStore.js');\n//experimental.DeviceStore = require('./stores/DeviceStore.js');\n\n//experimental.StaticChart = require('./cards/StaticChart.jsx');\n//experimental.EmptyComponent = require('./cards/EmptyComponent.jsx');\n//experimental.Webcam = require('./cards/Webcam.jsx');\n//experimental.SimpleTextCard = require('./cards/SimpleTextCard.jsx');\n//experimental.ImageCard = require('./cards/ImageCard.jsx');\n//experimental.SimpleSlider = require('./cards/SimpleSlider.jsx');\n//experimental.UserCardTable = require('./cards/UserCardTable.jsx');\n//experimental.TableUser = require('./cards/TableUser.jsx');\n//experimental.PushButtonCard = require('./cards/PushButtonCard.jsx');\n//experimental.DashboardLink = require('./cards/DashboardLink.jsx');\n//experimental.RouterLink = require('./cards/RouterLink.jsx');\n//experimental.DeviceMap = require('./cards/DeviceMap.jsx');\n//experimental.TestComponent = require('./cards/TestComponent.jsx');\n//experimental.UserDetails = require('./cards/UserDetails.jsx');\n//experimental.ConfigSSO = require('./cards/ConfigSSO.jsx');\n//experimental.AddMember = require('./cards/AddMember.jsx');\n//experimental.Login = require('./cards/Login.jsx');\n//experimental.SSOSignIn = require('./cards/SSOSignIn.jsx');\n//experimental.AAAUserDetails = require('./cards/AAAUserDetails.jsx');\n//experimental.Container = require('./cards/Container.jsx');\n//experimental.PV = require('./cards/PV.jsx');\n\nmodule.exports = experimental;\n\n},{}]},{},[\"/Users/frank/Documents/Projects/IOTFoundation/components/IoTFComponents.jsx\"])(\"/Users/frank/Documents/Projects/IOTFoundation/components/IoTFComponents.jsx\")\n});"],"file":"IoTFComponents.js","sourceRoot":"/source/"}